{
  "tag": {
    "main": {
      "bridge:tag": {
        "description": {
          "identifier": "$general.file_identifier",
          "animations": {
            "$placeholder": "$dynamic.animation_ids and $dynamic.animation_controller_ids"
          },
          "scripts": {
            "animate": {
              "$dynamic.list.next_index": "$dynamic.entity.animation_references"
            }
          }
        },
        "$load": "$entity.main.minecraft:entity"
      }
    },
    "main_beta": {
      "bridge:tag": {
        "description": {
          "identifier": "$general.file_identifier",
          "animations": {
            "$placeholder": "$dynamic.animation_ids and $dynamic.animation_controller_ids"
          },
          "scripts": {
            "animate": {
              "$dynamic.list.next_index": "$dynamic.entity.animation_references"
            }
          }
        },
        "$load": "$entity.main_beta.minecraft:entity"
      }
    }
  },
  "trade_table": {
    "main": {
      "tiers": {
        "$dynamic.list.next_index": {
          "total_exp_required": "$general.number",
          "trades": "$trade_table.general.trades",
          "groups": {
            "$dynamic.list.next_index": {
              "trades": "$trade_table.general.trades",
              "num_to_select": "$general.number"
            }
          }
        }
      }
    },
    "general": {
      "trades": {
        "$dynamic.list.next_index": {
          "wants": {
            "$dynamic.list.index_pair": {
              "item": "$general.item_identifier",
              "quantity": {
                "@import.value": "$general.number",
                "@meta": {
                  "validate": {
                    "confirm": "(Bridge.Node.children.length !== 2 && Bridge.Node.data === '') || Number.isNaN(Number(Bridge.Node.data))",
                    "then": {
                      "show": true,
                      "message": "Invalid data type: Expected min/max field or number"
                    }
                  }
                },
                "min": "$general.number",
                "max": "$general.number"
              },
              "functions": "$loot_table.functions",
              "price_multiplier": "$general.decimal"
            }
          },
          "gives": {
            "0": {
              "item": "$general.item_identifier",
              "quantity": {
                "@import.value": "$general.number",
                "@meta": {
                  "validate": {
                    "confirm": "(Bridge.Node.children.length !== 2 && Bridge.Node.data === '') || Number.isNaN(Number(Bridge.Node.data))",
                    "then": {
                      "show": true,
                      "message": "Invalid data type: Expected min/max field or number"
                    }
                  }
                },
                "min": "$general.number",
                "max": "$general.number"
              },
              "functions": "$loot_table.functions",
              "choice": {
                "$dynamic.list.next_index": {
                  "item": "$general.item_identifier",
                  "quantity": {
                    "@import.value": "$general.number",
                    "@meta": {
                      "validate": {
                        "confirm": "(Bridge.Node.children.length !== 2 && Bridge.Node.data === '') || Number.isNaN(Number(Bridge.Node.data))",
                        "then": {
                          "show": true,
                          "message": "Invalid data type: Expected min/max field or number"
                        }
                      }
                    },
                    "min": "$general.number",
                    "max": "$general.number"
                  },
                  "functions": "$loot_table.functions"
                }
              }
            }
          },
          "trader_exp": "$general.number",
          "max_uses": ["-1", "1", "2", "3", "4", "5", "6", "7"],
          "reward_exp": "$general.boolean"
        }
      }
    }
  },
  "manifest": {
    "main": {
      "format_version": "$general.number",
      "header": {
        "name": { "@meta": { "is_value": true } },
        "description": { "@meta": { "is_value": true } },
        "uuid": "$dynamic.utils.uuid",
        "version": { "$dynamic.list.index_triple": "$general.number" },
        "min_engine_version": {
          "$dynamic.list.index_triple": "$general.number"
        },
        "base_game_version": {
          "$dynamic.list.index_triple": "$general.number"
        },
        "lock_template_options": "$general.boolean"
      },
      "modules": {
        "$dynamic.list.next_index": {
          "type": "$manifest.general.module_type",
          "description": { "@meta": { "is_value": true } },
          "uuid": "$dynamic.utils.uuid",
          "version": { "$dynamic.list.index_triple": "$general.number" }
        }
      },
      "dependencies": {
        "$dynamic.list.next_index": {
          "uuid": "$dynamic.utils.uuid",
          "version": { "$dynamic.list.index_triple": "$general.number" }
        }
      },
      "metadata": {
        "authors": { "@meta": { "is_value": true } },
        "license": { "@meta": { "is_value": true } },
        "url": { "@meta": { "is_value": true } }
      },
      "capabilities": {
        "$dynamic.list.next_index": "$manifest.general.capabilities"
      },
      "subpacks": {
        "$dynamic.list.next_index": {
          "folder_name": { "@meta": { "is_value": true } },
          "name": { "@meta": { "is_value": true } },
          "memory_tier": "$general.number"
        }
      }
    },
    "general": {
      "module_type": [
        "data",
        "resources",
        "client_data",
        "interface",
        "world_template"
      ],
      "capabilities": ["experimental_custom_ui", "chemistry", "raytraced"]
    }
  },
  "fog": {
    "main": {
      "format_version": "$general.format_version",
      "minecraft:fog_settings": {
        "description": {
          "identifier": {
            "@meta": { "is_value": true },
            "@import.value.fog": "$general.file_identifier"
          }
        },
        "distance": {
          "$fog.general.distances": {
            "fog_start": "$general.number",
            "fog_end": "$general.number",
            "fog_color": { "@meta": { "is_color": true } },
            "render_distance_type": "$fog.general.render_distance_types"
          }
        },
        "volumetric": {
          "media_coefficients": {
            "$fog.general.coefficient_types": {
              "scattering": { "@meta": { "is_color": true } },
              "absorption": { "@meta": { "is_color": true } }
            }
          },
          "density": {
            "$fog.general.density_types": {
              "max_density": "$general.number",
              "max_density_height": "$general.number",
              "zero_density_height": "$general.number",
              "uniform": "$general.boolean"
            }
          }
        }
      }
    },
    "general": {
      "distances": [
        "water",
        "air",
        "weather",
        "lava",
        "lava_resistance",
        "powder_snow"
      ],
      "render_distance_types": ["fixed", "render"],
      "coefficient_types": ["air", "water", "cloud"],
      "density_types": ["air"]
    }
  },
  "attachable": {
    "main": {
      "format_version": "1.10",
      "minecraft:attachable": {
        "description": {
          "identifier": "$general.file_identifier",
          "item": { "$general.item_identifier": "$molang.embedded" },
          "materials": {
            "$placeholder": {
              "@meta": { "is_value": true },
              "@import.value.material": "$client_entity.general.material"
            }
          },
          "textures": {
            "$placeholder": {
              "@meta": { "is_value": true },
              "@import.value.entity_texture": "$dynamic.rp.model_png and $dynamic.rp.item_png"
            }
          },
          "geometry": { "$placeholder": { "@meta": { "is_value": true } } },
          "scripts": {
            "pre_animation": {
              "$dynamic.list.next_index": {
                "@meta": { "is_value": true, "is_molang": true }
              }
            },
            "parent_setup": { "@meta": { "is_value": true, "is_molang": true } }
          },
          "render_controllers": {
            "$dynamic.list.next_index": {
              "@meta": {
                "is_value": true,
                "definitions": ["render_controller"]
              },
              "@import.value.render_controller": "$dynamic.cache.render_controller.ids"
            }
          }
        }
      }
    }
  },
  "molang": {
    "main": {
      "for_each": { "$placeholder": "$molang.main" },
      "loop": { "$placeholder": "$molang.main" },
      "c": {
        ".": { "$placeholder": { "$molang.general.operator": "$molang.main" } }
      },
      "t": {
        ".": { "$placeholder": { "$molang.general.operator": "$molang.main" } }
      },
      "v": {
        ".": {
          "$molang.general.variable": {
            "$molang.general.operator": "$molang.main"
          }
        }
      },
      "m": {
        ".": {
          "$molang.general.math": { "$molang.general.operator": "$molang.main" }
        }
      },
      "q": {
        ".": {
          "$molang.general.query": {
            "$molang.general.operator": "$molang.main"
          }
        }
      },
      "context": {
        ".": { "$placeholder": { "$molang.general.operator": "$molang.main" } }
      },
      "temp": {
        ".": { "$placeholder": { "$molang.general.operator": "$molang.main" } }
      },
      "variable": {
        ".": {
          "$molang.general.variable": {
            "$molang.general.operator": "$molang.main"
          }
        }
      },
      "math": {
        ".": {
          "$molang.general.math": { "$molang.general.operator": "$molang.main" }
        }
      },
      "query": {
        ".": {
          "$molang.general.query": {
            "$molang.general.operator": "$molang.main"
          }
        }
      },
      "this": { "$molang.general.operator": "$molang.main" },
      "return": "$molang.main",
      "break": {},
      "continue": {},
      "$general.decimal": "$molang.main"
    },
    "general": {
      "boolean": ["(0.0)", "(1.0)"],
      "query": [
        "actor_count",
        "all_animations_finished",
        "anim_time",
        "any_animation_finished",
        "armor_color_slot",
        "armor_material_slot",
        "armor_texture_slot",
        "is_attached_to_entity",
        "is_alive",
        "blocking",
        "body_y_rotation",
        "camera_distance_range_lerp",
        "camera_rotation",
        "can_climb",
        "can_fly",
        "can_power_jump",
        "can_swim",
        "can_walk",
        "current_squish_value",
        "debug_ouptut",
        "delta_time",
        "effect_emitter_count",
        "total_emitter_count",
        "effect_particle_count",
        "total_particle_count",
        "frame_alpha",
        "get_actor_info_id",
        "get_equipped_item_name",
        "get_rendered_item_name",
        "ground_speed",
        "has_any_family",
        "has_armor_slot",
        "has_collision",
        "has_gravity",
        "has_rider",
        "has_target",
        "head_x_rotation",
        "head_y_rotation",
        "health",
        "max_health",
        "invulnerable_ticks",
        "is_angry",
        "is_baby",
        "is_breathing",
        "is_bribed",
        "is_carrying_block",
        "is_casting",
        "is_celebrating",
        "is_charged",
        "is_charging",
        "is_chested",
        "is_critical",
        "is_dancing",
        "is_delayed_attacking",
        "is_eating",
        "is_elder",
        "is_enchanted",
        "is_emoting",
        "is_fire_immune",
        "is_gliding",
        "is_grazing",
        "is_item_equipped",
        "is_idling",
        "is_ignited",
        "is_in_love",
        "is_in_water",
        "is_in_water_or_rain",
        "is_interested",
        "is_invisible",
        "is_jumping",
        "is_laying_down",
        "is_laying_egg",
        "is_leashed",
        "is_levitating",
        "is_lingering",
        "is_moving",
        "is_on_ground",
        "is_onfire",
        "is_orphaned",
        "is_on_screen",
        "is_powered",
        "is_pregnant",
        "is_resting",
        "is_riding",
        "is_rolling",
        "is_saddled",
        "is_scared",
        "is_shaking",
        "is_sheared",
        "is_shield_powered",
        "is_silent",
        "is_sitting",
        "is_sleeping",
        "is_sneaking",
        "is_sneezing",
        "is_sprinting",
        "is_standing",
        "is_swimming",
        "is_tamed",
        "is_transforming",
        "is_using_item",
        "is_wall_climbing",
        "key_frame_lerp_time",
        "lie_amount",
        "log",
        "life_time",
        "mark_variant",
        "max_trade_tier",
        "model_scale",
        "modified_distance_moved",
        "modified_move_speed",
        "movement_direction",
        "previous_squish_value",
        "skin_id",
        "roll_counter",
        "sit_amount",
        "sneeze_counter",
        "spellcolor.b",
        "spellcolor.g",
        "spellcolor.r",
        "standing_scale",
        "swell_amount",
        "swelling_dir",
        "swim_amount",
        "target_x_rotation",
        "target_y_rotation",
        "time_stamp",
        "trade_tier",
        "unhappy_counter",
        "variant",
        "wing_flap_position",
        "wing_flap_speed",
        "yaw_speed",
        "is_admiring",
        "is_avoiding_block",
        "is_celebrating_special",
        "is_on_fire",
        "is_persona_or_premium_skin",
        "on_fire_time",
        "texture_frame_index"
      ],
      "query_beta": [
        "approx_eq",
        "block_property",
        "block_face",
        "has_block_property",
        "body_x_rotation",
        "bone_orientation_matrix",
        "bone_orientation_trs",
        "cardinal_facing",
        "cardinal_facing_2d",
        "combine_entities",
        "count",
        "day",
        "hurt_direction",
        "hurt_time",
        "moon_brightness",
        "moon_phase",
        "position",
        "spellcolor",
        "structural_integrity",
        "biome_has_all_tags",
        "biome_has_any_tag",
        "block_has_all_tags",
        "block_has_any_tag",
        "client_input_type",
        "equipped_item_all_tags",
        "equipped_item_any_tag",
        "get_nearby_entities",
        "get_locator_offset",
        "get_root_locator_offset",
        "get_nearby_entities_except_self",
        "get_ride",
        "get_riders",
        "has_player_rider",
        "is_attatched",
        "is_ram_attacking",
        "relative_block_has_all_tags",
        "remaining_durability",
        "rotation_to_camera",
        "relative_block_has_any_tag",
        "all_tags",
        "any_tag",
        "spellcolor",
        "max_durability",
        "main_hand_item_use_duration",
        "main_hand_item_max_duration",
        "out_of_control",
        "scoreboard",
        "self",
        "target",
        "time_of_day",
        "show_bottom",
        "death_time"
      ],
      "world_gen_query": ["heightmap", "above_top_solid"],
      "variable": ["worldx", "worldz", "attack_time"],
      "math": [
        "abs",
        "sin",
        "cos",
        "exp",
        "ln",
        "pow",
        "sqrt",
        "random",
        "ceil",
        "round",
        "trunc",
        "floor",
        "mod",
        "min",
        "max",
        "clamp",
        "lerp",
        "lerprotate"
      ],
      "math_beta": [
        "die_roll",
        "die_roll_integer",
        "acos",
        "atan",
        "atan2",
        "asin",
        "pi",
        "random_integer",
        "hermite_blend",
        "min_angle"
      ],
      "operator": [
        "+",
        "-",
        "*",
        "/",
        "!",
        "&&",
        "||",
        "<",
        "<=",
        ">=",
        ">",
        "==",
        "!=",
        "="
      ]
    },
    "embedded": {
      "@meta": { "is_molang": true, "validate": "molang.js" },
      "$versioned_template": [
        {
          "$if": "$project_target_version >= 1.16.100",
          "$data": "('query.' + $molang.general.query_beta)"
        },
        {
          "$data": "$molang.general.boolean and ('query.' + $molang.general.query)"
        }
      ]
    }
  },
  "particle": {
    "components": {
      "minecraft:emitter_local_space": {
        "position": "$general.boolean",
        "rotation": "$general.boolean",
        "velocity": "$general.boolean"
      },
      "minecraft:emitter_initialization": {
        "creation_expression": "$particle.general.moLang",
        "per_update_expression": "$particle.general.moLang"
      },
      "minecraft:emitter_rate_instant": {
        "num_particles": "$general.number and $particle.general.moLang"
      },
      "minecraft:emitter_rate_steady": {
        "spawn_rate": "$general.number and $particle.general.moLang",
        "max_particles": "$general.number and $particle.general.moLang"
      },
      "minecraft:emitter_rate_manual": {
        "max_particles": "$general.number and $particle.general.moLang"
      },
      "minecraft:emitter_lifetime_looping": {
        "active_time": "$general.number and $particle.general.moLang",
        "sleep_time": "$general.number and $particle.general.moLang"
      },
      "minecraft:emitter_lifetime_once": {
        "active_time": "$general.number and $particle.general.moLang"
      },
      "minecraft:emitter_lifetime_expression": {
        "activation_expression": "$general.number and $particle.general.moLang",
        "expiration_expression": "$general.number and $particle.general.moLang"
      },
      "minecraft:emitter_lifetime_events": {
        "creation_event": {
          "$dynamic.list.next_index": { "@meta": { "is_value": true } }
        },
        "expiration_event": {
          "$dynamic.list.next_index": { "@meta": { "is_value": true } }
        },
        "timeline": {
          "time": {
            "$dynamic.list.next_index": { "@meta": { "is_value": true } }
          }
        }
      },
      "minecraft:emitter_shape_point": {
        "offset": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "direction": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        }
      },
      "minecraft:emitter_shape_sphere": {
        "radius": "$general.number and $particle.general.moLang",
        "surface_only": "$general.boolean",
        "offset": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "direction": {
          "@value.inwards": {},
          "@value.outwards": {},
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        }
      },
      "minecraft:emitter_shape_box": {
        "half_dimensions": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "surface_only": "$general.boolean",
        "offset": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "direction": {
          "@value.inwards": {},
          "@value.outwards": {},
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        }
      },
      "minecraft:emitter_shape_custom": {
        "offset": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "direction": {
          "@value.inwards": {},
          "@value.outwards": {},
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        }
      },
      "minecraft:emitter_shape_entity_aabb": {
        "surface_only": "$general.boolean",
        "direction": {
          "@value.inwards": {},
          "@value.outwards": {},
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        }
      },
      "minecraft:emitter_shape_disc": {
        "plane_normal": {
          "@value.x": {},
          "@value.y": {},
          "@value.z": {},
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "offset": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "radius": "$general.number and $particle.general.moLang",
        "surface_only": "$general.boolean",
        "direction": {
          "@value.inwards": {},
          "@value.outwards": {},
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        }
      },
      "minecraft:particle_initial_spin": {
        "rotation": "$general.number and $particle.general.moLang",
        "rotation_rate": "$general.number and $particle.general.moLang"
      },
      "minecraft:particle_initial_speed": {
        "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
      },
      "minecraft:particle_motion_dynamic": {
        "linear_acceleration": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "linear_drag_coefficient": "$general.number and $particle.general.moLang",
        "rotation_acceleration": "$general.number and $particle.general.moLang",
        "rotation_drag_coefficient": "$general.number and $particle.general.moLang"
      },
      "minecraft:particle_motion_parametric": {
        "relative_position": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "direction": {
          "$dynamic.list.index_triple": "$general.number and $particle.general.moLang"
        },
        "rotation": "$general.number and $particle.general.moLang"
      },
      "minecraft:particle_motion_collision": {
        "enabled": "$general.boolean",
        "expire_on_contact": "$general.boolean",
        "collision_drag": "$general.number and $particle.general.moLang",
        "coefficient_of_restitution": "$general.number and $particle.general.moLang",
        "collision_radius": "$general.number and $particle.general.moLang",
        "events": {
          "$dynamic.list.next_index": {
            "event": { "@meta": { "is_value": true } },
            "min_speed": "$general.decimal"
          }
        }
      },
      "minecraft:particle_appearance_billboard": {
        "size": {
          "$dynamic.list.index_pair": "$general.number and $particle.general.moLang"
        },
        "face_camera_mode": [
          "rotate_xyz",
          "rotate_y",
          "lookat_xyz",
          "lookat_y",
          "direction"
        ],
        "uv": {
          "textureheight": "$general.number",
          "uv": {
            "$dynamic.list.index_pair": "$general.number and $particle.general.moLang"
          },
          "uv_size": {
            "$dynamic.list.index_pair": "$general.number and $particle.general.moLang"
          },
          "flipbook": {
            "base_UV": {
              "$dynamic.list.index_pair": "$general.number and $particle.general.moLang"
            },
            "size_UV": { "$dynamic.list.index_pair": "$general.number" },
            "step_UV": { "$dynamic.list.index_pair": "$general.number" },
            "frames_per_second": "$general.decimal",
            "max_frame": "$general.number and $particle.general.moLang",
            "stretch_to_lifetime": "$general.boolean",
            "loop": "$general.boolean"
          }
        }
      },
      "minecraft:particle_appearance_tinting": {
        "color": {
          "gradient": "$general.decimal",
          "interpolant": "$general.number and $particle.general.moLang"
        }
      },
      "minecraft:particle_appearance_lighting": {},
      "minecraft:particle_lifetime_expression": {
        "expiration_expression": "$general.number and $particle.general.moLang",
        "max_lifetime": "$general.number and $particle.general.moLang"
      },
      "minecraft:particle_lifetime_events": {
        "creation_event": {
          "$dynamic.list.next_index": { "@meta": { "is_value": true } }
        },
        "expiration_event": {
          "$dynamic.list.next_index": { "@meta": { "is_value": true } }
        },
        "timeline": {
          "time": {
            "$dynamic.list.next_index": { "@meta": { "is_value": true } }
          }
        }
      },
      "minecraft:particle_expire_if_in_blocks": {
        "$dynamic.list.next_index": "$general.block_identifier"
      },
      "minecraft:particle_expire_if_not_in_blocks": {
        "$dynamic.list.next_index": "$general.block_identifier"
      },
      "minecraft:particle_kill_plane": [
        "$general.number",
        "$general.number",
        "$general.number",
        "$general.number"
      ]
    },
    "main": {
      "format_version": "$general.format_version",
      "particle_effect": {
        "description": {
          "identifier": {
            "@meta": { "is_value": true },
            "@import.value.particle": "$general.file_identifier"
          },
          "basic_render_parameters": {
            "material": "$particle.general.material",
            "texture": { "@meta": { "is_value": true } }
          }
        },
        "curves": {
          "$placeholder": {
            "type": ["linear", "bezier", "catmull_rom"],
            "nodes": {
              "$dynamic.list.next_index": "$general.number and $particle.general.moLang"
            },
            "input": "$particle.general.moLang",
            "horizontal_range": "$general.number and $particle.general.moLang"
          }
        },
        "events": {
          "$placeholder": {
            "sequence": {
              "$dynamic.list.next_index": "$particle.main.particle_effect.events.$placeholder"
            },
            "randomize": {
              "$dynamic.list.next_index": {
                "weight": "$general.number",
                "$load": "$particle.main.particle_effect.events.$placeholder"
              }
            },
            "particle_effect": {
              "effect": { "@meta": { "is_value": true } },
              "type": [
                "emitter",
                "emitter_bound",
                "particle",
                "particle_with_velocity"
              ],
              "pre_effect_expression": "$particle.general.moLang"
            }
          }
        },
        "components": "$particle.components"
      }
    },
    "general": {
      "material": ["particles_alpha"],
      "variables": [
        "variable.particle_lifetime",
        "variable.particle_age",
        "variable.particle_random_1",
        "variable.particle_random_2",
        "variable.particle_random_3",
        "variable.particle_random_4",
        "variable.emitter_lifetime",
        "variable.emitter_age",
        "variable.emitter_random_1",
        "variable.emitter_random_2",
        "variable.emitter_random_3",
        "variable.emitter_random_4",
        "variable.entity_scale"
      ],
      "moLang": "$particle.general.variables and $molang.general.boolean and ('query.' + $molang.general.query)"
    }
  },
  "loot_table": {
    "main": {
      "pools": {
        "$dynamic.list.next_index": {
          "conditions": "$loot_table.conditions",
          "tiers": {
            "initial_range": "$general.number",
            "bonus_rolls": "$general.number",
            "bonus_chance": "$general.decimal"
          },
          "rolls": {
            "@import.value.number": "$general.number",
            "min": "$general.number",
            "max": "$general.number",
            "@meta": {
              "validate": [
                {
                  "confirm": "Bridge.Node.children.length === 0 && (Bridge.Node.data === '' || Number.isNaN(Number(Bridge.Node.data)))",
                  "then": {
                    "show": true,
                    "message": "Invalid data type: Expected number or min/max object"
                  }
                },
                {
                  "confirm": "Bridge.Node.children.length > 0 && (Bridge.Node.children.length !== 2 || !Bridge.Node.get('min') || !Bridge.Node.get('max'))",
                  "then": {
                    "show": true,
                    "message": "Invalid data type: Expected number or min/max object"
                  }
                }
              ]
            }
          },
          "entries": {
            "$dynamic.list.next_index": {
              "type": ["item", "loot_table", "empty"],
              "$dynamic_template": {
                "$key": "$dynamic.children.type",
                "item": {
                  "name": "$general.block_identifier and $general.item_identifier",
                  "weight": "$general.number",
                  "functions": "$loot_table.functions",
                  "pools": "$loot_table.main.pools"
                },
                "loot_table": {
                  "name": "$dynamic.loot_table_files",
                  "weight": "$general.number"
                },
                "empty": { "weight": "$general.number" }
              }
            }
          }
        }
      }
    },
    "general": {
      "conditions": [
        "entity_properties",
        "has_mark_variant",
        "killed_by_player",
        "killed_by_player_or_pets",
        "random_chance",
        "random_chance_with_looting",
        "random_difficulty_chance",
        "random_regional_difficulty_chance"
      ],
      "functions": [
        "enchant_book_for_trading",
        "enchant_random_gear",
        "enchant_randomly",
        "enchant_with_levels",
        "exploration_map",
        "fill_container",
        "furnace_smelt",
        "looting_enchant",
        "random_aux_val",
        "random_block_state",
        "random_dye",
        "set_actor_id",
        "set_banner_details",
        "set_book_contents",
        "set_count",
        "set_damage",
        "set_data",
        "set_data_from_color_index",
        "set_lore",
        "set_name",
        "specific_enchants",
        "trader_material_type"
      ],
      "banner_patterns": [
        "base",
        "border",
        "bricks",
        "circle",
        "creeper",
        "cross",
        "curly_border",
        "diagonal_left",
        "diagonal_right",
        "diagonal_up_right",
        "diagonal_up_left",
        "flower",
        "gradient",
        "gradient_up",
        "half_horizontal",
        "half_horizontal_bottom",
        "half_vertical",
        "half_vertical_right",
        "mojang",
        "piglin",
        "rhombus",
        "skull",
        "small_stripes",
        "square_bottom_left",
        "square_bottom_right",
        "square_top_left",
        "square_top_right",
        "straight_cross",
        "stripe_bottom",
        "stripe_center",
        "stripe_downleft",
        "stripe_downright",
        "stripe_left",
        "stripe_middle",
        "stripe_right",
        "stripe_top",
        "triangle_bottom",
        "triangle_top",
        "triangles_top",
        "triangles_bottom"
      ]
    },
    "functions": {
      "$dynamic.list.next_index": {
        "function": "$loot_table.general.functions",
        "conditions": "$loot_table.conditions",
        "$dynamic_template": {
          "$key": "$dynamic.children.function",
          "enchant_book_for_trading": {
            "base_cost": "$general.number",
            "base_random_cost": "$general.number",
            "per_level_cost": "$general.number",
            "per_level_random_cost": "$general.number"
          },
          "enchant_random_gear": { "chance": "$general.decimal" },
          "enchant_randomly": { "treasure": "$general.boolean" },
          "enchant_with_levels": {
            "treasure": "$general.boolean",
            "levels": { "min": "$general.number", "max": "$general.number" }
          },
          "exploration_map": { "destination": "$general.structures" },
          "fill_container": { "loot_table": "$dynamic.loot_table_files" },
          "random_aux_val": {
            "values": { "min": "$general.number", "max": "$general.number" }
          },
          "random_block_state": {
            "block_state": ["color"],
            "values": { "min": "$general.number", "max": "$general.number" }
          },
          "looting_enchant": {
            "count": { "min": "$general.number", "max": "$general.number" }
          },
          "set_actor_id": { "id": "$general.entity_identifier" },
          "$versioned_template.set_banner_details": [
            {
              "$if": "$project_target_version >= 1.16.100",
              "$data": {
                "type": ["default", "illager_captain"],
                "base_color": "$general.color_palette",
                "patterns": {
                  "$dynamic.list.next_index": {
                    "pattern": "$loot_table.general.banner_patterns",
                    "color": "$general.color_palette"
                  }
                }
              }
            },
            {
              "$if": "$project_target_version < 1.16.100",
              "$data": {
                "type": { "min": "$general.number", "max": "$general.number" }
              }
            }
          ],
          "set_book_contents": {
            "author": { "@meta": { "is_value": true } },
            "title": { "@meta": { "is_value": true } },
            "pages": {
              "$dynamic.list.next_index": { "@meta": { "is_value": true } }
            }
          },
          "set_count": {
            "count": { "min": "$general.number", "max": "$general.number" }
          },
          "set_damage": {
            "damage": { "min": "$general.decimal", "max": "$general.decimal" }
          },
          "set_data": {
            "data": { "min": "$general.number", "max": "$general.number" }
          },
          "set_lore": {
            "lore": {
              "$dynamic.list.next_index": { "@meta": { "is_value": true } }
            }
          },
          "set_name": { "name": { "@meta": { "is_value": true } } },
          "specific_enchants": {
            "enchants": {
              "$dynamic.list.next_index": {
                "id": "$general.enchantment_name",
                "level": { "$dynamic.list.index_pair": "$general.number" }
              }
            }
          }
        }
      }
    },
    "conditions": {
      "$dynamic.list.next_index": {
        "condition": "$loot_table.general.conditions",
        "$dynamic_template": {
          "$key": "$dynamic.children.condition",
          "has_mark_variant": { "value": "$general.number" },
          "entity_properties": {
            "entity": ["this"],
            "properties": { "on_fire": "$general.boolean" }
          },
          "random_chance": { "chance": "$general.decimal" },
          "random_chance_with_looting": {
            "chance": "$general.decimal",
            "looting_multiplier": "$general.decimal"
          },
          "random_difficulty_chance": {
            "default_chance": "$general.decimal",
            "peaceful": "$general.decimal",
            "hard": "$general.decimal"
          },
          "random_regional_difficulty_chance": {
            "max_chance": "$general.decimal"
          }
        }
      }
    }
  },
  "feature": {
    "main": {
      "format_version": "$general.format_version",
      "minecraft:aggregate_feature": {
        "description": { "identifier": "$general.file_identifier" },
        "early_out": "$feature.general.early_outs",
        "features": {
          "$dynamic.list.next_index": {
            "@meta": { "is_value": true },
            "@import.value.feature_ref": "$dynamic.biome.feature_references"
          }
        }
      },
      "minecraft:sequence_feature": {
        "description": { "identifier": "$general.file_identifier" },
        "features": {
          "$dynamic.list.next_index": {
            "@meta": { "is_value": true },
            "@import.value.feature_ref": "$dynamic.biome.feature_references"
          }
        }
      },
      "$versioned_template.minecraft:ore_feature": [
        {
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "count": "$general.number",
            "places_block": "$feature.general.block_reference"
          }
        },
        {
          "$if": "$format_version < 1.16.220",
          "$data": {
            "may_replace": {
              "$dynamic.list.next_index": "$feature.general.block_reference"
            }
          }
        },
        {
          "$if": "$format_version >= 1.16.220",
          "$data": {
            "replace_rules": {
              "$dynamic.list.next_index": {
                "places_block": "$feature.general.block_reference",
                "may_replace": {
                  "$dynamic.list.next_index": "$feature.general.block_reference"
                }
              }
            }
          }
        }
      ],
      "minecraft:scatter_feature": {
        "description": { "identifier": "$general.file_identifier" },
        "iterations": "$general.number",
        "project_input_to_floor": "$general.boolean",
        "coordinate_eval_order": "$feature.general.coordinate_eval_orders",
        "scatter_chance": {
          "@meta": { "is_molang": true },
          "@import.value.molang": "$molang.general.boolean and ('query.' + $molang.general.query)",
          "$load": "$feature.general.chance_information"
        },
        "x": {
          "@meta": { "is_molang": true },
          "@import.value.molang": "$molang.general.boolean and ('query.' + $molang.general.query)",
          "extent": {
            "$dynamic.list.index_pair": {
              "@import.value": "$general.number and ('query.' + $molang.general.query)",
              "@meta": {
                "validate": {
                  "confirm": "Bridge.Node.data === '' || Bridge.Node.data === 'true' || Bridge.Node.data === 'false'",
                  "then": {
                    "show": true,
                    "message": "Invalid data type: Expected number or MoLang"
                  }
                }
              }
            }
          },
          "distribution": "$feature.general.distributions"
        },
        "z": "$feature.main.minecraft:scatter_feature.x",
        "y": "$feature.main.minecraft:scatter_feature.x",
        "places_feature": {
          "$dynamic.list.next_index": {
            "@meta": { "is_value": true },
            "@import.value.feature_ref": "$dynamic.biome.feature_references"
          }
        }
      },
      "minecraft:search_feature": {
        "description": { "identifier": "$general.file_identifier" },
        "places_features": {
          "@meta": { "is_value": true },
          "@import.value.feature_ref": "$dynamic.biome.feature_references"
        },
        "search_volume": {
          "min": { "$dynamic.list.index_triple": "$general.number" },
          "max": { "$dynamic.list.index_triple": "$general.number" }
        },
        "search_axis": ["-x", "+x", "-y", "+y", "-z", "+z"],
        "required_successes": "$general.number"
      },
      "minecraft:single_block_feature": {
        "description": { "identifier": "$general.file_identifier" },
        "places_block": "$feature.general.block_reference",
        "enforce_survivability_rules": "$general.boolean",
        "enforce_placement_rules": "$general.boolean",
        "may_attach_to": {
          "min_sides_must_attach": ["1", "2", "3", "4"],
          "auto_rotate": "$general.boolean",
          "top": { "$dynamic.list.next_index": "$general.block_identifier" },
          "bottom": { "$dynamic.list.next_index": "$general.block_identifier" },
          "north": { "$dynamic.list.next_index": "$general.block_identifier" },
          "east": { "$dynamic.list.next_index": "$general.block_identifier" },
          "south": { "$dynamic.list.next_index": "$general.block_identifier" },
          "west": { "$dynamic.list.next_index": "$general.block_identifier" },
          "all": { "$dynamic.list.next_index": "$general.block_identifier" },
          "sides": { "$dynamic.list.next_index": "$general.block_identifier" }
        },
        "may_replace": {
          "$dynamic.list.next_index": "$feature.general.block_reference"
        }
      },
      "minecraft:structure_template_feature": {
        "description": { "identifier": "$general.file_identifier" },
        "structure_name": { "@meta": { "is_value": true } },
        "adjustment_radius": [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16"
        ],
        "facing_direction": ["north", "south", "east", "west", "random"],
        "constraints": {
          "grounded": {},
          "unburied": {},
          "block_intersection": {
            "$versioned_template": [
              {
                "$if": "$format_version < 1.16.100",
                "$data": {
                  "block_whitelist": {
                    "$dynamic.list.next_index": "$feature.general.block_reference"
                  }
                }
              },
              {
                "$if": "$format_version >= 1.16.100",
                "$data": {
                  "block_allowlist": {
                    "$dynamic.list.next_index": "$feature.general.block_reference"
                  }
                }
              }
            ]
          }
        }
      },
      "minecraft:tree_feature": {
        "description": { "identifier": "$general.file_identifier" },
        "base_cluster": {
          "may_replace": {
            "$dynamic.list.next_index": "$feature.general.block_reference"
          },
          "num_clusters": "$general.number",
          "cluster_radius": "$general.number"
        },
        "may_grow_on": {
          "$dynamic.list.next_index": "$feature.general.block_reference"
        },
        "may_grow_through": {
          "$dynamic.list.next_index": "$feature.general.block_reference"
        },
        "may_replace": {
          "$dynamic.list.next_index": "$feature.general.block_reference"
        },
        "$load": "$feature.general.canopy_reference",
        "acacia_trunk": {
          "trunk_height": {
            "base": "$general.number",
            "intervals": { "$dynamic.list.next_index": "$general.number" }
          },
          "trunk_width": "$general.number",
          "trunk_lean": {
            "allow_diagonal_growth": "$general.boolean",
            "lean_height": "$feature.general.range_information",
            "lean_steps": "$feature.general.range_information"
          },
          "trunk_block": "$feature.general.block_reference",
          "trunk_decoration": {
            "decoration_chance": "$feature.general.chance_information",
            "decoration_block": "$feature.general.block_reference",
            "num_steps": "$general.number",
            "step_direction": ["down", "up", "out", "away"]
          },
          "branches": "$feature.general.acacia_branch_reference"
        },
        "fallen_trunk": {
          "stump_height": "$general.number",
          "height_modifier": "$general.number",
          "log_length": "$feature.general.range_information",
          "trunk_block": "$feature.general.block_reference",
          "log_decoration_feature": "$dynamic.biome.feature_references",
          "trunk_decoration": {
            "decoration_chance": "$feature.general.chance_information",
            "decoration_block": "$feature.general.block_reference",
            "num_steps": "$general.number",
            "step_direction": ["down", "up", "out", "away"]
          }
        },
        "fancy_trunk": {
          "trunk_height": {
            "base": "$general.number",
            "variance": "$general.number",
            "scale": "$general.decimal"
          },
          "trunk_width": "$general.number",
          "width_scale": "$general.decimal",
          "foliage_altitude_factor": "$general.decimal",
          "trunk_block": "$feature.general.block_reference",
          "branches": {
            "slope": "$general.decimal",
            "density": "$general.decimal",
            "min_altitude_factor": "$general.decimal"
          }
        },
        "mega_trunk": {
          "trunk_height": {
            "base": "$general.number",
            "intervals": { "$dynamic.list.index_pair": "$general.number" }
          },
          "trunk_width": "$general.number",
          "trunk_block": "$feature.general.block_reference",
          "trunk_decoration": {
            "decoration_chance": "$feature.general.chance_information",
            "decoration_block": "$feature.general.block_reference",
            "num_steps": "$general.number",
            "step_direction": ["down", "up", "out", "away"]
          },
          "branches": "$feature.general.mega_branch_reference"
        },
        "trunk": {
          "can_be_submerged": {
            "@import.value": "$general.boolean",
            "max_depth": "$general.number"
          },
          "trunk_height": {
            "range_min": "$general.number",
            "range_max": "$general.number"
          },
          "trunk_block": "$feature.general.block_reference",
          "trunk_decoration": {
            "decoration_chance": "$feature.general.chance_information",
            "decoration_block": "$feature.general.block_reference",
            "num_steps": "$general.number",
            "step_direction": ["down", "up", "out", "away"]
          }
        }
      },
      "minecraft:weighted_random_feature": {
        "description": { "identifier": "$general.file_identifier" },
        "early_out": "$feature.general.early_outs",
        "features": {
          "$dynamic.list.next_index": {
            "0": {
              "@meta": { "is_value": true },
              "@import.value.feature_ref": "$dynamic.biome.feature_references"
            },
            "1": {
              "@meta": { "is_value": true },
              "@import.value.weight": "$general.number"
            }
          }
        }
      },
      "$versioned_template.minecraft:cave_carver_feature": [
        {
          "$if": "$format_version >= 1.16.220",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "fill_with": "$feature.general.block_reference",
            "width_modifier": "$general.number"
          }
        }
      ],
      "$versioned_template.minecraft:hell_cave_carver_feature": [
        {
          "$if": "$format_version >= 1.16.220",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "fill_with": "$feature.general.block_reference",
            "width_modifier": "$general.number"
          }
        }
      ],
      "$versioned_template.minecraft:underwater_cave_carver_feature": [
        {
          "$if": "$format_version >= 1.16.220",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "fill_with": "$feature.general.block_reference",
            "width_modifier": "$general.number",
            "replace_air_with": "$feature.general.block_reference"
          }
        }
      ],
      "$versioned_template.minecraft:growing_plant_feature": [
        {
          "$if": "$format_version >= 1.16.220",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "height_distribution": {
              "$dynamic.list.next_index": {
                "0": {
                  "@meta": { "is_molang": true },
                  "@import.value.molang": "$molang.general.boolean and ('query.' + $molang.general.query)"
                },
                "1": "$general.number"
              }
            },
            "allow_water": "$general.boolean",
            "growth_direction": ["UP", "DOWN"],
            "age": {
              "@meta": { "is_molang": true },
              "@import.value.molang": "$molang.general.boolean and ('query.' + $molang.general.query)"
            },
            "body_blocks": {
              "$dynamic.list.next_index": {
                "0": "$general.block_identifier",
                "1": "$general.number"
              }
            },
            "head_blocks": {
              "$dynamic.list.next_index": {
                "0": "$general.block_identifier",
                "1": "$general.number"
              }
            }
          }
        }
      ],
      "$versioned_template.minecraft:snap_to_surface_feature": [
        {
          "$if": "$format_version >= 1.16.220",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "feature_to_snap": {
              "@meta": { "is_value": true },
              "@import.value.feature_ref": "$dynamic.biome.feature_references"
            },
            "vertical_search_range": "$general.number",
            "surface": ["ceiling", "floor"]
          }
        }
      ],
      "$versioned_template.minecraft:vegetation_patch_feature": [
        {
          "$if": "$format_version >= 1.17.0",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "replaceable_blocks": {
              "$dynamic.list.next_index": "$feature.general.block_reference"
            },
            "ground_block": "$feature.general.block_reference",
            "vegetation_feature": {
              "@meta": { "is_value": true },
              "@import.value.feature_ref": "$dynamic.biome.feature_references"
            },
            "surface": ["floor", "ceiling"],
            "depth": {
              "@import.value": "$general.number",
              "range_min": "$general.number",
              "range_max": "$general.number"
            },
            "extra_deep_block_chance": "$general.number",
            "vertical_range": "$general.number",
            "vegetation_chance": "$general.number",
            "horizontal_radius": {
              "@import.value": "$general.number",
              "range_min": "$general.number",
              "range_max": "$general.number"
            },
            "extra_edge_column_chance": "$general.number",
            "waterlogged": "$general.boolean"
          }
        }
      ],
      "$versioned_template.minecraft:geode_feature": [
        {
          "$if": "$format_version >= 1.17.0",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "filler": "$feature.general.block_reference",
            "inner_layer": "$feature.general.block_reference",
            "alternate_inner_layer": "$feature.general.block_reference",
            "middle_layer": "$feature.general.block_reference",
            "outer_layer": "$feature.general.block_reference",
            "inner_placements": {
              "$dynamic.list.next_index": "$feature.general.block_reference"
            },
            "min_outer_wall_distance": "$general.number",
            "max_outer_wall_distance": "$general.number",
            "min_distribution_points": "$general.number",
            "max_distribution_points": "$general.number",
            "min_point_offset": "$general.number",
            "max_point_offset": "$general.number",
            "max_radius": "$general.number",
            "crack_point_offset": "$general.number",
            "generate_crack_chance": "$general.decimal",
            "base_crack_size": "$general.number",
            "noise_multiplier": "$general.decimal",
            "use_potential_placements_chance": "$general.decimal",
            "use_alternate_layer0_chance": "$general.deciaml",
            "placements_require_layer0_alternate": "$general.boolean",
            "invalid_blocks_threshold": "$general.number"
          }
        }
      ],
      "$versioned_template.minecraft:multiface_feature": [
        {
          "$if": "$format_version >= 1.17.0",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "places_block": "$feature.general.block_reference",
            "search_range": "$general.number",
            "can_place_on_floor": "$general.boolean",
            "can_place_on_ceiling": "$general.boolean",
            "can_place_on_wall": "$general.boolean",
            "chance_of_spreading": "$general.number",
            "can_place_on": {
              "$dynamic.list.next_index": "$feature.general.block_reference"
            }
          }
        }
      ],
      "$versioned_template.minecraft:beards_and_shavers": [
        {
          "$if": "$format_version >= 1.17.0",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "places_feature": {
              "@meta": { "is_value": true },
              "@import.value.feature_ref": "$dynamic.biome.feature_references"
            },
            "bounding_box_min": {
              "$dynamic.list.index_triple": "$general.number"
            },
            "bounding_box_max": {
              "$dynamic.list.index_triple": "$general.number"
            },
            "y_delta": "$general.number",
            "surface_block_type": "$feature.general.block_reference",
            "subsurface_block_type": "$feature.general.block_reference",
            "beard_raggedness_min": "$general.number",
            "beard_raggedness_max": "$general.number"
          }
        }
      ],
      "$versioned_template.minecraft:rect_layout": [
        {
          "$if": "$format_version >= 1.17.0",
          "$data": {
            "description": { "identifier": "$general.file_identifier" },
            "ratio_of_empty_space": "$general.number",
            "feature_areas": {
              "$dynamic.list.next_index": {
                "feature": {
                  "@meta": { "is_value": true },
                  "@import.value.feature_ref": "$dynamic.biome.feature_references"
                },
                "area_dimensions": {
                  "$dynamic.list.index_pair": "$general.number"
                }
              }
            }
          }
        }
      ]
    },
    "general": {
      "distributions": [
        "gaussian",
        "uniform",
        "inverse_gaussian",
        "fixed_grid",
        "jittered_grid"
      ],
      "early_outs": ["none", "first_failure", "first_success"],
      "coordinate_eval_orders": ["xyz", "zyx", "yxz", "xzy", "zxy", "yzx"],
      "chance_information": {
        "numerator": "$general.number",
        "denominator": "$general.number"
      },
      "min-max_information": {
        "min": "$general.number",
        "max": "$general.number"
      },
      "range_information": {
        "range_min": "$general.number",
        "range_max": "$general.number"
      },
      "block_reference": {
        "@import.value.block_id": "$general.block_identifier",
        "name": "$general.block_identifier",
        "states": "$_general.block_states"
      },
      "canopy_reference": {
        "acacia_canopy": {
          "canopy_size": "$general.number",
          "leaf_block": "$feature.general.block_reference"
        },
        "canopy": {
          "canopy_offset": "$feature.general.min-max_information",
          "min_width": "$general.number",
          "canopy_slope": {
            "rise": "$general.number",
            "run": "$general.number"
          },
          "variation_chance": {
            "$dynamic.list.next_index": "$feature.general.chance_information"
          },
          "leaf_block": "$feature.general.block_reference",
          "canopy_decoration": {
            "decoration_chance": "$feature.general.chance_information",
            "block_reference": "$feature.general.block_reference",
            "num_steps": "$general.number",
            "step_direction": ["down", "up", "out", "away"]
          }
        },
        "fancy_canopy": {
          "height": "$general.number",
          "radius": "$general.number",
          "leaf_block": "$feature.general.block_reference"
        },
        "mega_canopy": {
          "canopy_height": "$general.number",
          "core_width": "$general.number",
          "base_radius": "$general.number",
          "leaf_block": "$feature.general.block_reference"
        },
        "mega_pine_canopy": {
          "canopy_height": "$general.number",
          "core_width": "$general.number",
          "base_radius": "$general.number",
          "radius_step_modifier": "$general.decimal",
          "leaf_block": "$feature.general.block_reference"
        },
        "pine_canopy": {
          "canopy_height": "$feature.general.range_information",
          "base_radius": "$general.number",
          "leaf_block": "$feature.general.block_reference"
        },
        "roofed_canopy": {
          "canopy_height": "$general.number",
          "core_width": "$general.number",
          "outer_radius": "$general.number",
          "inner_radius": "$general.number",
          "leaf_block": "$feature.general.block_reference"
        },
        "spruce_canopy": {
          "lower_offset": "$feature.general.range_information",
          "upper_offset": "$feature.general.range_information",
          "max_radius": "$feature.general.range_information",
          "leaf_block": "$feature.general.block_reference"
        }
      },
      "acacia_branch_reference": {
        "branch_length": "$feature.general.range_information",
        "branch_position": "$feature.general.range_information",
        "branch_chance": "$general.decimal",
        "$load": "$feature.general.branch_canopy_refence"
      },
      "mega_branch_reference": {
        "branch_length": "$general.number",
        "branch_slope": "$general.decimal",
        "branch_interval": "$feature.general.range_information",
        "branch_altitude_factor": "$feature.general.min-max_information",
        "$load": "$feature.general.branch_canopy_refence"
      },
      "branch_canopy_refence": {
        "branch_canopy": {
          "acacia_canopy": {
            "canopy_size": "$general.number",
            "simplify_canopy": "$general.boolean",
            "leaf_block": "$feature.general.block_reference"
          },
          "canopy": {
            "canopy_offset": {
              "min": "$general.number",
              "max": "$general.number"
            },
            "min_width": "$general.number",
            "canopy_slope": {
              "rise": "$general.number",
              "run": "$general.number"
            },
            "variation_chance": {
              "$dynamic.list.next_index": "$feature.general.chance_information"
            },
            "leaf_block": "$feature.general.block_reference",
            "canopy_decoration": {
              "decoration_chance": "$feature.general.chance_information",
              "decoration_block": "$feature.general.block_reference",
              "num_steps": "$general.number",
              "step_direction": ["down", "up", "out", "away"]
            }
          },
          "fancy_canopy": {
            "height": "$general.number",
            "radius": "$general.number",
            "leaf_block": "$feature.general.block_reference"
          },
          "mega_canopy": {
            "canopy_height": "$feature.general.range_information",
            "core_width": "$general.number",
            "base_radius": "$general.number",
            "simplify_canopy": "$general.boolean",
            "leaf_block": "$feature.general.block_reference"
          },
          "mega_pine_canopy": {
            "canopy_height": "$general.number",
            "core_width": "$general.number",
            "base_radius": "$general.number",
            "radius_step_modifier": "$general.decimal",
            "leaf_block": "$feature.general.block_reference"
          },
          "pine_canopy": {
            "canopy_height": "$general.number",
            "base_radius": "$general.number",
            "leaf_block": "$feature.general.block_reference"
          },
          "spruce_canopy": {
            "lower_offset": "$general.number",
            "upper_offset": "$general.number",
            "max_radius": "$general.number",
            "leaf_block": "$feature.general.block_reference"
          }
        }
      }
    }
  },
  "block": {
    "components": {
      "@meta": { "expand_path_exceptions": ["minecraft:unit_cube"] },
      "$versioned_template.minecraft:destroy_time": [
        {
          "$if": "$format_version < 1.16.0",
          "$data": {
            "@meta": {
              "compile": "if(Bridge.Node.data === '') { return new Bridge.JSONTree(undefined, (Bridge.Node.get('value') || {}).data) } else { return Bridge.Node }"
            },
            "value": "$general.decimal"
          }
        },
        { "$if": "$format_version >= 1.16.0", "$data": "$general.number" }
      ],
      "$versioned_template.minecraft:block_light_emission": [
        {
          "$if": "$format_version < 1.16.0",
          "$data": {
            "@meta": {
              "compile": "if(Bridge.Node.data === '') { return new Bridge.JSONTree(undefined, (Bridge.Node.get('emission') || {}).data) } else { return Bridge.Node }"
            },
            "emission": "$general.decimal"
          }
        },
        { "$if": "$format_version >= 1.16.0", "$data": "$general.decimal" }
      ],
      "$versioned_template.minecraft:block_light_absorption": [
        {
          "$if": "$format_version < 1.16.0",
          "$data": {
            "@meta": {
              "compile": "if(Bridge.Node.data === '') { return new Bridge.JSONTree(undefined, (Bridge.Node.get('emission') || {}).data) } else { return Bridge.Node }"
            },
            "value": "$general.decimal"
          }
        },
        { "$if": "$format_version >= 1.16.0", "$data": "$general.decimal" }
      ],
      "$versioned_template.minecraft:map_color": [
        {
          "$if": "$format_version < 1.16.0",
          "$data": {
            "@meta": {
              "compile": "if(Bridge.Node.data === '') { return new Bridge.JSONTree(undefined, (Bridge.Node.get('color') || {}).data) } else { return Bridge.Node }"
            },
            "color": { "@meta": { "is_value": true, "is_color": true } }
          }
        },
        {
          "$if": "$format_version >= 1.16.0",
          "$data": { "@meta": { "is_value": true, "is_color": true } }
        }
      ],
      "minecraft:flammable": {
        "burn_odds": "$general.decimal",
        "flame_odds": "$general.decimal"
      },
      "$versioned_template.minecraft:friction": [
        {
          "$if": "$format_version < 1.16.0",
          "$data": {
            "@meta": {
              "compile": "if(Bridge.Node.data === '') { return new Bridge.JSONTree(undefined, (Bridge.Node.get('value') || {}).data) } else { return Bridge.Node }"
            },
            "value": "$general.decimal"
          }
        },
        { "$if": "$format_version >= 1.16.0", "$data": "$general.decimal" }
      ],
      "$versioned_template.minecraft:explosion_resistance": [
        {
          "$if": "$format_version < 1.16.0",
          "$data": {
            "@meta": {
              "compile": "if(Bridge.Node.data === '') { return new Bridge.JSONTree(undefined, (Bridge.Node.get('value') || {}).data) } else { return Bridge.Node }"
            },
            "value": "$general.decimal"
          }
        },
        { "$if": "$format_version >= 1.16.0", "$data": "$general.decimal" }
      ],
      "$versioned_template.minecraft:loot": [
        {
          "$if": "$format_version < 1.16.0",
          "$data": {
            "@meta": {
              "compile": "if(Bridge.Node.data === '') { return new Bridge.JSONTree(undefined, (Bridge.Node.get('table') || {}).data) } else { return Bridge.Node }"
            },
            "table": "$dynamic.loot_table_files"
          }
        },
        {
          "$if": "$format_version >= 1.16.0",
          "$data": "$dynamic.loot_table_files"
        }
      ],
      "$versioned_template.minecraft:unit_cube": [
        { "$if": "$format_version >= 1.16.100", "$data": {} }
      ],
      "$versioned_template.minecraft:crafting_table": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "custom_description": { "@meta": { "is_value": true } },
            "grid_size": ["3"],
            "crafting_tags": {
              "$dynamic.list.next_index": "$recipe.general.tags"
            }
          }
        }
      ],
      "$versioned_template.minecraft:material_instances": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "$placeholder": {
              "texture": "$dynamic.rp.terrain_texture",
              "render_method": [
                "opaque",
                "blend",
                "alpha_test",
                "double_sided"
              ],
              "ambient_occlusion": "$general.boolean",
              "face_dimming": "$general.boolean"
            },
            "*": {
              "texture": "$dynamic.rp.terrain_texture",
              "render_method": [
                "opaque",
                "blend",
                "alpha_test",
                "double_sided"
              ],
              "ambient_occlusion": "$general.boolean",
              "face_dimming": "$general.boolean"
            }
          }
        }
      ],
      "$versioned_template.minecraft:geometry": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": "$general.model_identifier"
        }
      ],
      "$versioned_template.minecraft:on_step_on": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": "$block.general.event_definition"
        }
      ],
      "$versioned_template.minecraft:on_step_off": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": "$block.general.event_definition"
        }
      ],
      "$versioned_template.minecraft:on_player_destroyed": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": "$block.general.event_definition"
        }
      ],
      "$versioned_template.minecraft:on_fall_on": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "event": "$dynamic.block.events",
            "target": ["self", "other", "target", "parent", "baby"],
            "condition": "$molang.embedded",
            "min_fall_distance": "$general.number"
          }
        }
      ],
      "$versioned_template.minecraft:on_placed": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": "$block.general.event_definition"
        }
      ],
      "$versioned_template.minecraft:on_player_placing": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": "$block.general.event_definition"
        }
      ],
      "$versioned_template.minecraft:on_interact": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": "$block.general.event_definition"
        }
      ],
      "$versioned_template.minecraft:ticking": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "looping": "$general.boolean",
            "range": { "$dynamic.list.index_pair": "$general.number" },
            "on_tick": "$block.general.event_definition"
          }
        }
      ],
      "$versioned_template.minecraft:random_ticking": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "on_tick": "$block.general.event_definition" }
        }
      ],
      "$versioned_template.minecraft:entity_collision": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "origin": { "$dynamic.list.index_triple": "$general.number" },
            "size": { "$dynamic.list.index_triple": "$general.number" },
            "@import.value": ["false"]
          }
        }
      ],
      "$versioned_template.minecraft:pick_collision": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "origin": { "$dynamic.list.index_triple": "$general.number" },
            "size": { "$dynamic.list.index_triple": "$general.number" },
            "@import.value": ["false"]
          }
        }
      ],
      "$versioned_template.minecraft:breakonpush": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:immovable": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:breathability": [
        { "$if": "$format_version >= 1.16.100", "$data": ["air", "solid"] }
      ],
      "$versioned_template.minecraft:onlypistonpush": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:placement_filter": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "conditions": {
              "$dynamic.list.next_index": {
                "block_filter": {
                  "$dynamic.list.next_index": "$general.block_identifier"
                },
                "allowed_faces": {
                  "$dynamic.list.next_index": [
                    "up",
                    "down",
                    "north",
                    "south",
                    "east",
                    "west",
                    "side",
                    "all"
                  ]
                }
              }
            }
          }
        }
      ],
      "$versioned_template.minecraft:preventsjumping": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:rotation": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "$dynamic.list.index_triple": "$general.number" }
        }
      ],
      "$versioned_template.minecraft:unwalkable": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:display_name": [
        {
          "$if": "$project_target_version >= 1.16.100",
          "$data": { "@meta": { "is_value": true } }
        }
      ]
    },
    "main": {
      "format_version": "$general.format_version",
      "minecraft:block": {
        "description": {
          "identifier": "$general.file_identifier and $general.block_identifier",
          "is_experimental": "$general.boolean",
          "$versioned_template.properties": [
            {
              "$if": "$format_version >= 1.16.100",
              "$data": {
                "$placeholder": {
                  "$dynamic.list.next_index": {
                    "@import.value.number": "$general.number",
                    "@import.value.boolean": "$general.boolean",
                    "@meta": { "validate": null }
                  }
                }
              }
            }
          ]
        },
        "$versioned_template.permutations": [
          {
            "$if": "$format_version >= 1.16.100",
            "$data": {
              "$dynamic.list.next_index": {
                "condition": "$molang.embedded",
                "components": "$block.components"
              }
            }
          }
        ],
        "components": "$block.components and $dynamic.plugins.block_custom_components",
        "$versioned_template.events": [
          {
            "$if": "$format_version >= 1.16.100",
            "$data": { "$placeholder": "$block.event" }
          }
        ]
      }
    },
    "general": {
      "event_definition": {
        "event": {
          "@meta": { "is_value": true },
          "@import.value": "$dynamic.block.events"
        },
        "target": ["self", "other", "target", "parent", "baby"],
        "condition": "$molang.embedded"
      }
    },
    "event": {
      "@meta": { "expand_path_exceptions": ["decrement_stack"] },
      "randomize": {
        "$dynamic.list.next_index": {
          "weight": "$general.number",
          "$load": "$block.event"
        }
      },
      "sequence": {
        "$dynamic.list.next_index": {
          "condition": "$molang.embedded",
          "$load": "$block.event"
        }
      },
      "transform_item": { "transform": "$general.item_identifier" },
      "run_command": {
        "command": {
          "$dynamic.list.next_index": "$function.embedded_no_slash"
        },
        "target": ["self", "other"]
      },
      "add_mob_effect": {
        "effect": "$general.effect_name",
        "target": ["other", "self"],
        "duration": "$general.number",
        "amplifier": "$general.number"
      },
      "remove_mob_effect": {
        "effect": "$general.effect_name",
        "target": ["self", "other"]
      },
      "set_block_property": {
        "$dynamic.block.property": {
          "$dynamic_template": {
            "$key": "$dynamic.currentNodeKey",
            "$load": "$dynamic.block.property_obj"
          }
        }
      },
      "teleport": {
        "target": ["self", "other"],
        "avoid_water": "$general.boolean",
        "destintion": { "$dynamic.list.index_triple": "$general.number" },
        "land_on_block": "$general.boolean",
        "max_range": { "$dynamic.list.index_triple": "$general.number" }
      },
      "damage": {
        "amount": "$general.number",
        "target": ["item", "other", "self"],
        "type": "$general.damage_type"
      },
      "decrement_stack": { "ignore_game_mode": "$general.boolean" },
      "die": { "target": ["self", "other"] },
      "play_effect": {
        "data": "$general.number",
        "target": ["self", "other"],
        "effect": {
          "@import.value.particle": "$dynamic.cache.particle.ids",
          "@import.value": "$vanilla.particle_identifier"
        }
      },
      "play_sound": {
        "target": ["self", "other"],
        "sound": "$function.general.sound_definitions"
      },
      "set_block": { "block_type": "$general.block_identifier" },
      "set_block_at_pos": {
        "block_type": "$general.block_identifier",
        "block_offset": { "$dynamic.list.index_triple": "$general.number" }
      },
      "spawn_loot": { "table": "$dynamic.loot_table_files" },
      "trigger": {
        "event": "asValue($dynamic.block.events)",
        "target": ["self", "other"],
        "condition": "$molang.embedded"
      }
    }
  },
  "_general": {
    "block_states": {
      "age_bit": "$general.boolean",
      "age": "$general.number0_15",
      "attached_bit": "$general.boolean",
      "attatchment": ["hanging", "multiple", "side", "standing"],
      "allow_underwater_bit": "$general.boolean",
      "portal_axis": ["unknown", "x", "z"],
      "bite_counter": ["0", "1", "2", "3", "4", "5", "6"],
      "bamboo_leaf_size": ["large_leaves", "no_leaves", "small_leaves"],
      "bamboo_stalk_thickness": ["thick", "thin"],
      "brewing_stand_slot_a_bit": "$general.boolean",
      "brewing_stand_slot_b_bit": "$general.boolean",
      "brewing_stand_slot_c_bit": "$general.boolean",
      "button_pressed_bit": "$general.boolean",
      "cauldron_liquid": ["water", "lava"],
      "color": [
        "white",
        "orange",
        "magenta",
        "light_blue",
        "yellow",
        "lime",
        "pink",
        "gray",
        "silver",
        "cyan",
        "purple",
        "blue",
        "brown",
        "green",
        "red",
        "black"
      ],
      "conditional_bit": "$general.boolean",
      "coral_color": ["blue", "pink", "purple", "red", "yellow"],
      "covered_bit": "$general.boolean",
      "composter_fill_level": ["0", "1", "2", "3", "4", "5", "6", "7", "8"],
      "chisel_type": ["default", "chiseled", "lines", "smooth"],
      "cluster_amount": ["0", "1", "2", "3"],
      "cracked_state": ["cracked", "max_cracked", "no_cracks"],
      "damage": ["undamaged", "slightly_damaged", "very_damaged", "broken"],
      "dead_bit": "$general.boolean",
      "dirt_type": ["normal", "coarse"],
      "disarmed_bit": "$general.boolean",
      "drag_down": "$general.boolean",
      "door_hinge_bit": "$general.boolean",
      "upper_block_bit": "$general.boolean",
      "direction": ["0", "1", "2", "3"],
      "double_flower_type": [
        "fern",
        "grass",
        "paeonia",
        "rose",
        "sunflower",
        "syringia"
      ],
      "end_portal_eye_bit": "$general.boolean",
      "explode_bit": "$general.boolean",
      "extinguished": "$general.boolean",
      "facing_direction": ["0", "1", "2", "3", "4", "5"],
      "facing_bit": ["0", "1", "2", "3"],
      "fill_level": ["0", "1", "2", "3", "4", "5", "6"],
      "flower_type": [
        "allium",
        "cornflower",
        "houstonia",
        "lily_Of_the_valley",
        "orchid",
        "oxeye",
        "poppy",
        "tulip_orange",
        "tulip_pink",
        "tulip_red",
        "tulip_white"
      ],
      "growth": ["0", "1", "2", "3", "4", "5", "6", "7"],
      "ground_sign_direction": "$general.number0_15",
      "hanging": "$general.boolean",
      "head_piece_bit": "$general.boolean",
      "head_bit": "$general.boolean",
      "height": ["0", "1", "2", "3", "4", "5", "6", "7"],
      "huge_mushroom_bit": "$general.number0_15",
      "infiniburn_bit": "$general.boolean",
      "in_wall_bit": "$general.boolean",
      "liquid_depth": "$general.number0_15",
      "lever_direction": [
        "down_east_west",
        "down_north_south",
        "east",
        "north",
        "south",
        "up_east_west",
        "up_north_south",
        "west"
      ],
      "moisturized_amount": ["0", "1", "2", "3", "4", "5", "6", "7"],
      "mode": ["corner", "data", "export", "invalid", "load", "save"],
      "no_drop_bit": "$general.boolean",
      "new_leaf_type": ["acacia", "dark_oak"],
      "new_log_type": ["acacia", "dark_oak"],
      "occupied_bit": "$general.boolean",
      "open_bit": "$general.boolean",
      "old_leaf_type": ["oak", "spruce", "birch", "jungle"],
      "old_log_type": ["oak", "spruce", "birch", "jungle"],
      "output_subtract_bit": "$general.boolean",
      "output_lit_bit": "$general.boolean",
      "persistent_bit": "$general.boolean",
      "powered_bit": "$general.boolean",
      "pillar_axis": ["x", "y", "z"],
      "rail_data_bit": "$general.boolean",
      "rail_direction": ["0", "1", "2", "3", "4", "5", "6", "7", "8"],
      "redstone_signal": "$general.number0_15",
      "repeater_delay": ["0", "1", "2", "3"],
      "sand_stone_type": ["default", "heiroglyphs", "cut", "smooth"],
      "stone_type": [
        "andesite",
        "andesite_smooth",
        "stone",
        "granite",
        "granite_smooth",
        "diorite",
        "diorite_smooth"
      ],
      "stability": ["0", "1", "2", "3", "4", "5", "6", "7"],
      "stability_check": "$general.boolean",
      "sapling_type": [
        "acacia",
        "birch",
        "dark_oak",
        "jungle",
        "oak",
        "spruce"
      ],
      "sand_type": ["normal", "red"],
      "sea_grass_type": ["default", "double_bot", "double_top"],
      "stone_slab_type": [
        "brick",
        "cobblestone",
        "nether_brick",
        "quartz",
        "sandstone",
        "smooth_stone",
        "stone_brick",
        "wood"
      ],
      "stone_slab_type_2": [
        "mossy_cobblestone",
        "prismarine_brick",
        "prismarine_drk",
        "prismarine_rough",
        "purpur",
        "red_nether_brick",
        "red_sandstone",
        "smooth_sandstone"
      ],
      "stone_slab_type_3": [
        "andesite",
        "diorite",
        "end_stone_brick",
        "granite",
        "polished_diorite",
        "polished_andesite",
        "polished_granite",
        "smooth_red_sandstone"
      ],
      "stone_slab_type_4": [
        "cut_red_sandstone",
        "cut_sandstone",
        "mossy_stone_brick",
        "smooth_quartz",
        "stone"
      ],
      "structure_void_type": ["air", "void"],
      "stripped_bit": "$general.boolean",
      "suspended_bit": "$general.boolean",
      "tall_grass_type": ["default", "tall", "fern", "snow"],
      "toggle_bit": "$general.boolean",
      "triggered_bit": "$general.boolean",
      "torch_facing_direction": [
        "top",
        "east",
        "north",
        "south",
        "unknown",
        "west"
      ],
      "top_slot_bit": "$general.boolean",
      "turtle_egg_count": ["one_egg", "two_egg", "three_egg", "four_egg"],
      "update_bit": "$general.boolean",
      "upside_down_bit": "$general.boolean",
      "wood_type": ["acacia", "birch", "dark_oak", "jungle", "oak", "spruce"],
      "vine_direction_bits": "$general.number0_15",
      "weirdo_direction": ["0", "1", "2", "3"],
      "wall_block_type": [
        "andesite",
        "brick",
        "cobblestone",
        "diorite",
        "end_brick",
        "granite",
        "mossy_cobblestone",
        "mossy_stone_brick",
        "nether_brick",
        "prismarine",
        "red_nether_brick",
        "red_sandstone",
        "sandstone",
        "stone_brick"
      ]
    }
  },
  "item": {
    "components": {
      "minecraft:use_duration": "$general.number",
      "minecraft:max_stack_size": "$general.number",
      "minecraft:max_damage": "$general.number",
      "minecraft:hand_equipped": "$general.boolean",
      "minecraft:stacked_by_data": "$general.boolean",
      "minecraft:foil": "$general.boolean",
      "$versioned_template.minecraft:ignores_permission": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:mining_speed": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.number" }
      ],
      "$versioned_template.minecraft:damage": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.number" }
      ],
      "$versioned_template.minecraft:can_destroy_in_creative": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:dye_powder": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "color": "$general.number" }
        }
      ],
      "$versioned_template.minecraft:mirrored_art": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:explodable": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:should_despawn": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:liquid_clipped": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:allow_off_hand": [
        { "$if": "$format_version >= 1.16.100", "$data": "$general.boolean" }
      ],
      "$versioned_template.minecraft:projectile": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "projectile_entity": "$general.entity_identifier",
            "minimum_critical_power": "$general.decimal"
          }
        }
      ],
      "$versioned_template.minecraft:block_placer": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "block": "$general.block_identifier",
            "use_block_description": "$general.boolean",
            "use_on": {
              "$dynamic.list.next_index": "$general.block_identifier"
            }
          }
        }
      ],
      "$versioned_template.minecraft:entity_placer": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "entity": "$general.entity_identifier",
            "use_on": {
              "$dynamic.list.next_index": "$general.block_identifier"
            },
            "dispense_on": {
              "$dynamic.list.next_index": "$general.block_identifier"
            }
          }
        }
      ],
      "$versioned_template.minecraft:knockback_resistance": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "protection": "$general.decimal" }
        }
      ],
      "$versioned_template.minecraft:enchantable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "slot": "$item.general.slots", "value": "$general.number" }
        }
      ],
      "$versioned_template.minecraft:shooter": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "max_draw_duration": "$general.number",
            "charge_on_draw": "$general.boolean",
            "scale_power_by_draw_duration": "$general.boolean",
            "ammunition": {
              "$dynamic.list.next_index": {
                "item": "$general.item_identifier",
                "use_offhand": "$general.boolean",
                "search_inventory": "$general.boolean",
                "use_in_creative": "$general.boolean"
              }
            }
          }
        }
      ],
      "$versioned_template.minecraft:durability": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "max_durability": "$general.number",
            "damage_chance": {
              "min": "$general.number",
              "max": "$general.number"
            }
          }
        }
      ],
      "$versioned_template.minecraft:armor": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "protection": "$general.number",
            "texture_type": "$client_item.general.armor_types"
          }
        }
      ],
      "$versioned_template.minecraft:wearable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "slot": "$general.slot_type",
            "dispensable": "$general.boolean"
          }
        }
      ],
      "$versioned_template.minecraft:weapon": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "on_hurt_entity": "$item.general.event_definition",
            "on_not_hurt_entity": "$item.general.event_definition",
            "on_hit_block": "$item.general.event_definition"
          }
        }
      ],
      "$versioned_template.minecraft:record": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "sound_event": "$item.general.music_events",
            "duration": "$general.number",
            "comparator_signal": "$general.number"
          }
        }
      ],
      "$versioned_template.minecraft:repairable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "on_repaired": "$item.general.event_definition",
            "repair_items": {
              "$dynamic.list.next_index": {
                "items": {
                  "$dynamic.list.next_index": "$general.block_identifier and $general.item_identifier"
                },
                "repair_amount": "$general.number and $molang.embedded"
              }
            }
          }
        }
      ],
      "$versioned_template.minecraft:cooldown": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "category": "$item.general.cooldown_types",
            "duration": "$general.decimal"
          }
        }
      ],
      "$versioned_template.minecraft:on_use_on": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "on_use_on": {
              "event": "$dynamic.item.events",
              "target": [
                "self",
                "other",
                "target",
                "parent",
                "baby",
                "holder",
                "block"
              ]
            }
          }
        }
      ],
      "$versioned_template.minecraft:on_use": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "on_use": "$item.general.event_definition" }
        }
      ],
      "$versioned_template.minecraft:digger": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "use_efficiency": "$general.boolean",
            "on_dig": "$item.general.event_definition",
            "destroy_speeds": {
              "$dynamic.list.next_index": {
                "block": {
                  "@import.value": "$general.block_identifier",
                  "tags": ["query.any_tag()", "query.all_tags()"]
                },
                "speed": "$general.number",
                "on_dig": "$item.general.event_definition",
                "use_efficiency": "$general.boolean"
              }
            }
          }
        }
      ],
      "$versioned_template.minecraft:fertilizer": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "type": "$item.general.fertilizer_types" }
        }
      ],
      "$versioned_template.minecraft:fuel": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "duration": "$general.number" }
        }
      ],
      "$versioned_template.minecraft:throwable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "do_swing_animation": "$general.boolean",
            "max_draw_duration": "$general.number",
            "scale_power_by_draw_duration": "$general.boolean",
            "launch_power_scale": "$general.number"
          }
        }
      ],
      "$versioned_template.minecraft:potion": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "type": "$item.general.potion_types" }
        }
      ],
      "$versioned_template.minecraft:creative_category": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "parent": "$item.general.item_group_reference and $general.item_category"
          }
        }
      ],
      "$versioned_template.minecraft:icon": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "texture": {
              "@meta": { "is_value": true },
              "@import.value": "$dynamic.rp.item_textures"
            },
            "frame": "$general.number and $molang.embedded"
          }
        }
      ],
      "$versioned_template.minecraft:use_animation": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": ["bow", "eat", "drink", "crossbow", "camera"]
        }
      ],
      "$versioned_template.minecraft:render_offsets": [
        {
          "$if": "$format_version = 1.16.100",
          "$data": "$client_item.general.render_offsets"
        },
        {
          "$if": "$format_version >= 1.16.200",
          "$data": {
            "$item.general.hand_type": {
              "$item.general.camera_type": "$item.general.render_offset"
            }
          }
        }
      ],
      "$versioned_template.minecraft:hover_text_color": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": "$general.minecraft_color"
        }
      ],
      "$versioned_template.minecraft:food": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "on_consume": "$item.general.event_definition",
            "nutrition": "$general.number",
            "can_always_eat": "$general.boolean",
            "saturation_modifier": "$item.general.saturation_modifier"
          }
        },
        {
          "$if": "$format_version < 1.16.100",
          "$data": {
            "nutrition": "$general.number",
            "can_always_eat": "$general.boolean",
            "saturation_modifier": "$item.general.saturation_modifier",
            "effects": {
              "$dynamic.list.next_index": "$item.general.effect_definition"
            },
            "remove_effects": {
              "$dynamic.list.next_index": "$general.effect_name"
            },
            "using_converts_to": "$general.item_identifier",
            "on_use_action": [
              "chorus_teleport",
              "suspicious_stew_effect",
              "none"
            ],
            "on_use_range": { "$dynamic.list.index_triple": "$general.number" }
          }
        }
      ],
      "$versioned_template.bridge:weapon_damage": [
        {
          "$if": "$format_version < 1.16.100",
          "$legacy_if": "$dynamic.bridge_core.is_active",
          "$data": "$general.number"
        }
      ],
      "$dynamic_template.bridge:item_equipped_sensor": {
        "$if": "$dynamic.bridge_core.is_active",
        "$default": {
          "on_equip": {
            "$dynamic.list.next_index": {
              "@meta": { "is_value": true },
              "@import.value": "$dynamic.cache.entity.events"
            }
          },
          "on_unequip": {
            "$dynamic.list.next_index": {
              "@meta": { "is_value": true },
              "@import.value": "$dynamic.cache.entity.events"
            }
          },
          "execute_commands": {
            "$dynamic.list.next_index": "$function.embedded"
          },
          "is_equipped": "$entity.components",
          "is_not_equipped": "$entity.components"
        }
      },
      "$versioned_template.minecraft:display_name": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "value": { "@meta": { "is_value": true } } }
        }
      ]
    },
    "main": {
      "format_version": {
        "@import.value": "$general.format_version",
        "@meta": {
          "is_value": true,
          "validate": {
            "confirm": "['1.16.200', '1.16.210', '1.16.220'].includes(Bridge.Node.data)",
            "then": {
              "is_warning": true,
              "show": true,
              "message": "Format versions 1.16.200–1.16.220 may produce unexpected results; use 1.17.0 instead"
            }
          }
        }
      },
      "minecraft:item": {
        "description": {
          "identifier": "$general.file_identifier and $general.item_identifier",
          "$versioned_template.category": [
            {
              "$if": "$format_version >= 1.16.100",
              "$data": "$general.item_category"
            }
          ],
          "is_experimental": "$general.boolean"
        },
        "components": "$item.components",
        "$versioned_template.events": [
          {
            "$if": "$format_version >= 1.16.100",
            "$data": { "$placeholder": "$item.event" }
          }
        ]
      }
    },
    "general": {
      "effect_definition": {
        "name": "$general.effect_name",
        "chance": "$general.decimal",
        "duration": "$general.number",
        "amplifier": "$general.number",
        "visible": "$general.number_boolean",
        "ambient": "$general.number_boolean"
      },
      "event_definition": {
        "event": {
          "@meta": { "is_value": true },
          "@import.value": "$dynamic.item.events"
        },
        "target": ["self", "other", "target", "parent", "baby", "holder"],
        "condition": "$molang.embedded"
      },
      "saturation_modifier": [
        "poor",
        "low",
        "normal",
        "good",
        "max",
        "supernatural"
      ],
      "slots": [
        "axe",
        "bow",
        "armor_feet",
        "armor_torso",
        "armor_head",
        "armor_legs",
        "hoe",
        "pickaxe",
        "shovel",
        "elytra",
        "fishing_rod",
        "flintsteel",
        "sword",
        "shears",
        "cosmetic_head"
      ],
      "cooldown_types": ["chorusfruit", "ender_pearl"],
      "fertilizer_types": ["bonemeal", "rapid"],
      "potion_types": ["lingering", "regular", "splash"],
      "door_types": [
        "iron",
        "acacia",
        "birch",
        "dark_oak",
        "jungle",
        "oak",
        "spruce"
      ],
      "item_group_names": [
        "axe",
        "pickaxe",
        "shovel",
        "sword",
        "tools",
        "hoe",
        "trident",
        "throwables",
        "shield",
        "arrow",
        "bows",
        "totem",
        "boots",
        "chestplate",
        "helmet",
        "leggings",
        "elytra",
        "turtleHelmet",
        "door",
        "sign",
        "anvil",
        "bricks",
        "armorStand",
        "cauldron",
        "craftingTables",
        "furnaces",
        "woolCarpet",
        "walls",
        "natureBuildingBlocks",
        "fence",
        "fenceGate",
        "glowstone",
        "crop",
        "nature",
        "seed",
        "natureMisc",
        "grass",
        "coral_decorations",
        "flower",
        "sapling",
        "miscFood",
        "rawFood",
        "cookedFood",
        "banner_pattern",
        "items",
        "boat",
        "blaze",
        "book",
        "bowl",
        "buckets",
        "fishingRods",
        "minecart",
        "clayBall",
        "coal",
        "redstoneProducers",
        "diamond",
        "potionIngredients",
        "emerald",
        "navigation",
        "enchantedBook",
        "endCrystal",
        "bottles",
        "arrowComponents",
        "fireCharge",
        "decorations",
        "ghastTear",
        "bottles",
        "gold",
        "gunpowder",
        "nautilus",
        "redstoneContainers",
        "horseArmor",
        "nameTag",
        "leather",
        "bricks",
        "netherStar",
        "paper",
        "phantomMembrane",
        "prismarineItems",
        "netherQuartz",
        "record",
        "redstone",
        "saddle",
        "stick",
        "shulkerShell",
        "skull",
        "slimeBall",
        "snowball",
        "scute",
        "mobEgg"
      ],
      "item_group_reference": "('itemGroup.name.' + $item.general.item_group_names)",
      "music_events": [
        "13",
        "cat",
        "blocks",
        "chirp",
        "far",
        "mall",
        "mellohi",
        "stal",
        "strad",
        "ward",
        "11",
        "wait",
        "pigstep"
      ],
      "hand_type": ["main_hand", "off_hand"],
      "camera_type": ["first_person", "third_person"],
      "render_offset": {
        "position": { "$dynamic.list.index_triple": "$general.number" },
        "rotation": { "$dynamic.list.index_triple": "$general.number" },
        "scale": { "$dynamic.list.index_triple": "$general.decimal" }
      }
    },
    "event": {
      "@meta": { "expand_path_exceptions": ["swing", "decrement_stack"] },
      "randomize": {
        "$dynamic.list.next_index": {
          "weight": "$general.number",
          "$load": "$item.event"
        }
      },
      "shoot": {
        "projectile": "$general.entity_identifier",
        "launch_power": "$general.number",
        "angle_offset": "$general.number and $molang.embedded"
      },
      "swing": {},
      "decrement_stack": { "ignore_game_mode": "$general.boolean" },
      "damage": {
        "type": "$general.damage_type",
        "amount": "$general.number",
        "target": ["self", "holder"]
      },
      "add_mob_effect": {
        "effect": "$general.effect_name",
        "target": ["holder", "other"],
        "duration": "$general.number",
        "amplifier": "$general.number"
      },
      "remove_mob_effect": {
        "effect": "$general.effect_name",
        "target": ["holder"]
      },
      "transform_item": { "transform": "$general.item_identifier" },
      "sequence": {
        "$dynamic.list.next_index": {
          "condition": "$molang.embedded",
          "$load": "$item.event"
        }
      },
      "teleport": {
        "target": ["holder"],
        "avoid_water": "$general.boolean",
        "destination": { "$dynamic.list.index_triple": "$general.number" },
        "land_on_block": "$general.boolean",
        "max_range": { "$dynamic.list.index_triple": "$general.number" }
      },
      "run_command": {
        "command": {
          "$dynamic.list.next_index": "$function.embedded_no_slash"
        },
        "target": ["other", "holder"]
      }
    }
  },
  "general": {
    "number": {
      "@meta": {
        "validate": {
          "confirm": "Bridge.Node.data === '' || Number.isNaN(Number(Bridge.Node.data))",
          "then": {
            "show": true,
            "message": "Invalid data type: Expected number"
          }
        }
      },
      "@import.value": ["0", "1", "2", "3", "4", "5", "@wildcard"]
    },
    "number0_15": {
      "@meta": {
        "validate": {
          "confirm": "let x = Number(Bridge.Node.data); Bridge.Node.data === '' || Number.isNaN(x) || x < 0 || x > 15",
          "then": {
            "show": true,
            "message": "Invalid data type: Expected number between 0 and 15"
          }
        }
      },
      "@import.value": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15"
      ]
    },
    "decimal": {
      "@meta": {
        "validate": {
          "confirm": "Bridge.Node.data === '' || Number.isNaN(Number(Bridge.Node.data))",
          "then": {
            "show": true,
            "message": "Invalid data type: Expected number"
          }
        }
      },
      "@import.value": [
        "0.0",
        "0.1",
        "0.2",
        "0.3",
        "0.4",
        "0.5",
        "0.6",
        "0.7",
        "0.8",
        "0.9",
        "@wildcard"
      ]
    },
    "degree": {
      "@meta": {
        "validate": {
          "confirm": "Bridge.Node.data === '' || Number.isNaN(Bridge.Node.data)",
          "then": {
            "show": true,
            "message": "Invalid data type: Expected number"
          }
        }
      },
      "@import.value": ["45", "90", "135", "180", "225", "270", "335", "360"]
    },
    "boolean": {
      "@meta": {
        "validate": {
          "confirm": "Bridge.Node.data !== 'true' && Bridge.Node.data !== 'false'",
          "then": {
            "show": true,
            "message": "Invalid data type: Expected boolean"
          }
        }
      },
      "@import.value": ["true", "false"]
    },
    "number_boolean": {
      "@meta": {
        "validate": {
          "confirm": "Bridge.Node.data !== '0' && Bridge.Node.data !== '1'",
          "then": {
            "show": true,
            "message": "Invalid data type: Expected number (0 or 1)"
          }
        }
      },
      "@import.value": ["0", "1"]
    },
    "format_version": {
      "@meta": {
        "validate": "formatVersion.js",
        "propose_filter": {
          "value": "Bridge.Version.compare(Bridge.Item, Bridge.Version.ProjectTarget, '<=')"
        }
      },
      "@import.value": [
        "1.8.0",
        "1.9.0",
        "1.10.0",
        "1.11.0",
        "1.12.0",
        "1.13.0",
        "1.14.0",
        "1.16.0",
        "1.16.100",
        "1.16.200",
        "1.16.210",
        "1.16.220",
        "1.17.0"
      ]
    },
    "translatable_text": { "@meta": { "is_value": true } },
    "file_identifier": {
      "@meta": {
        "validate": [
          {
            "confirm": "Bridge.Node.data && Bridge.Node.data.includes(' ')",
            "then": {
              "show": true,
              "message": "Identifiers must not contain spaces"
            }
          },
          {
            "confirm": "Bridge.Node.data && Bridge.Node.data.toLowerCase() !== Bridge.Node.data",
            "then": {
              "show": true,
              "message": "Identifiers must not contain uppercase letters"
            }
          }
        ]
      },
      "@import.value.file_identifier": "($dynamic.setting.project_prefix + $dynamic.current_file_name)"
    },
    "inventory_type": [
      "minecart_chest",
      "horse",
      "minecart_hopper",
      "container",
      "inventory",
      "hopper"
    ],
    "damage_type": [
      "override",
      "contact",
      "none",
      "lava",
      "entity_attack",
      "fire_tick",
      "projectile",
      "suffocation",
      "fall",
      "fatal",
      "starve",
      "fire",
      "drowning",
      "block_explosion",
      "entity_explosion",
      "void",
      "suicide",
      "magic",
      "wither",
      "charging",
      "anvil",
      "thorns",
      "falling_block",
      "piston",
      "magma",
      "fireworks",
      "temperature",
      "lightning",
      "all",
      "fly_into_wall"
    ],
    "potion_number_id": [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
      "13",
      "14",
      "15",
      "16",
      "17",
      "18",
      "19",
      "20",
      "21",
      "22",
      "23",
      "24",
      "25",
      "26",
      "27",
      "28",
      "29",
      "30",
      "31",
      "32",
      "34",
      "35",
      "36",
      "37",
      "38",
      "39",
      "40",
      "41"
    ],
    "hourly_clock_time": [
      "0",
      "1000",
      "2000",
      "3000",
      "4000",
      "5000",
      "6000",
      "7000",
      "8000",
      "9000",
      "10000",
      "11000",
      "12000",
      "13000",
      "14000",
      "15000",
      "16000",
      "17000",
      "18000",
      "19000",
      "20000",
      "21000",
      "22000",
      "23000",
      "24000"
    ],
    "poi_type": ["bed"],
    "slot_type": [
      "slot.armor",
      "slot.armor.chest",
      "slot.armor.feet",
      "slot.armor.head",
      "slot.armor.legs",
      "slot.chest",
      "slot.enderchest",
      "slot.hotbar",
      "slot.inventory",
      "slot.saddle",
      "slot.weapon.mainhand",
      "slot.weapon.offhand"
    ],
    "ability": [
      "worldbuilder",
      "invulnerable",
      "flying",
      "instabuild",
      "flySpeed",
      "lightning",
      "walkSpeed",
      "noclip",
      "mayfly",
      "mute"
    ],
    "has_equipment_slot": [
      "any",
      "armor",
      "feet",
      "hand",
      "head",
      "leg",
      "torso"
    ],
    "color_palette": [
      "white",
      "light_green",
      "orange",
      "silver",
      "magenta",
      "light_blue",
      "yellow",
      "pink",
      "blue",
      "gray",
      "cyan",
      "purple",
      "brown",
      "green",
      "red",
      "black"
    ],
    "structures": [
      "buriedtreasure",
      "endcity",
      "fortress",
      "mansion",
      "mineshaft",
      "monument",
      "pillageroutpost",
      "ruins",
      "shipwreck",
      "stronghold",
      "temple",
      "village"
    ],
    "particle_name": [
      "mobspellambient",
      "villagerangry",
      "blockbreak",
      "blockdust",
      "bubble",
      "evaporation",
      "crit",
      "dragonbreath",
      "driplava",
      "dripwater",
      "reddust",
      "spell",
      "mobappearance",
      "enchantingtable",
      "endrod",
      "mobspell",
      "largeexplode",
      "hugeexplosion",
      "fallingdust",
      "fireworksspark",
      "waterwake",
      "flame",
      "villagerhappy",
      "heart",
      "mobspellinstantaneous",
      "iconcrack",
      "slime",
      "snowballpoof",
      "largesmoke",
      "lava",
      "mobflame",
      "townaura",
      "nautilus",
      "note",
      "explode",
      "portal",
      "rainsplash",
      "smoke",
      "watersplash",
      "ink",
      "terrain",
      "totem",
      "trackingemitter",
      "witchspell"
    ],
    "entity_identifier": {
      "@meta": { "definitions": ["entity"] },
      "@import.value.entity": "$dynamic.cache.entity.identifiers and $vanilla.entity_identifier"
    },
    "block_identifier": {
      "@meta": { "definitions": ["block"] },
      "@import.value.block": "$dynamic.cache.block.identifiers and $vanilla.block_identifier"
    },
    "item_identifier": {
      "@meta": { "definitions": ["item"] },
      "@import.value.item": "$dynamic.cache.item.identifiers and $vanilla.item_identifier"
    },
    "model_identifier": {
      "@meta": { "is_value": true, "definitions": ["entity_model"] },
      "@import.value": "$dynamic.cache.model.identifiers",
      "@import.value_old": "$dynamic.cache.model.old_identifiers"
    },
    "fog_identifier": "$dynamic.cache.fog.identifiers and $vanilla.fog_identifier",
    "effect_name": [
      "all",
      "absorption",
      "bad_omen",
      "blindness",
      "conduit_power",
      "fatal_poison",
      "fire_resistance",
      "haste",
      "health_boost",
      "hunger",
      "instant_damage",
      "instant_health",
      "invisibility",
      "jump_boost",
      "levitation",
      "mining_fatigue",
      "nausea",
      "night_vision",
      "poison",
      "regeneration",
      "resistance",
      "saturation",
      "slow_falling",
      "slowness",
      "speed",
      "strength",
      "village_hero",
      "water_breathing",
      "weakness",
      "wither"
    ],
    "enchantment_name": [
      "aqua_affinity",
      "bane_of_arthropods",
      "binding",
      "blast_protection",
      "channeling",
      "depth_strider",
      "efficiency",
      "feather_falling",
      "fire_aspect",
      "fire_protection",
      "flame",
      "fortune",
      "frost_walker",
      "impaling",
      "infinity",
      "knockback",
      "looting",
      "loyalty",
      "luck_of_the_sea",
      "lure",
      "mending",
      "multishot",
      "piercing",
      "power",
      "projectile_protection",
      "protection",
      "punch",
      "quick_charge",
      "respiration",
      "riptide",
      "sharpness",
      "silk_touch",
      "smite",
      "soul_speed",
      "thorns",
      "unbreaking",
      "vanishing"
    ],
    "gamerule": [
      "alwaysday",
      "commandblockoutput",
      "commandblocksenabled",
      "dodaylightcycle",
      "doentitydrops",
      "dofiretick",
      "doimmediaterespawn",
      "domobloot",
      "domobspawning",
      "dotiledrops",
      "doweathercycle",
      "drowningdamage",
      "falldamage",
      "firedamage",
      "functioncommandlimit",
      "keepinventory",
      "maxcommandchainlength",
      "mobgriefing",
      "naturalregeneration",
      "pvp",
      "randomtickspeed",
      "sendcommandfeedback",
      "showcoordinates",
      "showdeathmessages",
      "tntexplodes"
    ],
    "game_difficulty": [
      "easy",
      "e",
      "hard",
      "h",
      "normal",
      "n",
      "peaceful",
      "p"
    ],
    "gamemode": ["adventure", "creative", "default", "survival"],
    "biome_tag": [
      "monster",
      "animal",
      "ocean",
      "nether",
      "the_end",
      "mooshroom_island",
      "plains",
      "desert",
      "jungle",
      "taiga",
      "extreme_hills",
      "savanna",
      "frozen",
      "cold",
      "lukewarm",
      "warm",
      "river",
      "swamp",
      "beach",
      "flower_forest",
      "forest",
      "birch",
      "dark_oak",
      "hills",
      "mutated",
      "edge",
      "lakes",
      "plateau",
      "deep",
      "mesa",
      "ice_plains",
      "ice",
      "mountain",
      "shore",
      "stone",
      "roofed",
      "mega",
      "netherwart_forest",
      "crimson_forest",
      "warped_forest",
      "soulsand_valley",
      "nether_wastes",
      "basalt_deltas",
      "spawn_few_zombified_piglins",
      "spawn_piglin",
      "spawn_endermen",
      "spawn_ghast",
      "spawn_magma_cubes",
      "spawn_many_magma_cubes",
      "overworld",
      "overworld_generation"
    ],
    "biome_name": [
      "ice",
      "forest",
      "extreme_hills",
      "beach",
      "jungle",
      "desert",
      "flat",
      "the_nether",
      "mesa",
      "plain",
      "mushroom_island",
      "ocean",
      "river",
      "savanna",
      "stone_beach",
      "swamp",
      "taiga",
      "the_end"
    ],
    "sound": { "@meta": { "is_value": true } },
    "minecraft_color": [
      "dark_red",
      "red",
      "gold",
      "yellow",
      "dark_green",
      "green",
      "aqua",
      "dark_aqua",
      "dark_blue",
      "blue",
      "light_purple",
      "dark_purple",
      "white",
      "gray",
      "dark_gray",
      "black",
      "minecoin_gold"
    ],
    "item_category": [
      "nature",
      "construction",
      "items",
      "equipment",
      "none",
      "commands"
    ]
  },
  "spawn_group": {
    "components": {
      "minecraft:mob_event_filter": {
        "event": { "@meta": { "is_value": true } }
      }
    },
    "main": {
      "format_version": "$general.format_version",
      "minecraft:spawn_groups": {
        "description": {
          "identifier": {
            "@meta": { "is_value": true },
            "@import.value.spawn_group": "$general.file_identifier"
          }
        },
        "conditions": {
          "$dynamic.list.next_index": "$spawn_rule.components and $spawn_rule.beta_components and $spawn_group.components"
        }
      }
    }
  },
  "entity": {
    "behavior": {
      "minecraft:behavior.admire_item": {
        "priority": "$general.number",
        "admire_item_sound": "$general.sound",
        "sound_interval": {
          "range_min": "$general.number",
          "range_max": "$general.number"
        },
        "on_admire_item_start": "$entity.general.event_definition",
        "on_admire_item_stop": "$entity.general.event_definition"
      },
      "minecraft:behavior.avoid_block": {
        "priority": "$general.number",
        "tick_interval": "$general.number",
        "search_range": "$general.number",
        "search_height": "$general.number",
        "walk_speed_modifier": "$general.decimal",
        "sprint_speed_modifier": "$general.decimal",
        "target_selection_method": ["nearest"],
        "target_blocks": {
          "$dynamic.list.next_index": "$general.block_identifier"
        },
        "on_escape": "$entity.general.event_definition"
      },
      "minecraft:behavior.avoid_mob_type": {
        "priority": "$general.number",
        "entity_types": "$entity.general.entity_types",
        "ignore_visibility": "$general.boolean",
        "remove_target": "$general.boolean",
        "max_dist": "$general.number",
        "max_flee": "$general.number",
        "probability_per_strength": "$general.decimal",
        "sprint_speed_multiplier": "$general.decimal",
        "walk_speed_multiplier": "$general.decimal",
        "on_escape_event": "$entity.general.event_definition",
        "avoid_mob_sound": "$general.sound",
        "sound_interval": {
          "range_min": "$general.number",
          "range_max": "$general.number"
        }
      },
      "minecraft:behavior.barter": { "priority": "$general.number" },
      "minecraft:behavior.beg": {
        "priority": "$general.number",
        "look_distance": "$general.number",
        "look_time": { "$dynamic.list.index_pair": "$general.number" },
        "items": { "$dynamic.list.next_index": "$general.item_identifier" }
      },
      "minecraft:behavior.break_door": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.breed": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.celebrate": {
        "priority": "$general.number",
        "celebration_sound": "$general.sound",
        "sound_interval": {
          "range_min": "$general.number",
          "range_max": "$general.number"
        },
        "jump_interval": {
          "range_min": "$general.number",
          "range_max": "$general.number"
        },
        "duration": "$general.number",
        "on_celebration_end_event": "$entity.general.event_definition"
      },
      "minecraft:behavior.charge_attack": { "priority": "$general.number" },
      "minecraft:behavior.charge_held_item": {
        "priority": "$general.number",
        "items": { "$dynamic.list.next_index": "$general.item_identifier" }
      },
      "minecraft:behavior.circle_around_anchor": {
        "priority": "$general.number",
        "radius_range": { "$dynamic.list.index_pair": "$general.number" },
        "radius_change": "$general.number",
        "radius_adjustment_chance": "$general.number",
        "height_above_target_range": {
          "$dynamic.list.index_pair": "$general.number"
        },
        "height_offset_range": {
          "$dynamic.list.index_pair": "$general.number"
        },
        "height_adjustment_chance": "$general.number",
        "goal_radius": "$general.number",
        "angle_change": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.controlled_by_player": {
        "priority": "$general.number",
        "mount_speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.defend_trusted_target": {
        "priority": "$general.number",
        "attack_chance": "$general.decimal",
        "within_radius": "$general.number",
        "must_see": "$general.boolean",
        "aggro_sound": "$general.sound",
        "sound_chance": "$general.decimal",
        "on_defend_start": "$entity.general.event_definition"
      },
      "minecraft:behavior.defend_village_target": {
        "priority": "$general.number",
        "entity_types": "$entity.general.entity_types"
      },
      "minecraft:behavior.delayed_attack": {
        "@meta": {
          "validate": {
            "confirm": "Bridge.Node.toJSON().track_target !== true",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "Only works with \"track_target\": \"true\"",
              "fix": {
                "run": "Bridge.Node.error = undefined; Bridge.Node.buildFromObject({ track_target: true }, undefined, true);"
              }
            }
          }
        },
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "attack_once": "$general.boolean",
        "require_complete_path": "$general.boolean",
        "random_stop_interval": "$general.number",
        "reach_multiplier": "$general.decimal",
        "attack_duration": "$general.decimal",
        "hit_delay_pct": "$general.decimal",
        "track_target": "$general.boolean",
        "sound_event": "$general.sound"
      },
      "minecraft:behavior.door_interact": { "priority": "$general.number" },
      "minecraft:behavior.drink_potion": {
        "priority": "$general.number",
        "speed_modifier": "$general.decimal",
        "potions": {
          "$dynamic.list.next_index": {
            "id": "$general.potion_number_id",
            "chance": "$general.decimal",
            "filters": "$entity.filters"
          }
        }
      },
      "minecraft:behavior.dragonlanding": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.dragonlanding\" can only be used by the ender dragon"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.dragonflaming": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.dragonflaming\" can only be used by the ender dragon"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.dragonscanning": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.dragonscanning\" can only be used by the ender dragon"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.dragontakeoff": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.dragontakeoff\" can only be used by the ender dragon"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.dragonchargeplayer": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.dragonchargeplayer\" can only be used by the ender dragon"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.dragonstrafeplayer": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.dragonstrafeplayer\" can only be used by the ender dragon"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.dragonholdingpattern": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.dragonholdingpattern\" can only be used by the ender dragon"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.dragondeath": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.dragondeath\" can only be used by the ender dragon"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.drop_item_for": {
        "priority": "$general.number",
        "cooldown": "$general.number",
        "drop_item_chance": "$general.decimal",
        "entity_types": "$entity.general.entity_types",
        "goal_radius": "$general.decimal",
        "loot_table": "$dynamic.loot_table_files",
        "max_dist": "$general.number",
        "max_head_look_at_height": "$general.number",
        "minimum_teleport_distance": "$general.number",
        "offering_distance": "$general.number",
        "on_drop_attempt": "$entity.general.event_definition",
        "search_count": "$general.number",
        "search_height": "$general.number",
        "search_range": "$general.number",
        "seconds_before_pickup": "$general.number",
        "speed_multiplier": "$general.decimal",
        "time_of_day_range": { "$dynamic.list.index_pair": "$general.decimal" },
        "target_range": { "$dynamic.list.index_triple": "$general.number" },
        "teleport_offset": { "$dynamic.list.index_triple": "$general.number" }
      },
      "$versioned_template.minecraft:behavior.eat_block": [
        {
          "$if": "$format_version < 1.16.0",
          "$data": {
            "priority": "$general.number",
            "on_eat": "$entity.general.event_definition"
          }
        },
        {
          "$if": "$format_version >= 1.16.0",
          "$data": {
            "priority": "$general.number",
            "success_chance": "$molang.embedded",
            "time_until_eat": "$general.number",
            "eat_and_replace_block_pairs": {
              "$dynamic.list.next_index": {
                "eat_block": "$general.block_identifier",
                "replace_block": "$general.block_identifier"
              }
            },
            "on_eat": "$entity.general.event_definition"
          }
        }
      ],
      "minecraft:behavior.eat_carried_item": {
        "priority": "$general.number",
        "delay_before_eating": "$general.number"
      },
      "minecraft:behavior.enderman_leave_block": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:enderman')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.enderman_leave_block\" can only be used by endermen"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.enderman_take_block": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:enderman')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.enderman_take_block\" can only be used by endermen"
            }
          }
        },
        "priority": "$general.number"
      },
      "$versioned_template.minecraft:behavior.equip_items": [
        {
          "$if": "$format_version >= 1.16.0",
          "$data": { "priority": "$general.number" }
        }
      ],
      "minecraft:behavior.explore_outskirts": {
        "priority": "$general.number",
        "explore_dist": "$general.number",
        "wait_time": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.find_cover": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "cooldown_time": "$general.decimal"
      },
      "minecraft:behavior.find_mount": {
        "priority": "$general.number",
        "within_radius": "$general.number",
        "avoid_water": "$general.boolean",
        "mount_distance": "$general.number",
        "start_delay": "$general.number",
        "target_needed": "$general.boolean",
        "max_failed_attempts": "$general.number"
      },
      "minecraft:behavior.find_underwater_treasure": {
        "priority": "$general.number",
        "search_range": "$general.number",
        "stop_distance": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.flee_sun": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.float": { "priority": "$general.number" },
      "minecraft:behavior.float_wander": {
        "priority": "$general.number",
        "float_duration": { "$dynamic.list.index_pair": "$general.number" },
        "random_reselect": "$general.boolean",
        "must_reach": "$general.boolean",
        "xz_dist": "$general.number",
        "y_dist": "$general.number",
        "y_offset": "$general.number"
      },
      "minecraft:behavior.follow_caravan": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "entity_count": "$general.number",
        "entity_types": "$entity.general.entity_types"
      },
      "minecraft:behavior.follow_mob": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "stop_distance": "$general.number",
        "search_range": "$general.number"
      },
      "minecraft:behavior.follow_owner": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "start_distance": "$general.number",
        "stop_distance": "$general.number"
      },
      "minecraft:behavior.follow_parent": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.follow_target_captain": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "within_radius": "$general.number",
        "follow_distance": "$general.number"
      },
      "minecraft:behavior.go_home": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "interval": "$general.number",
        "goal_radius": "$general.number",
        "on_home": "$entity.general.event_definition",
        "on_failed": "$entity.general.event_definition"
      },
      "minecraft:behavior.guardian_attack": { "priority": "$general.number" },
      "minecraft:behavior.harvest_farm_block": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:villager') || !Bridge.File.usesEntity('minecraft:villager_v2')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.harvest_farm_block\" can only be used by villagers"
            }
          }
        },
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.hide": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "poi_type": "$general.poi_type",
        "duration": "$general.number"
      },
      "minecraft:behavior.hover": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.hurt_by_target": {
        "priority": "$general.number",
        "alert_same_type": "$general.boolean",
        "entity_types": "$entity.general.entity_types",
        "hurt_owner": "$general.boolean"
      },
      "minecraft:behavior.inspect_bookshelf": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "search_range": "$general.number",
        "search_height": "$general.number",
        "goal_radius": "$general.decimal",
        "search_count": "$general.number"
      },
      "minecraft:behavior.knockback_roar": {
        "priority": "$general.number",
        "attack_time": "$general.decimal",
        "cooldown_time": "$general.decimal",
        "duration": "$general.number",
        "knockback_damage": "$general.number",
        "knockback_strength": "$general.number",
        "knockback_range": "$general.number",
        "knockback_filters": "$entity.filters",
        "damage_filters": "$entity.filters",
        "on_roar_end": "$entity.general.event_definition"
      },
      "$versioned_template.minecraft:behavior.jump_to_block": [
        {
          "$if": "$format_version >= 1.16.200",
          "$data": {
            "priority": "$general.number",
            "search_width": "$general.number",
            "search_height": "$general.number",
            "minimum_path_length": "$general.number",
            "scale_factor": "$general.decimal",
            "cooldown_range": { "$dynamic.list.index_pair": "$general.number" }
          }
        }
      ],
      "minecraft:behavior.lay_egg": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "search_range": "$general.number",
        "search_height": "$general.number",
        "goal_radius": "$general.number",
        "on_lay": "$entity.general.event_definition"
      },
      "minecraft:behavior.lay_down": {
        "priority": "$general.number",
        "interval": "$general.number",
        "random_stop_interval": "$general.number"
      },
      "minecraft:behavior.leap_at_target": {
        "priority": "$general.number",
        "set_persistent": "$general.boolean",
        "target_dist": "$general.decimal",
        "must_be_on_ground": "$general.boolean",
        "yd": "$general.decimal"
      },
      "minecraft:behavior.look_at_entity": {
        "priority": "$general.number",
        "angle_of_view_horizontal": "$general.degree",
        "angle_of_view_vertical": "$general.degree",
        "look_distance": "$general.number",
        "look_time": { "$dynamic.list.index_pair": "$general.number" },
        "probability": "$general.decimal"
      },
      "minecraft:behavior.look_at_player": "$entity.behavior.minecraft:behavior&dot;look_at_entity",
      "minecraft:behavior.look_at_target": "$entity.behavior.minecraft:behavior&dot;look_at_entity",
      "minecraft:behavior.look_at_trading_player": "$entity.behavior.minecraft:behavior&dot;look_at_entity",
      "minecraft:behavior.make_love": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:villager') || !Bridge.File.usesEntity('minecraft:villager_v2')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.make_love\" can only be used by villagers"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.melee_attack": {
        "priority": "$general.number",
        "attack_once": "$general.boolean",
        "max_dist": "$general.number",
        "melee_fov": "$general.degree",
        "random_stop_interval": "$general.decimal",
        "reach_multiplier": "$general.decimal",
        "require_complete_path": "$general.boolean",
        "speed_multiplier": "$general.decimal",
        "track_target": "$general.boolean",
        "target_dist": "$general.number",
        "look_distance": "$general.number",
        "untrackable_cooldown_delay": "$general.number",
        "target_tracking": {
          "refresh_period_min": "$general.number",
          "refresh_period_max": "$general.number",
          "backoff": {
            "$dynamic.list.next_index": {
              "distance_squared_gt": "$general.number",
              "refresh_period_delta": "$general.number"
            }
          }
        },
        "on_attack": "$entity.general.event_definition"
      },
      "minecraft:behavior.mingle": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "duration": "$general.number",
        "cooldown_time": "$general.number",
        "mingle_partner_type": "$general.entity_identifier",
        "mingle_distance": "$general.number"
      },
      "minecraft:behavior.mount_pathing": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "target_dist": "$general.number",
        "track_target": "$general.boolean"
      },
      "minecraft:behavior.move_indoors": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:villager') || !Bridge.File.usesEntity('minecraft:villager_v2')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.move_indoors\" can only be used by villagers"
            }
          }
        },
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.move_through_village": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:villager') || !Bridge.File.usesEntity('minecraft:villager_v2')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.move_through_village\" can only be used by villagers"
            }
          }
        },
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "only_at_night": "$general.boolean"
      },
      "minecraft:behavior.move_towards_restriction": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "control_flags": ["move", "look"]
      },
      "$versioned_template.minecraft:behavior.move_towards_dwelling_restriction": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "priority": "$general.number",
            "speed_multiplier": "$general.decimal",
            "control_flags": ["move", "look"]
          }
        }
      ],
      "$versioned_template.minecraft:behavior.move_towards_home_restriction": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "priority": "$general.number",
            "speed_multiplier": "$general.decimal",
            "control_flags": ["move", "look"]
          }
        }
      ],
      "minecraft:behavior.move_towards_target": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "within_radius": "$general.number"
      },
      "minecraft:behavior.move_to_block": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "tick_interval": "$general.number",
        "start_chance": "$general.decimal",
        "search_range": "$general.number",
        "search_height": "$general.number",
        "goal_radius": "$general.decimal",
        "stay_duration": "$general.number",
        "target_selection_method": ["nearest", "random"],
        "target_offset": { "$dynamic.list.index_triple": "$general.decimal" },
        "target_blocks": {
          "$dynamic.list.next_index": "$general.item_identifier"
        },
        "on_stay_completed": "$entity.general.event_definition",
        "on_reach": "$entity.general.event_definition"
      },
      "minecraft:behavior.move_to_land": "$entity.behavior.minecraft:behavior&dot;move_to_water",
      "minecraft.behavior.move_to_poi": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "poi_type": "$general.poi_type"
      },
      "$versioned_template.minecraft:behavior.move_to_lava": [
        {
          "$if": "$format_version >= 1.16.0",
          "$data": "$entity.behavior.minecraft:behavior&dot;move_to_water"
        }
      ],
      "minecraft:behavior.move_to_random_block": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "within_radius": "$general.number",
        "block_distance": "$general.number"
      },
      "minecraft:behavior.move_to_village": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.move_to_water": {
        "priority": "$general.number",
        "goal_radius": "$general.decimal",
        "search_count": "$general.number",
        "search_height": "$general.number",
        "search_range": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.nap": {
        "priority": "$general.number",
        "cooldown_min": "$general.decimal",
        "cooldown_max": "$general.decimal",
        "mob_detect_dist": "$general.number",
        "mob_detect_height": "$general.number",
        "can_nap_filters": "$entity.filters",
        "wake_mob_exceptions": "$entity.filters"
      },
      "minecraft:behavior.nearest_attackable_target": {
        "priority": "$general.number",
        "set_persistent": "$general.boolean",
        "attack_interval": "$general.number",
        "entity_types": "$entity.general.entity_types",
        "must_reach": "$general.boolean",
        "must_see": "$general.boolean",
        "must_see_forget_duration": "$general.number",
        "persist_time": "$general.decimal",
        "reselect_targets": "$general.boolean",
        "scan_interval": "$general.number",
        "target_search_height": "$general.decimal",
        "within_radius": "$general.decimal"
      },
      "minecraft:behavior.nearest_prioritized_attackable_target": {
        "priority": "$general.number",
        "set_persistent": "$general.boolean",
        "attack_interval": "$general.number",
        "reselect_targets": "$general.boolean",
        "target_search_height": "$general.number",
        "entity_types": "$entity.general.prioritized_entity_types"
      },
      "minecraft:behavior.ocelotattack": {
        "priority": "$general.number",
        "sneak_speed_multiplier": "$general.decimal",
        "sprint_speed_multiplier": "$general.decimal",
        "walk_speed_multiplier": "$general.decimal",
        "cooldown_time": "$general.number",
        "x_max_rotation": "$general.degree",
        "y_max_head_rotation": "$general.degree",
        "max_distance": "$general.number",
        "max_sneak_range": "$general.number",
        "max_sprint_range": "$general.number",
        "reach_multiplier": "$general.number"
      },
      "minecraft:behavior.ocelot_sit_on_block": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.offer_flower": { "priority": "$general.number" },
      "minecraft:behavior.open_door": {
        "priority": "$general.number",
        "close_door_after": "$general.boolean"
      },
      "minecraft:behavior.owner_hurt_by_target": {
        "priority": "$general.number",
        "entity_types": "$entity.general.entity_types"
      },
      "minecraft:behavior.owner_hurt_target": {
        "priority": "$general.number",
        "entity_types": "$entity.general.entity_types"
      },
      "minecraft:behavior.panic": {
        "priority": "$general.number",
        "force": "$general.boolean",
        "damage_sources": "$general.damage_type",
        "ignore_mob_damage": "$general.boolean",
        "prefer_water": "$general.boolean",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.peek": { "priority": "$general.number" },
      "minecraft:behavior.pet_sleep_with_owner": {
        "priority": "$general.number",
        "goal_radius": "$general.decimal",
        "search_height": "$general.number",
        "search_radius": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.pickup_items": {
        "priority": "$general.number",
        "max_dist": "$general.number",
        "goal_radius": "$general.number",
        "speed_multiplier": "$general.decimal",
        "track_target": "$general.boolean",
        "pickup_based_on_chance": "$general.boolean",
        "can_pickup_any_item": "$general.boolean",
        "can_pickup_to_hand_or_equipment": "$general.boolean",
        "cooldown_after_being_attacked": "$general.number"
      },
      "minecraft:behavior.play": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:villager') || !Bridge.File.usesEntity('minecraft:villager_v2')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.play\" can only be used by villagers"
            }
          }
        },
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "$versioned_template.minecraft:play_dead": [
        {
          "$if": "$format_version >= 1.16.220",
          "$data": {
            "priority": "$general.number",
            "duration": "$general.number",
            "force_below_health": "$general.number",
            "random_start_chance": "$general.decimal",
            "random_damage_range": {
              "$dynamic.list.index_pair": "$general.number"
            },
            "damage_sources": {
              "$dynamic.list.next_index": "$general.damage_type"
            },
            "apply_regeneration": "$general.boolean"
          }
        }
      ],
      "minecraft:behavior.player_ride_tamed": { "priority": "$general.number" },
      "minecraft:behavior.raid_garden": {
        "priority": "$general.number",
        "blocks": { "$dynamic.list.next_index": "$general.block_identifier" },
        "eat_delay": "$general.number",
        "full_delay": "$general.number",
        "max_to_eat": "$general.number",
        "search_range": "$general.number",
        "goal_radius": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.random_breach": {
        "$load": "$entity.behavior.minecraft:behavior&dot;random_stroll",
        "cooldown_time": "$general.number"
      },
      "minecraft:behavior.random_fly": {
        "priority": "$general.number",
        "xz_dist": "$general.number",
        "y_dist": "$general.number",
        "y_offset": "$general.number",
        "speed_multiplier": "$general.decimal",
        "can_land_on_trees": "$general.boolean",
        "avoid_damage_blocks": "$general.boolean"
      },
      "minecraft:behavior.random_hover": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "xz_dist": "$general.number",
        "y_dist": "$general.number",
        "y_offset": "$general.number",
        "interval": "$general.number",
        "hover_height": { "$dynamic.list.index_pair": "$general.number" }
      },
      "minecraft:behavior.random_look_around": {
        "priority": "$general.number",
        "look_time": { "$dynamic.list.index_pair": "$general.number" }
      },
      "minecraft:behavior.random_look_around_and_sit": {
        "priority": "$general.number",
        "min_look_count": "$general.number",
        "max_look_count": "$general.number",
        "min_look_time": "$general.number",
        "max_look_time": "$general.number",
        "probability": "$general.decimal"
      },
      "minecraft:behavior.random_sitting": {
        "priority": "$general.number",
        "start_chance": "$general.decimal",
        "stop_chance": "$general.decimal",
        "cooldown": "$general.number",
        "min_sit_time": "$general.number"
      },
      "minecraft:behavior.random_stroll": {
        "priority": "$general.number",
        "interval": "$general.number",
        "speed_multiplier": "$general.decimal",
        "xz_dist": "$general.number",
        "y_dist": "$general.number"
      },
      "minecraft:behavior.random_swim": {
        "$load": "$entity.behavior.minecraft:behavior&dot;random_stroll",
        "avoid_surface": "$general.boolean"
      },
      "minecraft:behavior.ranged_attack": {
        "priority": "$general.number",
        "attack_interval_max": "$general.number",
        "attack_interval_min": "$general.number",
        "attack_radius": "$general.number",
        "burst_interval": "$general.decimal",
        "burst_shots": "$general.number",
        "charge_charged_trigger": "$general.decimal",
        "charge_shoot_trigger": "$general.decimal",
        "ranged_fov": "$general.degree",
        "speed_multiplier": "$general.decimal",
        "target_in_sight_time": "$general.decimal"
      },
      "minecraft:behavior.receive_love": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:villager') || !Bridge.File.usesEntity('minecraft:villager_v2')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.receive_love\" can only be used by villagers"
            }
          }
        },
        "priority": "$general.number"
      },
      "$versioned_template.minecraft:behavior.ram_attack": [
        {
          "$if": "$format_version >= 1.16.200",
          "$data": {
            "priority": "$general.number",
            "run_speed": "$general.decimal",
            "ram_speed": "$general.decimal",
            "ram_distance": "$general.number",
            "on_start": "$entity.general.event_definition"
          }
        }
      ],
      "minecraft:behavior.restrict_sun": { "priority": "$general.number" },
      "minecraft:behavior.restrict_open_door": {
        "priority": "$general.number"
      },
      "$versioned_template.minecraft:behavior.rise_to_liquid_level": [
        {
          "$if": "$format_version >= 1.16.0",
          "$data": {
            "priority": "$general.number",
            "liquid_y_offset": "$general.decimal",
            "rise_delta": "$general.decimal",
            "sink_delta": "$general.decimal"
          }
        }
      ],
      "minecraft:behavior.roll": {
        "priority": "$general.number",
        "probability": "$general.decimal"
      },
      "minecraft:behavior.run_around_like_crazy": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.scared": {
        "priority": "$general.number",
        "sound_interval": "$general.number"
      },
      "$versioned_template.minecraft:behavior.send_event": [
        {
          "$data": {
            "priority": "$general.number",
            "event_choices": {
              "$dynamic.list.next_index": {
                "min_activation_range": "$general.decimal",
                "max_activation_range": "$general.decimal",
                "cooldown_time": "$general.decimal",
                "cast_duration": "$general.decimal",
                "particle_color": { "@meta": { "is_value": true } },
                "weight": "$general.number",
                "filters": "$entity.filters",
                "start_sound_event": "$general.sound",
                "sequence": {
                  "$dynamic.list.next_index": {
                    "base_delay": "$general.decimal",
                    "event": "$dynamic.cache.entity.events",
                    "sound_event": "$general.sound"
                  }
                }
              }
            }
          }
        },
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "event_choices": {
              "$dynamic.list.next_index": {
                "look_at_target": "$general.boolean"
              }
            }
          }
        }
      ],
      "minecraft:behavior.share_items": {
        "priority": "$general.number",
        "max_dist": "$general.number",
        "goal_radius": "$general.number",
        "speed_multiplier": "$general.decimal",
        "entity_types": "$entity.general.entity_types"
      },
      "minecraft:behavior.skeleton_horse_trap": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:horse') || !Bridge.File.usesEntity('minecraft:donkey') || !Bridge.File.usesEntity('minecraft:mule') || !Bridge.File.usesEntity('minecraft:skeleton_horse')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.skeleton_horse_trap\" can only be used by horse like entites"
            }
          }
        },
        "priority": "$general.number",
        "within_radius": "$general.number",
        "duration": "$general.number"
      },
      "minecraft:behavior.silverfish_wake_up_friends": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:silverfish')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.silverfish_wake_up_friends\" can only be used by silverfish"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.silverfish_merge_with_stone": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:silverfish')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.silverfish_merge_with_stone\" can only be used by silverfish"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.sleep": {
        "priority": "$general.number",
        "goal_radius": "$general.number",
        "speed_multiplier": "$general.decimal",
        "sleep_collider_height": "$general.decimal",
        "sleep_collider_width": "$general.decimal",
        "sleep_y_offset": "$general.decimal"
      },
      "minecraft:behavior.slime_float": {
        "priority": "$general.number",
        "jump_chance_percentage": "$general.decimal",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.slime_attack": {
        "priority": "$general.number",
        "set_persistent": "$general.boolean"
      },
      "minecraft:behavior.slime_random_direction": {
        "priority": "$general.number",
        "add_random_time_range": "$general.number",
        "turn_range": "$general.degree",
        "min_change_direction_time": "$general.number"
      },
      "minecraft:behavior.slime_keep_on_jumping": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal"
      },
      "minecraft:behavior.snacking": {
        "priority": "$general.number",
        "snacking_cooldown": "$general.number",
        "snacking_cooldown_min": "$general.number",
        "snacking_stop_chance": "$general.decimal",
        "items": { "$dynamic.list.next_index": "$general.item_identifier" }
      },
      "minecraft:behavior.sneeze": {
        "priority": "$general.number",
        "probability": "$general.decimal",
        "cooldown_time": "$general.number",
        "within_radius": "$general.number",
        "entity_types": "$entity.general.entity_types",
        "drop_item_chance": "$general.decimal",
        "loot_table": "$dynamic.loot_table_files",
        "prepare_sound": "$general.sound",
        "prepare_time": "$general.number",
        "sound": "$general.sound"
      },
      "minecraft:behavior.squid_move_away_from_ground": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:squid')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.squid_move_away_from_ground\" can only be used by squids"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.squid_flee": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:squid')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.squid_flee\" can only be used by squids"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.squid_idle": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:squid')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.squid_idle\" can only be used by squids"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.squid_dive": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:squid')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.squid_dive\" can only be used by squids"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.squid_out_of_water": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:squid')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.squid_out_of_water\" can only be used by squids"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.stalk_and_pounce_on_target": {
        "priority": "$general.number",
        "set_persistent": "$general.boolean",
        "stalk_speed": "$general.decimal",
        "max_stalk_dist": "$general.number",
        "leap_height": "$general.decimal",
        "leap_dist": "$general.decimal",
        "pounce_max_dist": "$general.number",
        "interest_time": "$general.number",
        "stuck_time": "$general.number",
        "strike_dist": "$general.decimal",
        "stuck_blocks": "$entity.filters"
      },
      "minecraft:behavior.stay_while_sitting": {
        "priority": "$general.number"
      },
      "minecraft:behavior.stomp_attack": {
        "priority": "$general.number",
        "attack_once": "$general.boolean",
        "attack_types": { "@meta": { "is_value": true } },
        "random_stop_interval": "$general.number",
        "reach_multiplier": "$general.decimal",
        "track_target": "$general.boolean",
        "speed_multiplier": "$general.decimal",
        "require_complete_path": "$general.boolean",
        "stomp_range_multiplier": "$general.decimal",
        "no_damage_range_multiplier": "$general.decimal"
      },
      "minecraft:behavior.stomp_turtle_egg": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "search_range": "$general.number",
        "search_height": "$general.number",
        "goal_radius": "$general.decimal",
        "interval": "$general.number"
      },
      "minecraft:behavior.summon_entity": {
        "priority": "$general.number",
        "summon_choices": {
          "$dynamic.list.next_index": {
            "do_casting": "$general.boolean",
            "filters": "$entity.filters",
            "min_activation_range": "$general.decimal",
            "max_activation_range": "$general.decimal",
            "cooldown_time": "$general.decimal",
            "weight": "$general.number",
            "cast_duration": "$general.decimal",
            "particle_color": { "@meta": { "is_value": true } },
            "start_sound_event": "$general.sound",
            "sequence": {
              "$dynamic.list.next_index": {
                "shape": ["circle", "line"],
                "target": "$entity.general.filter_targets",
                "base_delay": "$general.decimal",
                "delay_per_summon": "$general.decimal",
                "num_entities_spawned": "$general.number",
                "entity_type": "$general.entity_identifier",
                "size": "$general.decimal",
                "entity_lifespan": "$general.decimal",
                "sound_event": "$general.sound",
                "summon_cap": "$general.number",
                "summon_cap_radius": "$general.number"
              }
            }
          }
        }
      },
      "minecraft:behavior.swell": {
        "priority": "$general.number",
        "start_distance": "$general.number",
        "stop_distance": "$general.number"
      },
      "minecraft:behavior.swim_idle": {
        "priority": "$general.number",
        "idle_time": "$general.number",
        "success_rate": "$general.decimal"
      },
      "minecraft:behavior.swim_wander": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "interval": "$general.number",
        "look_ahead": "$general.decimal",
        "wander_time": "$general.number"
      },
      "minecraft:behavior.swim_with_entity": {
        "priority": "$general.number",
        "success_rate": "$general.decimal",
        "chance_to_stop": "$general.decimal",
        "state_check_interval": "$general.decimal",
        "catch_up_threshold": "$general.number",
        "match_direction_threshold": "$general.number",
        "catch_up_multiplier": "$general.decimal",
        "speed_multiplier": "$general.decimal",
        "search_range": "$general.number",
        "stop_distance": "$general.number",
        "entity_types": {
          "$dynamic.list.next_index": {
            "filters": "$entity.general.entity_types"
          }
        }
      },
      "minecraft:behavior.swoop_attack": {
        "priority": "$general.number",
        "damage_reach": "$general.decimal",
        "speed_multiplier": "$general.decimal",
        "delay_range": { "$dynamic.list.index_pair": "$general.number" }
      },
      "minecraft:behavior.take_flower": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:villager') || !Bridge.File.usesEntity('minecraft:villager_v2')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.take_flower\" can only be used by villagers"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.tempt": {
        "priority": "$general.number",
        "can_get_scared": "$general.boolean",
        "can_tempt_vertically": "$general.boolean",
        "items": { "$dynamic.list.next_index": "$general.item_identifier" },
        "speed_multiplier": "$general.decimal",
        "within_radius": "$general.number",
        "tempt_sound": "$general.sound",
        "sound_interval": {
          "range_min": "$general.number",
          "range_max": "$general.number"
        }
      },
      "minecraft:behavior.trade_interest": {
        "priority": "$general.number",
        "within_radius": "$general.number",
        "interest_time": "$general.number",
        "remove_item_time": "$general.number",
        "carried_item_switch_time": "$general.number",
        "cooldown": "$general.number"
      },
      "minecraft:behavior.trade_with_player": { "priority": "$general.number" },
      "minecraft:behavior.vex_copy_owner_target": {
        "priority": "$general.number",
        "entity_types": "$entity.general.entity_types"
      },
      "minecraft:behavior.vex_random_move": { "priority": "$general.number" },
      "minecraft:behavior.wither_random_attack_pos_goal": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:wither')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:behavior.wither_random_attack_pos_goal\" can only be used by the wither"
            }
          }
        },
        "priority": "$general.number"
      },
      "minecraft:behavior.wither_target_highest_damage": {
        "priority": "$general.number",
        "entity_types": "$entity.general.entity_types"
      },
      "minecraft:behavior.work": {
        "priority": "$general.number",
        "speed_multiplier": "$general.decimal",
        "goal_cooldown": "$general.number",
        "sound_delay_min": "$general.number",
        "sound_delay_max": "$general.number",
        "active_time": "$general.number",
        "can_work_in_rain": "$general.boolean",
        "work_in_rain_tolerance": "$general.number",
        "on_arrival": "$entity.general.event_definition"
      }
    },
    "components": {
      "@meta": {
        "expand_path_exceptions": [
          "minecraft:burns_in_daylight",
          "minecraft:can_climb",
          "minecraft:can_power_jump",
          "minecraft:hide",
          "minecraft:home",
          "minecraft:is_baby",
          "minecraft:is_charged",
          "minecraft:is_chested",
          "minecraft:is_hidden_when_invisible",
          "minecraft:is_ignited",
          "minecraft:is_illager_captain",
          "minecraft:is_saddled",
          "minecraft:is_shaking",
          "minecraft:is_sheared",
          "minecraft:is_stackable",
          "minecraft:is_stunned",
          "minecraft:is_tamed",
          "minecraft:item_hopper",
          "minecraft:jump.dynamic",
          "minecraft:managed_wandering_trader",
          "minecraft:persistent",
          "minecraft:scaffolding_climber",
          "minecraft:trade_resupply",
          "minecraft:trust",
          "minecraft:wants_jockey",
          "minecraft:equip_item",
          "minecraft:out_of_control"
        ]
      },
      "minecraft:addrider": {
        "entity_type": "$general.entity_identifier",
        "spawn_event": "$dynamic.cache.entity.events"
      },
      "minecraft:admire_item": {
        "duration": "$general.number",
        "cooldown_after_being_attacked": "$general.number"
      },
      "$versioned_template.minecraft:ageable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "duration": "$general.number",
            "feed_items": {
              "$dynamic.list.next_index": {
                "item": {
                  "@import.value": "$general.item_identifier",
                  "any_tag": {
                    "$dynamic.list.next_index": {
                      "@meta": { "is_value": true }
                    }
                  }
                },
                "growth": "$general.decimal"
              }
            },
            "drop_items": {
              "$dynamic.list.next_index": "$general.item_identifier"
            },
            "grow_up": "$entity.general.event_definition"
          }
        },
        {
          "$if": "$format_version < 1.16.100",
          "$data": {
            "duration": "$general.number",
            "feed_items": {
              "$dynamic.list.next_index": {
                "item": "$general.item_identifier",
                "growth": "$general.decimal"
              }
            },
            "drop_items": {
              "$dynamic.list.next_index": "$general.item_identifier"
            },
            "grow_up": "$entity.general.event_definition"
          }
        }
      ],
      "minecraft:ambient_sound_interval": {
        "range": "$general.number",
        "value": "$general.number",
        "event_name": "$general.sound"
      },
      "minecraft:angry": {
        "broadcast_anger": "$general.boolean",
        "broadcast_anger_on_attack": "$general.boolean",
        "broadcast_anger_on_being_attacked": "$general.boolean",
        "broadcast_range": "$general.number",
        "broadcast_filters": "$entity.filters",
        "filters": "$entity.filters",
        "broadcast_targets": {
          "$dynamic.list.next_index": { "@meta": { "is_value": true } }
        },
        "calm_event": "$entity.general.event_definition",
        "duration": "$general.number",
        "duration_delta": "$general.number",
        "angry_sound": "$general.sound",
        "sound_interval": {
          "range_min": "$general.number",
          "range_max": "$general.number"
        }
      },
      "minecraft:area_attack": {
        "damage_range": "$general.number",
        "damage_per_tick": "$general.number",
        "cause": "$general.damage_type",
        "entity_filter": "$entity.filters"
      },
      "minecraft:attack": {
        "damage": "$general.number",
        "effect_name": "$general.effect_name",
        "effect_duration": "$general.number"
      },
      "minecraft:attack_cooldown": {
        "attack_cooldown_time": {
          "$dynamic.list.index_pair": "$general.number",
          "@import.value": "$general.number"
        },
        "attack_cooldown_complete_event": "$entity.general.event_definition"
      },
      "minecraft:attack_damage": { "value": "$general.number" },
      "minecraft:balloonable": { "mass": "$general.decimal" },
      "minecraft:barter": {
        "barter_table": "$dynamic.loot_table_files",
        "cooldown_after_being_attacked": "$general.number"
      },
      "minecraft:block_sensor": {
        "sensor_radius": "$general.number",
        "on_break": {
          "$dynamic.list.next_index": {
            "block_list": {
              "$dynamic.list.next_index": "$general.block_identifier"
            },
            "on_block_broken": "$entity.general.event_string"
          }
        }
      },
      "minecraft:boostable": {
        "speed_multiplier": "$general.decimal",
        "duration": "$general.number",
        "boost_items": {
          "$dynamic.list.next_index": {
            "item": "$general.item_identifier",
            "item_damage": "$general.number",
            "replace_item": "$general.item_identifier"
          }
        }
      },
      "minecraft:boss": {
        "should_darken_sky": "$general.boolean",
        "hud_range": "$general.number",
        "name": { "@meta": { "is_value": true } }
      },
      "minecraft:break_blocks": {
        "breakable_blocks": {
          "$dynamic.list.next_index": "$general.block_identifier"
        }
      },
      "minecraft:breathable": {
        "breathe_blocks": {
          "$dynamic.list.next_index": "$general.block_identifier"
        },
        "breathes_water": "$general.boolean",
        "breathes_lava": "$general.boolean",
        "breathes_air": "$general.boolean",
        "breathes_solids": "$general.boolean",
        "generates_bubbles": "$general.boolean",
        "inhale_time": "$general.decimal",
        "suffocate_time": "$general.number",
        "total_supply": "$general.number",
        "non_breathe_blocks": {
          "$dynamic.list.next_index": "$general.block_identifier"
        }
      },
      "$versioned_template.minecraft:buoyant": [
        {
          "$if": "$format_version >= 1.16.0",
          "$data": {
            "apply_gravity": "$general.boolean",
            "base_buoyancy": "$general.decimal",
            "big_wave_probability": "$general.decimal",
            "big_wave_speed": "$general.number",
            "drag_down_on_buoyancy_removed": "$general.decimal",
            "liquid_blocks": {
              "$dynamic.list.next_index": "$general.block_identifier"
            },
            "simulate_waves": "$general.boolean"
          }
        }
      ],
      "$versioned_template.minecraft:breedable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "allow_sitting": "$general.boolean",
            "blend_attributes": "$general.boolean",
            "breed_cooldown": "$general.number",
            "love_filters": "$entity.filters",
            "breed_items": {
              "$dynamic.list.next_index": {
                "@import.value": "$general.item_identifier",
                "any_tag": {
                  "$dynamic.list.next_index": { "@meta": { "is_value": true } }
                }
              }
            },
            "breeds_with": {
              "mate_type": "$general.entity_identifier",
              "baby_type": "$general.entity_identifier",
              "breed_event": "$entity.general.event_definition"
            },
            "causes_pregnancy": "$general.boolean",
            "environment_requirements": {
              "$dynamic.list.next_index": {
                "blocks": {
                  "$dynamic.list.next_index": "$general.block_identifier"
                },
                "count": "$general.number",
                "radius": "$general.number"
              }
            },
            "extra_baby_chance": "$general.decimal",
            "inherit_tamed": "$general.boolean",
            "mutation_factor": {
              "color": "$general.decimal",
              "extra_variant": "$general.decimal",
              "variant": "$general.decimal"
            },
            "deny_parents_variant": {
              "chance": "$general.decimal",
              "min_variant": "$general.number",
              "max_variant": "$general.number"
            },
            "require_tame": "$general.boolean",
            "require_full_health": "$general.boolean"
          }
        },
        {
          "$if": "$format_version < 1.16.100",
          "$data": {
            "allow_sitting": "$general.boolean",
            "blend_attributes": "$general.boolean",
            "breed_cooldown": "$general.number",
            "love_filters": "$entity.filters",
            "breed_items": {
              "$dynamic.list.next_index": "$general.item_identifier"
            },
            "breeds_with": {
              "mate_type": "$general.entity_identifier",
              "baby_type": "$general.entity_identifier",
              "breed_event": "$entity.general.event_definition"
            },
            "causes_pregnancy": "$general.boolean",
            "environment_requirements": {
              "$dynamic.list.next_index": {
                "blocks": {
                  "$dynamic.list.next_index": "$general.block_identifier"
                },
                "count": "$general.number",
                "radius": "$general.number"
              }
            },
            "extra_baby_chance": "$general.decimal",
            "inherit_tamed": "$general.boolean",
            "mutation_factor": {
              "color": "$general.decimal",
              "extra_variant": "$general.decimal",
              "variant": "$general.decimal"
            },
            "deny_parents_variant": {
              "chance": "$general.decimal",
              "min_variant": "$general.number",
              "max_variant": "$general.number"
            },
            "require_tame": "$general.boolean",
            "require_full_health": "$general.boolean"
          }
        },
        {
          "$if": "$format_version >= 1.16.220",
          "$data": { "transform_to_item": "$general.item_identifier" }
        }
      ],
      "$versioned_template.minecraft:bribeable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "bribe_cooldown": "$general.number",
            "bribe_items": {
              "$dynamic.list.next_index": {
                "@import.value": "$general.item_identifier",
                "any_tag": {
                  "$dynamic.list.next_index": { "@meta": { "is_value": true } }
                }
              }
            }
          }
        },
        {
          "$if": "$format_version < 1.16.100",
          "$data": {
            "bribe_cooldown": "$general.number",
            "bribe_items": {
              "$dynamic.list.next_index": "$general.item_identifier"
            }
          }
        }
      ],
      "minecraft:burns_in_daylight": {},
      "minecraft:can_climb": {},
      "$versioned_template.minecraft:can_fly": [
        { "$if": "$format_version >= 1.16.0", "$data": "$general.boolean" },
        {
          "$if": "$format_version < 1.16.0",
          "$data": { "value": "$general.boolean" }
        }
      ],
      "minecraft:can_fly": "$general.boolean",
      "minecraft:can_power_jump": {},
      "minecraft:celebrate_hunt": {
        "celebration_targets": "$entity.filters",
        "broadcast": "$general.boolean",
        "duration": "$general.number",
        "radius": "$general.number",
        "celebrate_sound": "$general.sound",
        "sound_interval": {
          "range_min": "$general.number",
          "range_max": "$general.number"
        }
      },
      "$versioned_template.minecraft:inside_block_notifier": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "block_list": {
              "$dynamic.list.next_index": {
                "block": {
                  "name": "$general.block_identifier",
                  "states": "$_general.block_states"
                },
                "entered_block_event": "$entity.general.event_definition",
                "exited_block_event": "$entity.general.event_definition"
              }
            }
          }
        }
      ],
      "minecraft:collision_box": {
        "width": "$general.number",
        "height": "$general.number"
      },
      "$versioned_template.minecraft:conditional_bandwidth_optimization": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "conditional_values": {
              "$dynamic.list.next_index": {
                "max_dropped_ticks": "$general.number",
                "max_optimized_distance": "$general.number",
                "use_motion_prediction_hints": "$general.boolean",
                "conditional_values": {
                  "$dynamic.list.next_index": "$entity.filters"
                }
              }
            },
            "default_values": {
              "max_dropped_ticks": "$general.number",
              "max_optimized_distance": "$general.number",
              "use_motion_prediction_hints": "$general.boolean"
            }
          }
        }
      ],
      "minecraft:color": { "value": "$general.number" },
      "minecraft:color2": { "value": "$general.number" },
      "$versioned_template.minecraft:combat_regeneration": [
        {
          "$if": "$format_version >= 1.16.220",
          "$data": { "regeneration_duration": "$general.number" }
        }
      ],
      "minecraft:custom_hit_test": {
        "hitboxes": {
          "$dynamic.list.next_index": {
            "width": "$general.number",
            "height": "$general.number",
            "pivot": { "$dynamic.list.index_triple": "$general.number" }
          }
        }
      },
      "minecraft:damage_over_time": {
        "damage_per_hurt": "$general.number",
        "time_between_hurt": "$general.number"
      },
      "$versioned_template.minecraft:damage_sensor": [
        {
          "$if": "$format_version >= 1.16.200",
          "$data": {
            "triggers": {
              "$dynamic.list.next_index": {
                "damage_modifier": "$general.decimal"
              }
            }
          }
        },
        {
          "$data": {
            "triggers": {
              "$dynamic.list.next_index": {
                "on_damage": "$entity.general.event_definition",
                "cause": "$general.damage_type",
                "deals_damage": "$general.boolean",
                "damage_multiplier": "$general.decimal",
                "on_damage_sound_event": "$general.sound"
              }
            }
          }
        }
      ],
      "minecraft:default_look_angle": { "value": "$general.decimal" },
      "minecraft:despawn": {
        "remove_child_entities": "$general.boolean",
        "filters": "$entity.filters",
        "despawn_from_distance": {
          "max_distance": "$general.number",
          "min_distance": "$general.number"
        },
        "despawn_from_chance": "$general.boolean",
        "despawn_from_inactivity": "$general.boolean",
        "despawn_from_simulation_edge": "$general.boolean",
        "min_range_inactivity_timer": "$general.number",
        "min_range_random_chance": "$general.number"
      },
      "$versioned_template.minecraft:drying_out_timer": [
        {
          "$if": "$format_version >= 1.17.0",
          "$data": {
            "dried_out_event": "$entity.general.event_definition",
            "recover_after_dried_out_event": "$entity.general.event_definition",
            "stopped_drying_out_event": "$entity.general.event_definition",
            "total_time": "$general.number",
            "water_bottle_refill_time": "$general.number"
          }
        }
      ],
      "minecraft:dweller": {
        "dwelling_type": ["village"],
        "dweller_role": ["hostile", "inhabitant", "defender"],
        "update_interval_base": "$general.number",
        "update_interval_variant": "$general.number",
        "can_find_poi": "$general.boolean",
        "can_migrate": "$general.boolean",
        "first_founding_reward": "$general.number",
        "preferred_profession": ["weaponsmith"]
      },
      "minecraft:economy_trade_table": {
        "@meta": {
          "validate": {
            "confirm": "Bridge.Node.parent.key === 'components'",
            "then": {
              "show": true,
              "message": "\"minecraft:economy_trade_table\" must be placed inside of a component group"
            }
          }
        },
        "display_name": "$general.translatable_text",
        "table": "$dynamic.trade_table_files",
        "new_screen": "$general.boolean",
        "hero_demand_discount": "$general.number",
        "persist_trades": "$general.boolean",
        "convert_trades_economy": "$general.boolean",
        "cured_discount": { "$dynamic.list.index_pair": "$general.number" },
        "max_cured_discount": { "$dynamic.list.index_pair": "$general.number" },
        "nearby_cured_discount": "$general.number",
        "show_trade_screen": "$general.boolean"
      },
      "minecraft:environment_sensor": {
        "triggers": "$entity.general.event_definition"
      },
      "minecraft:entity_sensor": {
        "sensor_range": "$general.number",
        "minimum_count": "$general.number",
        "maximum_count": "$general.number",
        "relative_range": "$general.boolean",
        "require_all": "$general.boolean",
        "event_filters": "$entity.filters",
        "event": "$entity.general.event_string"
      },
      "minecraft:equipment": {
        "table": "$dynamic.loot_table_files",
        "slot_drop_chance": {
          "$dynamic.list.next_index": {
            "slot": "$general.slot_type",
            "drop_chance": "$general.decimal"
          }
        }
      },
      "$versioned_template.minecraft:equip_item": [
        { "$if": "$format_version >= 1.16.0", "$data": {} }
      ],
      "$versioned_template.minecraft:equippable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "slots": {
              "$dynamic.list.next_index": {
                "accepted_items": {
                  "$dynamic.list.next_index": {
                    "@import.value": "$general.item_identifier",
                    "any_tag": {
                      "$dynamic.list.next_index": {
                        "@meta": { "is_value": true }
                      }
                    }
                  }
                },
                "interact_text": "$general.translatable_text",
                "item": "$general.item_identifier",
                "on_equip": "$entity.general.event_definition",
                "on_unequip": "$entity.general.event_definition",
                "slot": "$general.number"
              }
            }
          }
        },
        {
          "$if": "$format_version < 1.16.100",
          "$data": {
            "slots": {
              "$dynamic.list.next_index": {
                "accepted_items": {
                  "$dynamic.list.next_index": "$general.item_identifier"
                },
                "interact_text": "$general.translatable_text",
                "item": "$general.item_identifier",
                "on_equip": "$entity.general.event_definition",
                "on_unequip": "$entity.general.event_definition",
                "slot": "$general.number"
              }
            }
          }
        }
      ],
      "minecraft:experience_reward": {
        "on_bred": "$molang.embedded",
        "on_death": "$molang.embedded"
      },
      "minecraft:explode": {
        "fuse_length": {
          "$dynamic.list.index_pair": "$general.decimal",
          "@import.value.decimal": "$general.decimal"
        },
        "power": "$general.number",
        "max_resistance": "$general.decimal",
        "fuse_lit": "$general.boolean",
        "causes_fire": "$general.boolean",
        "breaks_blocks": "$general.boolean",
        "fire_affected_by_griefing": "$general.boolean",
        "destroy_affected_by_griefing": "$general.boolean",
        "allow_damage_underwater": "$general.boolean"
      },
      "minecraft:fire_immune": "$general.boolean",
      "minecraft:floats_in_liquid": {},
      "minecraft:flocking": {
        "in_water": "$general.boolean",
        "match_variants": "$general.boolean",
        "use_center_of_mass": "$general.boolean",
        "low_flock_limit": "$general.number",
        "high_flock_limit": "$general.number",
        "goal_weight": "$general.decimal",
        "loner_chance": "$general.decimal",
        "influence_radius": "$general.number",
        "breach_influence": "$general.number",
        "separation_weight": "$general.number",
        "separation_threshold": "$general.number",
        "cohesion_weight": "$general.decimal",
        "cohesion_threshold": "$general.number",
        "innner_cohesion_threshold": "$general.number",
        "min_height": "$general.number",
        "max_height": "$general.number",
        "block_distance": "$general.number",
        "block_weight": "$general.decimal"
      },
      "minecraft:flying_speed": { "value": "$general.decimal" },
      "minecraft:follow_range": {
        "value": "$general.number",
        "max": "$general.number"
      },
      "minecraft:foot_size": { "value": "$general.decimal" },
      "minecraft:friction_modifier": { "value": "$general.decimal" },
      "minecraft:genetics": {
        "mutation_rate": "$general.decimal",
        "genes": {
          "$dynamic.list.next_index": {
            "name": { "@meta": { "is_value": true } },
            "allele_range": "$general.number",
            "genetic_variants": {
              "$dynamic.list.next_index": {
                "main_allele": "$general.number",
                "both_allele": "$general.number",
                "hidden_allele": "$general.number",
                "either_allele": "$general.number",
                "birth_event": "$entity.general.event_definition"
              }
            }
          }
        }
      },
      "$versioned_template.minecraft:giveable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "triggers": {
              "$dynamic.list.next_index": {
                "cooldown": "$general.number",
                "items": {
                  "$dynamic.list.next_index": {
                    "@import.value": "$general.item_identifier",
                    "any_tag": {
                      "$dynamic.list.next_index": {
                        "@meta": { "is_value": true }
                      }
                    }
                  }
                },
                "on_give": "$entity.general.event_definition"
              }
            }
          }
        },
        {
          "$if": "$format_version < 1.16.100",
          "$data": {
            "triggers": {
              "$dynamic.list.next_index": {
                "cooldown": "$general.number",
                "items": {
                  "$dynamic.list.next_index": "$general.item_identifier"
                },
                "on_give": "$entity.general.event_definition"
              }
            }
          }
        }
      ],
      "minecraft:ground_offset": { "value": "$general.decimal" },
      "minecraft:group_size": {
        "radius": "$general.number",
        "filters": "$entity.filters"
      },
      "minecraft:grows_crop": {
        "charges": "$general.number",
        "chance": "$general.decimal"
      },
      "$versioned_template.minecraft:healable": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "force_use": "$general.boolean",
            "filters": "$entity.filters",
            "items": {
              "$dynamic.list.next_index": {
                "item": {
                  "@import.value": "$general.item_identifier",
                  "any_tag": {
                    "$dynamic.list.next_index": {
                      "@meta": { "is_value": true }
                    }
                  }
                },
                "heal_amount": "$general.number",
                "filters": "$entity.filters",
                "effects": {
                  "$dynamic.list.next_index": {
                    "name": "$general.effect_name",
                    "chance": "$general.decimal",
                    "duration": "$general.number",
                    "amplifier": "$general.number"
                  }
                }
              }
            }
          }
        },
        {
          "$if": "$format_version < 1.16.100",
          "$data": {
            "force_use": "$general.boolean",
            "filters": "$entity.filters",
            "items": {
              "$dynamic.list.next_index": {
                "item": "$general.item_identifier",
                "heal_amount": "$general.number",
                "filters": "$entity.filters",
                "effects": {
                  "$dynamic.list.next_index": {
                    "name": "$general.effect_name",
                    "chance": "$general.decimal",
                    "duration": "$general.number",
                    "amplifier": "$general.number"
                  }
                }
              }
            }
          }
        }
      ],
      "minecraft:health": {
        "value": "$general.number",
        "max": "$general.number",
        "min": "$general.number"
      },
      "minecraft:hide": {},
      "$versioned_template.minecraft:home": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "restriction_radius": "$general.number" }
        },
        { "$data": {} }
      ],
      "minecraft:horse.jump_strength": { "value": "$general.decimal" },
      "minecraft:hurt_on_condition": {
        "damage_conditions": {
          "$dynamic.list.next_index": {
            "filters": "$entity.filters",
            "cause": "$general.damage_type",
            "damage_per_tick": "$general.number"
          }
        }
      },
      "minecraft:input_ground_controlled": {},
      "minecraft:insomnia": { "days_until_insomnia": "$general.number" },
      "minecraft:instant_despawn": {
        "remove_child_entities": "$general.boolean"
      },
      "minecraft:interact": {
        "interactions": {
          "$dynamic.list.next_index": {
            "add_items": { "table": "$dynamic.loot_table_files" },
            "cooldown": "$general.number",
            "hurt_item": "$general.number",
            "interact_text": "$general.translatable_text",
            "on_interact": "$entity.general.event_definition",
            "particle_on_start": "$entity.general.particle_definition",
            "play_sounds": "$general.sound",
            "spawn_entities": {
              "$dynamic.list.next_index": "$general.entity_identifier"
            },
            "spawn_items": { "table": "$dynamic.loot_table_files" },
            "swing": "$general.boolean",
            "transform_to_item": "$general.item_identifier",
            "barter": "$general.boolean",
            "admire": "$general.boolean",
            "use_item": "$general.boolean"
          }
        }
      },
      "minecraft:inventory": {
        "additional_slots_per_strength": "$general.number",
        "can_be_siphoned_from": "$general.boolean",
        "container_type": "$general.inventory_type",
        "inventory_size": "$general.number",
        "private": "$general.boolean",
        "restrict_to_owner": "$general.boolean"
      },
      "minecraft:is_baby": {},
      "minecraft:is_charged": {},
      "minecraft:is_chested": {},
      "minecraft:is_dyeable": { "interact_text": "$general.translatable_text" },
      "minecraft:is_hidden_when_invisible": {},
      "minecraft:is_ignited": {},
      "minecraft:is_illager_captain": {},
      "minecraft:is_saddled": {},
      "minecraft:is_shaking": {},
      "minecraft:is_sheared": {},
      "minecraft:is_stackable": {},
      "minecraft:is_stunned": {},
      "minecraft:is_tamed": {},
      "minecraft:item_controllable": {
        "control_items": {
          "$dynamic.list.next_index": "$general.item_identifier"
        }
      },
      "minecraft:item_hopper": {},
      "minecraft:jump.dynamic": {},
      "minecraft:jump.static": { "jump_power": "$general.decimal" },
      "minecraft:knockback_resistance": {
        "value": "$general.decimal",
        "max": "$general.decimal"
      },
      "minecraft:lava_movement": { "value": "$general.decimal" },
      "minecraft:leashable": {
        "soft_distance": "$general.decimal",
        "hard_distance": "$general.decimal",
        "max_distance": "$general.decimal",
        "on_leash": "$entity.general.event_definition",
        "on_unleash": "$entity.general.event_definition",
        "can_be_stolen": "$general.boolean"
      },
      "minecraft:lookat": {
        "search_radius": "$general.number",
        "set_target": "$general.boolean",
        "look_cooldown": "$general.number",
        "filters": "$entity.filters",
        "look_event": "$entity.general.event_definition",
        "allow_invulnerable": "$general.boolean"
      },
      "minecraft:loot": { "table": "$dynamic.loot_table_files" },
      "minecraft:managed_wandering_trader": {},
      "minecraft:mark_variant": { "value": "$general.number" },
      "minecraft:mob_effect": {
        "effect_range": "$general.number",
        "mob_effect": "$general.effect_name",
        "effect_time": "$general.number",
        "entity_filter": "$entity.filters"
      },
      "minecraft:movement": { "value": "$general.decimal" },
      "minecraft:movement.amphibious": { "max_turn": "$general.degree" },
      "minecraft:movement.basic": "$entity.components.minecraft:movement&dot;amphibious",
      "minecraft:movement.fly": "$entity.components.minecraft:movement&dot;amphibious",
      "minecraft:movement.generic": "$entity.components.minecraft:movement&dot;amphibious",
      "minecraft:movement.hover": "$entity.components.minecraft:movement&dot;amphibious",
      "minecraft:movement.jump": {
        "$load": "$entity.components.minecraft:movement&dot;amphibious",
        "jump_delay": { "$dynamic.list.index_pair": "$general.decimal" }
      },
      "minecraft:movement.glide": {
        "$load": "$entity.components.minecraft:movement&dot;amphibious",
        "start_speed": "$general.number",
        "speed_when_turning": "$general.number"
      },
      "minecraft:skin_id": { "value": "$general.number" },
      "minecraft:movement.skip": "$entity.components.minecraft:movement&dot;amphibious",
      "minecraft:movement.sway": {
        "$load": "$entity.components.minecraft:movement&dot;amphibious",
        "sway_amplitude": "$general.number"
      },
      "minecraft:nameable": {
        "allow_name_tag_renaming": "$general.boolean",
        "always_show": "$general.boolean",
        "default_trigger": "$entity.general.event_definition",
        "name_actions": {
          "$dynamic.list.next_index": {
            "name_filter": { "@meta": { "is_value": true } },
            "on_named": "$entity.general.event_definition"
          }
        }
      },
      "minecraft:navigation.climb": {
        "is_amphibious": "$general.boolean",
        "avoid_portals": "$general.boolean",
        "avoid_powder_snow": "$general.boolean",
        "avoid_sun": "$general.boolean",
        "avoid_water": "$general.boolean",
        "avoid_damage_blocks": "$general.boolean",
        "can_break_doors": "$general.boolean",
        "can_open_doors": "$general.boolean",
        "can_pass_doors": "$general.boolean",
        "can_path_over_water": "$general.boolean",
        "can_path_over_lava": "$general.boolean",
        "can_path_from_air": "$general.boolean",
        "can_sink": "$general.boolean",
        "can_walk_in_lava": "$general.boolean"
      },
      "minecraft:navigation.float": "$entity.components.minecraft:navigation&dot;climb",
      "minecraft:navigation.fly": "$entity.components.minecraft:navigation&dot;climb",
      "minecraft:navigation.generic": "$entity.components.minecraft:navigation&dot;climb",
      "minecraft:navigation.hover": "$entity.components.minecraft:navigation&dot;climb",
      "minecraft:navigation.swim": "$entity.components.minecraft:navigation&dot;climb",
      "minecraft:navigation.walk": "$entity.components.minecraft:navigation&dot;climb",
      "$versioned_template.minecraft:npc": [
        {
          "$if": "$format_version >= 1.16.0",
          "$data": {
            "npc_data": {
              "portrait_offsets": {
                "translate": {
                  "$dynamic.list.index_triple": "$general.number"
                },
                "scale": { "$dynamic.list.index_triple": "$general.number" }
              },
              "picker_offsets": {
                "translate": {
                  "$dynamic.list.index_triple": "$general.number"
                },
                "scale": { "$dynamic.list.index_triple": "$general.number" }
              },
              "skin_list": {
                "$dynamic.list.next_index": { "variant": "$general.number" }
              }
            }
          }
        }
      ],
      "$versioned_template.minecraft:on_death": [
        {
          "$if": "$format_version < 1.16.100",
          "$data": {
            "@meta": {
              "validate": {
                "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
                "then": {
                  "show": true,
                  "is_warning": true,
                  "message": "\"minecraft:on_death\" can only be used by the ender dragon"
                }
              }
            },
            "$load": "$entity.general.event_definition"
          }
        },
        {
          "$if": "$format_version >= 1.16.100",
          "$data": { "$load": "$entity.general.event_definition" }
        }
      ],
      "minecraft:on_friendly_anger": "$entity.general.event_definition",
      "minecraft:on_hurt": "$entity.general.event_definition",
      "minecraft:on_hurt_by_player": "$entity.general.event_definition",
      "minecraft:on_ignite": "$entity.general.event_definition",
      "$versioned_template.minecraft:out_of_control": [
        { "$if": "$format_version >= 1.16.100", "$data": {} }
      ],
      "minecraft:on_start_landing": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:on_start_landing\" can only be used by the ender dragon"
            }
          }
        },
        "$load": "$entity.general.event_definition"
      },
      "minecraft:on_start_takeoff": {
        "@meta": {
          "validate": {
            "confirm": "!Bridge.File.usesEntity('minecraft:ender_dragon')",
            "then": {
              "show": true,
              "is_warning": true,
              "message": "\"minecraft:on_start_takeoff\" can only be used by the ender dragon"
            }
          }
        },
        "$load": "$entity.general.event_definition"
      },
      "minecraft:on_target_acquired": "$entity.general.event_definition",
      "minecraft:on_target_escape": "$entity.general.event_definition",
      "minecraft:on_wake_with_owner": "$entity.general.event_definition",
      "minecraft:peek": {
        "on_open": "$entity.general.event_definition",
        "on_close": "$entity.general.event_definition",
        "on_target_open": "$entity.general.event_definition"
      },
      "minecraft:persistent": {},
      "minecraft:physics": {
        "has_collision": "$general.boolean",
        "has_gravity": "$general.boolean"
      },
      "minecraft:player.saturation": {
        "value": "$general.number",
        "max": "$general.number",
        "min": "$general.number"
      },
      "minecraft:player.exhaustion": {
        "value": "$general.number",
        "max": "$general.number",
        "min": "$general.number"
      },
      "minecraft:player.level": {
        "value": "$general.number",
        "max": "$general.number",
        "min": "$general.number"
      },
      "minecraft:player.experience": {
        "value": "$general.decimal",
        "max": "$general.decimal",
        "min": "$general.decimal"
      },
      "minecraft:pushable": {
        "is_pushable": "$general.boolean",
        "is_pushable_by_piston": "$general.boolean"
      },
      "minecraft:push_through": { "value": "$general.decimal" },
      "minecraft:preferred_path": {
        "max_fall_blocks": "$general.number",
        "jump_cost": "$general.number",
        "default_block_cost": "$general.number",
        "preferred_path_blocks": {
          "$dynamic.list.next_index": {
            "cost": "$general.number",
            "blocks": {
              "$dynamic.list.next_index": "$general.block_identifier"
            }
          }
        }
      },
      "minecraft:projectile": {
        "on_hit": {
          "@meta": {
            "expand_path_exceptions": [
              "thrown_potion_effect",
              "douse_fire",
              "arrow_effect",
              "remove_on_hit",
              "teleport_owner"
            ]
          },
          "definition_event": {
            "affect_projectile": "$general.boolean",
            "affect_shooter": "$general.boolean",
            "affect_target": "$general.boolean",
            "affect_splash_area": "$general.boolean",
            "splash_area": "$general.number",
            "event_trigger": "$entity.general.event_definition"
          },
          "grant_xp": {
            "minXP": "$general.number",
            "maxXP": "$general.number",
            "xp": "$general.number"
          },
          "spawn_aoe_cloud": {
            "radius": "$general.number",
            "radius_on_use": "$general.number",
            "potion": "$general.potion_number_id",
            "particle": "$general.particle_name",
            "duration": "$general.number",
            "color": { "$dynamic.list.index_triple": "$general.number" },
            "affect_owner": "$general.boolean",
            "reapplication_delay": "$general.number"
          },
          "impact_damage": {
            "filter": "$molang.embedded",
            "damage": { "$dynamic.list.index_pair": "$general.number" },
            "knockback": "$general.boolean",
            "semi_random_diff_damage": "$general.boolean",
            "destroy_on_hit": "$general.boolean",
            "max_critical_damage": "$general.number",
            "min_critical_damage": "$general.number",
            "power_multiplier": "$general.decimal",
            "should_bounce": "$general.boolean",
            "channeling": "$general.boolean",
            "set_last_hurt_requires_damage": "$general.boolean",
            "destroy_on_hit_requres_damage": "$general.boolean"
          },
          "spawn_chance": {
            "first_spawn_percent_chance": "$general.number",
            "first_spawn_chance": "$general.number",
            "second_spawn_percent_chance": "$general.number",
            "second_spawn_chance": "$general.number",
            "first_spawn_count": "$general.number",
            "second_spawn_count": "$general.number",
            "spawn_mob": { "@meta": { "is_value": true } },
            "spawn_definition": "$general.entity_identifier",
            "spawn_baby": "$general.boolean"
          },
          "mob_effect": {
            "effect": "$general.effect_name",
            "duration": "$general.number",
            "duration_easy": "$general.number",
            "duration_normal": "$general.number",
            "duration_hard": "$general.number",
            "amplifier": "$general.number"
          },
          "stick_in_ground": { "shake_time": "$general.decimal" },
          "thrown_potion_effect": {},
          "douse_fire": {},
          "arrow_effect": {},
          "remove_on_hit": {},
          "teleport_owner": {},
          "particle_on_hit": {
            "particle_type": "$general.particle_name",
            "num_particles": "$general.number",
            "on_entity_hit": "$general.boolean",
            "on_other_hit": "$general.boolean"
          },
          "catch_fire": { "fire_affected_by_griefing": "$general.boolean" }
        },
        "shoot_sound": "$general.sound",
        "hit_sound": "$general.sound",
        "hit_ground_sound": "$general.sound",
        "is_dangerous": "$general.boolean",
        "inertia": "$general.decimal",
        "liquid_inertia": "$general.decimal",
        "power": "$general.decimal",
        "gravity": "$general.decimal",
        "uncertainty_base": "$general.number",
        "uncertainty_multiplier": "$general.number",
        "anchor": "$general.number",
        "angleoffset": "$general.decimal",
        "semi_random_diff_damage": "$general.boolean",
        "shoot_target": "$general.boolean",
        "stop_on_hurt": "$general.boolean",
        "multiple_targets": "$general.boolean",
        "should_bounce": "$general.boolean",
        "reflect_on_hurt": "$general.boolean",
        "catch_fire": "$general.boolean",
        "offset": { "$dynamic.list.index_triple": "$general.decimal" },
        "homing": "$general.boolean"
      },
      "minecraft:raid_trigger": {
        "triggered_event": "$entity.general.event_definition"
      },
      "minecraft:rail_movement": { "max_speed": "$general.decimal" },
      "minecraft:rail_sensor": {
        "check_block_types": "$general.boolean",
        "eject_on_activate": "$general.boolean",
        "eject_on_deactivate": "$general.boolean",
        "on_activate": "$entity.general.event_definition",
        "on_deactivate": "$entity.general.event_definition",
        "tick_command_block_on_activate": "$general.boolean",
        "tick_command_block_on_deactivate": "$general.boolean"
      },
      "minecraft:ravager_blocked": {
        "knockback_strength": "$general.number",
        "reaction_choices": {
          "$dynamic.list.next_index": {
            "weight": "$general.number",
            "value": "$entity.general.event_definition"
          }
        }
      },
      "minecraft:rideable": {
        "controlling_seat": "$general.number",
        "crouching_skip_interact": "$general.boolean",
        "family_types": {
          "$dynamic.list.next_index": "$dynamic.cache.entity.families"
        },
        "interact_text": "$general.translatable_text",
        "pull_in_entities": "$general.boolean",
        "rider_can_interact": "$general.boolean",
        "seat_count": "$general.number",
        "seats": {
          "$dynamic.list.next_index": {
            "lock_rider_rotation": "$general.degree",
            "max_rider_count": "$general.number",
            "min_rider_count": "$general.number",
            "position": { "$dynamic.list.index_triple": "$general.decimal" },
            "rotate_rider_by": {
              "@import.value": "$general.degree and ('query.' + $molang.general.query)",
              "@meta": {
                "is_molang": true,
                "validate": {
                  "confirm": "Bridge.Node.data === '' || Bridge.Node.data === 'true' || Bridge.Node.data === 'false'",
                  "then": {
                    "show": true,
                    "message": "Invalid data type: Expected number or MoLang"
                  }
                }
              }
            }
          }
        }
      },
      "minecraft:scaffolding_climber": {},
      "minecraft:scale": { "value": "$general.decimal" },
      "minecraft:scale_by_age": {
        "start_scale": "$general.decimal",
        "end_scale": "$general.decimal"
      },
      "minecraft:scheduler": {
        "min_delay_secs": "$general.number",
        "max_delay_secs": "$general.number",
        "scheduled_events": {
          "$dynamic.list.next_index": "$entity.general.internal_event_definition"
        }
      },
      "minecraft:shareables": {
        "all_items": "$general.boolean",
        "all_items_max_amount": "$general.number",
        "all_items_surplus_amount": "$general.number",
        "all_items_want_amount": "$general.number",
        "items": {
          "$dynamic.list.next_index": {
            "priority": "$general.number",
            "item": "$general.item_identifier",
            "item_aux": "$general.number",
            "craft_into": "$general.item_identifier",
            "max_amount": "$general.number",
            "want_amount": "$general.number",
            "surplus_amount": "$general.number",
            "pickup_limit": "$general.number",
            "admire": "$general.boolean",
            "barter": "$general.boolean",
            "consume_item": "$general.boolean",
            "stored_in_inventory": "$general.boolean"
          }
        }
      },
      "minecraft:shooter": {
        "def": "$general.entity_identifier",
        "aux_val": "$general.potion_number_id"
      },
      "minecraft:sittable": {
        "sit_event": "$entity.general.event_definition",
        "stand_event": "$entity.general.event_definition"
      },
      "minecraft:sound_volume": { "value": "$general.decimal" },
      "$versioned_template.minecraft:spawn_entity": [
        {
          "$if": "$format_version < 1.16.0",
          "$data": {
            "$dynamic.list.next_index": {
              "should_leash": "$general.boolean",
              "num_to_spawn": "$general.number",
              "min_wait_time": "$general.number",
              "max_wait_time": "$general.number",
              "spawn_entity": "$general.entity_identifier",
              "spawn_event": "$entity.general.event_string",
              "spawn_item": "$general.item_identifier",
              "spawn_method": ["born"],
              "spawn_sound": "$general.sound",
              "filters": "$entity.filters",
              "single_use": "$general.boolean"
            }
          }
        },
        {
          "$if": "$format_version >= 1.16.0",
          "$data": {
            "entities": {
              "$dynamic.list.next_index": {
                "should_leash": "$general.boolean",
                "num_to_spawn": "$general.number",
                "min_wait_time": "$general.number",
                "max_wait_time": "$general.number",
                "spawn_entity": "$general.entity_identifier",
                "spawn_event": "$entity.general.event_string",
                "spawn_item": "$general.item_identifier",
                "spawn_method": ["born"],
                "spawn_sound": "$general.sound",
                "filters": "$entity.filters",
                "single_use": "$general.boolean"
              }
            }
          }
        }
      ],
      "minecraft:spell_effects": {
        "add_effects": {
          "$dynamic.list.next_index": "$entity.general.effect_definition"
        },
        "remove_effects": { "$dynamic.list.next_index": "$general.effect_name" }
      },
      "minecraft:strength": {
        "value": "$general.number",
        "max": "$general.number",
        "min": "$general.number"
      },
      "minecraft:tameable": {
        "probability": "$general.decimal",
        "tame_items": {
          "$dynamic.list.next_index": "$general.item_identifier"
        },
        "tame_event": "$entity.general.event_definition"
      },
      "$versioned_template.minecraft:tamemount": [
        {
          "$if": "$format_version >= 1.16.100",
          "$data": {
            "attempt_temper_mod": "$general.number",
            "auto_reject_items": {
              "$dynamic.list.next_index": {
                "item": {
                  "@import.value": "$general.item_identifier",
                  "any_tag": {
                    "$dynamic.list.next_index": {
                      "@meta": { "is_value": true }
                    }
                  }
                }
              }
            },
            "feed_items": {
              "$dynamic.list.next_index": {
                "item": {
                  "@import.value": "$general.item_identifier",
                  "any_tag": {
                    "$dynamic.list.next_index": {
                      "@meta": { "is_value": true }
                    }
                  }
                },
                "temper_mod": "$general.number"
              }
            },
            "feed_text": "$general.translatable_text",
            "min_temper": "$general.number",
            "max_temper": "$general.number",
            "ride_text": "$general.translatable_text",
            "tame_event": "$entity.general.event_definition"
          }
        },
        {
          "$if": "$format_version < 1.16.100",
          "$data": {
            "attempt_temper_mod": "$general.number",
            "auto_reject_items": {
              "$dynamic.list.next_index": { "item": "$general.item_identifier" }
            },
            "feed_items": {
              "$dynamic.list.next_index": {
                "item": "$general.item_identifier",
                "temper_mod": "$general.number"
              }
            },
            "feed_text": "$general.translatable_text",
            "min_temper": "$general.number",
            "max_temper": "$general.number",
            "ride_text": "$general.translatable_text",
            "tame_event": "$entity.general.event_definition"
          }
        }
      ],
      "minecraft:target_nearby_sensor": {
        "inside_range": "$general.number",
        "outside_range": "$general.number",
        "on_inside_range": "$entity.general.event_definition",
        "on_outside_range": "$entity.general.event_definition"
      },
      "minecraft:teleport": {
        "random_teleports": "$general.boolean",
        "max_random_teleport_time": "$general.number",
        "min_random_teleport_time": "$general.number",
        "random_teleport_cube": {
          "$dynamic.list.index_triple": "$general.number"
        },
        "target_distance": "$general.number",
        "target_teleport_chance": "$general.decimal",
        "light_teleport_chance": "$general.decimal",
        "dark_teleport_chance": "$general.decimal"
      },
      "minecraft:tick_world": {
        "radius": "$general.number",
        "distance_to_players": "$general.number",
        "never_despawn": "$general.boolean"
      },
      "minecraft:timer": {
        "looping": "$general.boolean",
        "randomInterval": "$general.boolean",
        "time": {
          "@import.value.decimal": "$general.decimal",
          "@meta": {
            "validate": {
              "confirm": "Bridge.Node.children.length !== 2 || Number.isNaN(Number(Bridge.Node.data))",
              "then": {
                "show": true,
                "message": "Invalid data type: Expected number or [number, number]"
              }
            }
          },
          "$dynamic.list.index_pair": "$general.decimal"
        },
        "random_time_choices": {
          "$dynamic.list.next_index": {
            "weight": "$general.number",
            "value": "$general.number"
          }
        },
        "time_down_event": "$entity.general.event_definition"
      },
      "minecraft:trade_resupply": {},
      "minecraft:trade_table": {
        "display_name": "$general.translatable_text",
        "table": "$dynamic.trade_table_files",
        "new_screen": "$general.boolean",
        "hero_demand_discount": "$general.number",
        "persist_trades": "$general.boolean",
        "convert_trades_economy": "$general.boolean"
      },
      "minecraft:trail": {
        "block_type": "$general.block_identifier",
        "spawn_filter": "$entity.filters",
        "spawn_offset": { "$dynamic.list.index_triple": "$general.number" }
      },
      "minecraft:transformation": {
        "into": "$general.entity_identifier",
        "begin_transformation_sound": "$general.sound",
        "transformation_sound": "$general.sound",
        "drop_equipment": "$general.boolean",
        "keep_owner": "$general.boolean",
        "keep_level": "$general.boolean",
        "delay": {
          "value": "$general.number",
          "block_assist_chance": "$general.decimal",
          "block_chance": "$general.decimal",
          "block_max": "$general.number",
          "block_radius": "$general.number",
          "keep_owner": "$general.boolean",
          "block_types": {
            "$dynamic.list.next_index": "$general.block_identifier"
          }
        }
      },
      "minecraft:trusting": {
        "probability": "$general.decimal",
        "trust_items": {
          "$dynamic.list.next_index": "$general.item_identifier"
        },
        "trust_event": "$entity.general.event_definition"
      },
      "minecraft:trust": {},
      "minecraft:type_family": {
        "family": { "$dynamic.list.next_index": "$entity.general.family" }
      },
      "minecraft:underwater_movement": "$entity.components.minecraft:movement",
      "minecraft:variant": { "value": "$general.number" },
      "minecraft:walk_animation_speed": { "value": "$general.decimal" },
      "minecraft:wants_jockey": {},
      "minecraft:water_movement": { "drag_factor": "$general.decimal" }
    },
    "main": {
      "format_version": "$general.format_version",
      "minecraft:entity": {
        "@meta": { "expand_path_exceptions": ["do_not_upgrade"] },
        "do_not_upgrade": {},
        "description": {
          "identifier": "$general.file_identifier and $general.entity_identifier",
          "runtime_identifier": "$vanilla.entity_identifier",
          "is_spawnable": "$general.boolean",
          "is_summonable": "$general.boolean",
          "is_experimental": "$general.boolean",
          "$dynamic_template.tags": {
            "$if": "$dynamic.bridge_core.is_active",
            "$default": {
              "$dynamic.list.next_index": "$dynamic.cache.entity_tag.identifiers"
            }
          },
          "animations": {
            "$placeholder": "$dynamic.animation_ids and $dynamic.animation_controller_ids"
          },
          "scripts": {
            "animate": {
              "$dynamic.list.next_index": {
                "$dynamic.entity.animation_references": {},
                "$placeholder": "$molang.embedded",
                "@import.value.refs": "$dynamic.entity.animation_references"
              }
            }
          },
          "$versioned_template.aliases": [
            {
              "$if": "$format_version >= 1.17.0",
              "$data": {
                "$placeholder": {
                  "$placeholder": { "@meta": { "is_value": true } }
                }
              }
            }
          ],
          "$versioned_template.properties": [
            {
              "$if": "$format_version >= 1.17.0",
              "$data": {
                "$placeholder": {
                  "values": {
                    "$dynamic.list.next_index": {
                      "@meta": { "is_value": true }
                    }
                  },
                  "min": "$general.number",
                  "max": "$general.number",
                  "default": { "@meta": { "is_value": true } },
                  "client_sync": "$general.boolean"
                }
              }
            }
          ]
        },
        "component_groups": { "$placeholder": "$entity.general.components" },
        "components": "$entity.general.components",
        "$versioned_template.permutations": [
          {
            "$if": "$format_version >= 1.17.0",
            "$data": {
              "$dynamic.list.next_index": {
                "condition": "$molang.embedded",
                "components": "$entity.general.components"
              }
            }
          }
        ],
        "events": {
          "$asObject": "$entity.general.built_in_event",
          "$placeholder": {
            "@meta": { "validate": "entity/eventStructure.js" },
            "$versioned_template.trigger": [
              {
                "$if": "$format_version >= 1.16.0",
                "$data": "$entity.general.event_string"
              }
            ],
            "$versioned_template.run_command": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": {
                  "command": {
                    "$dynamic.list.next_index": "$function.embedded_no_slash"
                  }
                }
              }
            ],
            "$versioned_template.damage": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": {
                  "type": "$general.damage_type",
                  "amount": "$general.number",
                  "target": ["self", "holder"]
                }
              }
            ],
            "$versioned_template.decrement_stack": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": { "ignore_game_mode": "$general.boolean" }
              }
            ],
            "$versioned_template.die": [
              { "$if": "$format_version >= 1.16.100", "$data": {} }
            ],
            "$versioned_template.add_mob_effect": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": {
                  "effect": "$general.effect_name",
                  "target": ["other", "self"],
                  "duration": "$general.number",
                  "amplifier": "$general.number"
                }
              }
            ],
            "$versioned_template.remove_mob_effect": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": {
                  "effect": "$general.effect_name",
                  "target": ["other", "self"]
                }
              }
            ],
            "$versioned_template.play_effect": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": {
                  "data": "$general.number",
                  "target": ["self", "other"],
                  "effect": {
                    "@import.value.particle": "$dynamic.cache.particle.ids",
                    "@import.value": "$vanilla.particle_identifier"
                  }
                }
              }
            ],
            "$versioned_template.play_sound": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": {
                  "target": ["self", "other"],
                  "sound": "$function.general.sound_definitions"
                }
              }
            ],
            "$versioned_template.teleport": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": {
                  "target": ["self", "other"],
                  "avoid_water": "$general.boolean",
                  "destintion": {
                    "$dynamic.list.index_triple": "$general.number"
                  },
                  "land_on_block": "$general.boolean",
                  "max_range": {
                    "$dynamic.list.index_triple": "$general.number"
                  }
                }
              }
            ],
            "$versioned_template.transform_item": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": { "transform": "$general.item_identifier" }
              }
            ],
            "sequence": {
              "$dynamic.list.next_index": {
                "filters": "$entity.filters",
                "$load": "$entity.main.minecraft:entity.events.$placeholder"
              }
            },
            "randomize": {
              "$dynamic.list.next_index": {
                "weight": "$general.number",
                "$load": "$entity.main.minecraft:entity.events.$placeholder"
              }
            },
            "add": {
              "component_groups": {
                "$dynamic.list.next_index": "$entity.general.component_group_name"
              },
              "$dynamic_template.spell_effects": {
                "$if": "$dynamic.bridge_core.is_active",
                "$default": "$entity.components.minecraft:spell_effects.add_effects"
              },
              "$dynamic_template.group": {
                "$if": "$dynamic.bridge_core.is_active",
                "$default": {
                  "name": { "@meta": { "is_value": true } },
                  "components": "$entity.main.minecraft:entity.components"
                }
              }
            },
            "remove": {
              "component_groups": {
                "$dynamic.list.next_index": "$entity.general.component_group_name"
              },
              "$dynamic_template.spell_effects": {
                "$if": "$dynamic.bridge_core.is_active",
                "$default": "$entity.components.minecraft:spell_effects.remove_effects"
              }
            },
            "$versioned_template.execute": [
              {
                "$if": "$format_version < 1.16.100",
                "$legacy_if": "$dynamic.bridge_core.is_active",
                "$data": {
                  "commands": {
                    "$dynamic.list.next_index": "$function.embedded"
                  }
                }
              }
            ],
            "$versioned_template.set_actor_property": [
              {
                "$if": "$format_version >= 1.17.0",
                "$data": { "$placeholder": { "@meta": { "is_value": true } } }
              }
            ]
          }
        }
      }
    },
    "annotations": {
      "@meta": { "expand_path_exceptions": ["minecraft:annotation.open_door"] },
      "minecraft:annotation.open_door": {},
      "minecraft:annotation.break_door": {
        "break_time": "$general.number",
        "min_difficulty": "$general.game_difficulty"
      }
    },
    "general": {
      "components": "$entity.annotations and $entity.behavior and $entity.components and $dynamic.plugins.custom_components",
      "beta_components": "$entity.annotations and $entity.behavior and $entity.components and $entity.beta_components and $dynamic.plugins.custom_components",
      "built_in_event": [
        "minecraft:entity_born",
        "minecraft:entity_spawned",
        "minecraft:entity_transformed",
        "minecraft:on_prime",
        "minecraft:start_celebrating"
      ],
      "effect_definition": {
        "effect": "$general.effect_name",
        "duration": "$general.number",
        "amplifier": "$general.number",
        "visible": "$general.boolean",
        "ambient": "$general.boolean",
        "display_on_screen_animation": "$general.boolean"
      },
      "component_group_name": {
        "@meta": { "is_value": true, "validate": "entity/groupName.js" },
        "@import.value": "$dynamic.entity.component_groups"
      },
      "event_string": {
        "@meta": { "validate": "entity/eventName.js" },
        "@import.value": "$dynamic.entity.events"
      },
      "event_definition": {
        "$dynamic.list.next_index": "$entity.general.internal_event_definition",
        "$load": "$entity.general.internal_event_definition"
      },
      "internal_event_definition": {
        "filters": "$entity.filters",
        "$dynamic_template.event": {
          "$key": "$dynamic.siblings.target",
          "$fallback": {
            "@meta": { "validate": "entity/eventName.js" },
            "@import.value.local_events": "$dynamic.entity.events"
          },
          "$default": {
            "@meta": { "validate": "entity/eventName.js" },
            "@import.value.all_events_1": "$dynamic.cache.entity.events"
          },
          "self": {
            "@meta": { "validate": "entity/eventName.js" },
            "@import.value.all_events_2": "$dynamic.entity.events"
          }
        },
        "target": "$entity.general.filter_targets"
      },
      "entity_types": {
        "$dynamic.list.next_index": {
          "filters": "$entity.filters",
          "max_dist": "$general.number",
          "must_see": "$general.boolean",
          "check_if_outnumbered": "$general.boolean",
          "sprint_speed_multiplier": "$general.decimal",
          "walk_speed_multiplier": "$general.decimal"
        }
      },
      "prioritized_entity_types": {
        "$dynamic.list.next_index": {
          "priority": "$general.number",
          "filters": "$entity.filters",
          "max_dist": "$general.number",
          "must_see": "$general.boolean",
          "sprint_speed_multiplier": "$general.decimal",
          "walk_speed_multiplier": "$general.decimal"
        }
      },
      "particle_definition": {
        "particle_type": "$general.particle_name",
        "particle_y_offset": "$general.decimal",
        "particle_offset_towards_interactor": "$general.boolean"
      },
      "filters": [
        "clock_time",
        "distance_to_nearest_player",
        "hourly_clock_time",
        "has_ability",
        "has_biome_tag",
        "has_container_open",
        "has_component",
        "has_damage",
        "has_equipment",
        "has_mob_effect",
        "has_ranged_weapon",
        "has_tag",
        "has_target",
        "has_trade_supply",
        "in_caravan",
        "in_clouds",
        "in_lava",
        "in_nether",
        "in_water",
        "in_water_or_rain",
        "inactivity_timer",
        "is_altitude",
        "is_avoiding_mobs",
        "is_biome",
        "is_block",
        "is_brightness",
        "is_climbing",
        "is_color",
        "is_daytime",
        "is_difficulty",
        "is_family",
        "is_game_rule",
        "is_humid",
        "is_immobile",
        "is_in_village",
        "is_leashed",
        "is_leashed_to",
        "is_moving",
        "is_owner",
        "is_persistent",
        "is_riding",
        "is_skin_id",
        "is_sleeping",
        "is_sneaking",
        "is_snow_covered",
        "is_target",
        "is_temperature_type",
        "is_temperature_value",
        "is_underground",
        "is_underwater",
        "is_variant",
        "is_visible",
        "light_level",
        "moon_intensity",
        "moon_phase",
        "on_ground",
        "on_ladder",
        "random_chance",
        "rider_count",
        "surface_mob",
        "trusts",
        "weather",
        "weather_at_position"
      ],
      "filters_beta": ["in_contact_with_water"],
      "filter_targets": {
        "@meta": { "validate": "entity/filterTarget.js" },
        "@import.value": [
          "other",
          "parent",
          "player",
          "self",
          "target",
          "baby",
          "block",
          "damager"
        ]
      },
      "filter_operators": [
        "==",
        "!=",
        "<",
        "<=",
        "<>",
        "=",
        ">",
        ">=",
        "equals",
        "not"
      ],
      "family": {
        "@meta": { "is_value": true, "definitions": ["entity"] },
        "@import.value.family": "$dynamic.cache.entity.families and $entity.general.vanilla_families"
      },
      "vanilla_families": [
        "armor_stand",
        "inanimate",
        "mob",
        "bat",
        "bee",
        "goat",
        "axolotl",
        "glow_squid",
        "arthropod",
        "pacified",
        "blaze",
        "monster",
        "boat",
        "cat",
        "cavespider",
        "minecart",
        "chicken",
        "cow",
        "creeper",
        "dolphin",
        "donkey",
        "drowned",
        "zombie",
        "undead",
        "guardian_elder",
        "enderman",
        "endermite",
        "dragon",
        "evocation_illager",
        "illager",
        "cod",
        "fish",
        "fox",
        "ghast",
        "guardian",
        "hoglin",
        "hoglin_baby",
        "hoglin_adult",
        "hoglin_huntable",
        "horse",
        "husk",
        "irongolem",
        "lightning",
        "llama",
        "magmacube",
        "mushroomcow",
        "mule",
        "npc",
        "ocelot",
        "panda",
        "panda_aggressive",
        "parrot_wild",
        "parrot_tame",
        "phantom",
        "pig",
        "piglin",
        "piglin_hunter",
        "pillager",
        "player",
        "polarbear",
        "pufferfish",
        "rabbit",
        "ravager",
        "salmon",
        "sheep",
        "shulker",
        "silverfish",
        "skeleton",
        "skeletonhorse",
        "slime",
        "snowgolem",
        "spider",
        "squid",
        "stray",
        "strider",
        "strider_baby",
        "strider_adult",
        "tnt",
        "tridpodcamera",
        "tropicalfish",
        "turtle",
        "baby_turtle",
        "vex",
        "villager",
        "peasant",
        "farmer",
        "fisherman",
        "shepard",
        "fletcher",
        "librarian",
        "cartographer",
        "priest",
        "cleric",
        "blacksmith",
        "armorer",
        "weaponsmith",
        "artisian",
        "butcher",
        "leatherworker",
        "stone_mason",
        "nitwit",
        "vindicator",
        "wandering_trader",
        "wandering_trader_despawning",
        "witch",
        "wither",
        "wolf",
        "zoglin",
        "zoglin_adult",
        "zombiehorse"
      ]
    },
    "filters": {
      "@meta": { "validate": "entity/filterStructure.js" },
      "all_of": { "$dynamic.list.next_index": "$entity.filters" },
      "any_of": { "$dynamic.list.next_index": "$entity.filters" },
      "none_of": { "$dynamic.list.next_index": "$entity.filters" },
      "$versioned_template": [
        {
          "$if": "$format_version >= 1.17.0",
          "$data": {
            "test": "$entity.general.filters and $entity.general.filters_beta"
          }
        },
        { "$data": { "test": "$entity.general.filters" } }
      ],
      "subject": "$entity.general.filter_targets",
      "operator": "$entity.general.filter_operators",
      "$dynamic_template.domain": {
        "$key": "$dynamic.siblings.test",
        "has_equipment": "$general.has_equipment_slot",
        "is_game_rule": "$general.gamerule"
      },
      "$dynamic_template.value": {
        "$key": "$dynamic.siblings.test",
        "$fallback": { "@meta": { "is_value": true } },
        "$default": { "@meta": { "is_value": true } },
        "is_daytime": "$general.boolean",
        "is_game_rule": "$general.boolean",
        "is_underwater": "$general.boolean",
        "in_nether": "$general.boolean",
        "in_water": "$general.boolean",
        "in_water_or_rain": "$general.boolean",
        "is_humid": "$general.boolean",
        "in_lava": "$general.boolean",
        "in_clouds": "$general.boolean",
        "in_caravan": "$general.boolean",
        "is_underground": "$general.boolean",
        "is_in_village": "$general.boolean",
        "on_ground": "$general.boolean",
        "on_ladder": "$general.boolean",
        "is_climbing": "$general.boolean",
        "is_sneaking": "$general.boolean",
        "is_moving": "$general.boolean",
        "is_riding": "$general.boolean",
        "is_owner": "$general.boolean",
        "is_target": "$general.boolean",
        "is_leashed_to": "$general.boolean",
        "is_leashed": "$general.boolean",
        "is_immobile": "$general.boolean",
        "is_avoiding_mobs": "$general.boolean",
        "is_visible": "$general.boolean",
        "is_snow_covered": "$general.boolean",
        "is_persistent": "$general.boolean",
        "has_trade_supply": "$general.boolean",
        "trusts": "$general.boolean",
        "has_container_open": "$general.boolean",
        "has_ranged_weapon": "$general.boolean",
        "has_target": "$general.boolean",
        "surface_mob": "$general.boolean",
        "has_equipment": "$general.item_identifier and $general.block_identifier",
        "has_component": "('minecraft:effect.' + $general.effect_name) and asValue($entity.general.components)",
        "has_ability": "$general.ability",
        "is_family": "$entity.general.family",
        "has_mob_effect": "$general.effect_name",
        "has_biome_tag": "$general.biome_tag and $dynamic.cache.biome.tags",
        "has_damage": "$general.damage_type",
        "is_color": "$general.color_palette",
        "is_biome": "$general.biome_name",
        "is_block": "$general.block_identifier",
        "is_difficulty": "$general.game_difficulty",
        "is_temperature_type": ["ocean", "cold", "mild", "warm"],
        "moon_phase": [0, 1, 2, 3, 4, 5, 6, 7],
        "weather": ["clear", "rain", "thunderstorm", "precipitation"],
        "weather_at_position": [
          "clear",
          "rain",
          "thunderstorm",
          "precipitation"
        ],
        "hourly_clock_time": "$general.hourly_clock_time",
        "clock_time": "$general.decimal",
        "moon_intensity": "$general.decimal",
        "distance_to_nearest_player": "$general.number",
        "is_mark_variant": "$general.number",
        "is_variant": "$general.number",
        "is_skin_id": "$general.number",
        "is_altitude": "$general.number",
        "is_brightness": "$general.decimal",
        "is_temperature_value": "$general.decimal",
        "rider_count": "$general.number",
        "inactivity_timer": "$general.number",
        "random_chance": "$general.number",
        "light_level": "$general.number0_15",
        "is_sleeping": "$general.boolean",
        "has_tag": {
          "@meta": { "is_value": true },
          "@import.value.tag": "$dynamic.cache.function.tags"
        },
        "in_contact_with_water": "$general.boolean"
      }
    }
  },
  "function": {
    "embedded_no_slash": {
      "@meta": { "is_value": true },
      "@import.value.embedded_command": "('function ' + $dynamic.function_files) and $function.main"
    },
    "main": {
      "alwaysday": "$general.boolean",
      "ability": {
        "$function.general.target_selector": {
          "$function.general.ability": "$general.boolean"
        }
      },
      "clear": {
        "$function.general.target_selector": {
          "$function.general.item_identifier": {
            "$general.number": "$general.number"
          }
        }
      },
      "camerashake": {
        "add": {
          "$function.general.target_selector": {
            "$general.decimal": {
              "$general.decimal": "$function.general.shake_types"
            }
          }
        }
      },
      "clearspawnpoint": "$function.general.target_selector",
      "clone": {
        "$function.general.location": {
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.location": {
                "$function.general.location": {
                  "$function.general.location": {
                    "$function.general.location": {
                      "$function.general.location": {
                        "$function.general.location": {
                          "$function.general.mask_mode": {
                            "$function.general.clone_mode": {}
                          },
                          "filtered": {
                            "$function.general.clone_mode": {
                              "$function.general.block_identifier": "$general.number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "difficulty": "$general.game_difficulty",
      "effect": {
        "$function.general.target_selector": {
          "$general.effect_name": {
            "$general.number": { "$general.number": "$general.boolean" }
          },
          "clear": {}
        }
      },
      "event": {
        "entity": {
          "$function.general.target_selector": "$dynamic.cache.entity.events"
        }
      },
      "enchant": {
        "$function.general.target_selector": {
          "$general.enchantment_name": "$general.number"
        }
      },
      "execute": {
        "$function.general.target_selector": {
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.location": {
                "$load": "$function.main",
                "detect": {
                  "$function.general.location": {
                    "$function.general.location": {
                      "$function.general.location": {
                        "$function.general.block_identifier": {
                          "$general.number": "$function.main"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "fill": {
        "$function.general.location": {
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.location": {
                "$function.general.location": {
                  "$function.general.location": {
                    "$function.general.block_identifier": {
                      "$general.number": {
                        "$function.general.fill_option": {},
                        "replace": {
                          "$function.general.block_identifier": "$general.number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "fog": {
        "$function.general.target_selector": {
          "push": { "$general.fog_identifier": {} },
          "pop": {},
          "remove": {}
        }
      },
      "function": "$dynamic.function_files",
      "gamemode": { "$general.gamemode": "$function.general.target_selector" },
      "gamerule": {
        "$general.gamerule": { "$general.boolean": {}, "$general.number": {} }
      },
      "give": {
        "$function.general.target_selector": {
          "$function.general.item_identifier": {
            "$general.number": { "$general.number": {} }
          }
        }
      },
      "kick": { "$function.general.target_selector": {} },
      "kill": { "$function.general.target_selector": {} },
      "locate": { "$function.general.structure_name": {} },
      "list": {},
      "me": {},
      "mobevent": { "$function.general.mob_event": "$general.boolean" },
      "music": {
        "volume": "$general.decimal",
        "stop": "$general.decimal",
        "play": {
          "$placeholder": {
            "$general.decimal": {
              "$general.number": "$function.general.music_repeat_mode"
            }
          }
        },
        "queue": {
          "$placeholder": {
            "$general.decimal": {
              "$general.number": "$function.general.music_repeat_mode"
            }
          }
        }
      },
      "particle": {
        "$function.general.particle_identifier": {
          "$function.general.location": {
            "$function.general.location": { "$function.general.location": {} }
          }
        }
      },
      "playsound": {
        "$placeholder": {
          "$function.general.target_selector": {
            "$function.general.location": {
              "$function.general.location": {
                "$function.general.location": {
                  "$general.decimal": { "$general.decimal": "$general.decimal" }
                }
              }
            }
          }
        },
        "$function.general.sound_definitions": {}
      },
      "playanimation": {
        "$function.general.target_selector": {
          "$dynamic.cache.rp_animation.ids": {
            "$placeholder": {
              "$general.number": {
                "$molang.embedded": "$dynamic.cache.rp_animation_controller.ids"
              }
            }
          }
        }
      },
      "ride": {
        "$function.general.target_selector": {
          "summon_ride": {
            "$function.general.entity_identifier": {
              "$function.general.ride_rules": "$dynamic.cache.entity.events"
            }
          },
          "start_riding": {
            "$function.general.target_selector": {
              "$function.general.teleport_rules": "$function.general.how_to_fill"
            }
          },
          "stop_riding": {},
          "summon_rider": {
            "$function.general.entity_identifier": "$dynamic.cache.entity.events"
          }
        }
      },
      "reload": {},
      "replaceitem": {
        "block": {
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.location": {
                "slot.container": {
                  "$general.number": {
                    "$function.general.replace_mode": {
                      "$function.general.item_identifier": {
                        "$general.number": "$general.number"
                      }
                    },
                    "$function.general.item_identifier": {
                      "$general.number": "$general.number"
                    }
                  }
                }
              }
            }
          }
        },
        "entity": {
          "$function.general.target_selector": {
            "$function.general.replace_mode": {
              "$general.slot_type": {
                "$general.number": {
                  "$function.general.item_identifier": {
                    "$general.number": "$general.number"
                  }
                }
              }
            },
            "$general.slot_type": {
              "$general.number": {
                "$function.general.item_identifier": {
                  "$general.number": "$general.number"
                }
              }
            }
          }
        }
      },
      "say": {},
      "schedule": {
        "on_area_loaded": {
          "add": {
            "$function.general.location": {
              "$function.general.location": {
                "$function.general.location": {
                  "$function.general.location": {
                    "$function.general.location": {
                      "$function.general.location": "$dynamic.function_files"
                    }
                  }
                }
              }
            },
            "circle": {
              "$function.general.location": {
                "$function.general.location": {
                  "$function.general.location": {
                    "$general.number": "$dynamic.function_files"
                  }
                }
              }
            },
            "tickingarea": { "$placeholder": "$dynamic.function_files" }
          }
        }
      },
      "scoreboard": {
        "objectives": {
          "add": { "$placeholder": { "dummy": {} } },
          "remove": {},
          "list": {},
          "setdisplay": {
            "sidebar": {
              "$dynamic.cache.function.scoreboards": {},
              "$placeholder": ["ascending", "descending"]
            },
            "list": {
              "$dynamic.cache.function.scoreboards": {},
              "$placeholder": ["ascending", "descending"]
            },
            "belowname": { "$dynamic.cache.function.scoreboards": {} }
          }
        },
        "players": {
          "list": {},
          "reset": "$function.general.target_selector",
          "test": {
            "$function.general.target_selector": {
              "$dynamic.cache.function.scoreboards": {},
              "$placeholder": { "$general.number": "$general.number" }
            }
          },
          "random": {
            "$function.general.target_selector": {
              "$dynamic.cache.function.scoreboards": {},
              "$placeholder": { "$general.number": "$general.number" }
            }
          },
          "set": {
            "$function.general.target_selector": {
              "$dynamic.cache.function.scoreboards": {},
              "$placeholder": "$general.number"
            }
          },
          "add": {
            "$function.general.target_selector": {
              "$dynamic.cache.function.scoreboards": {},
              "$placeholder": "$general.number"
            }
          },
          "remove": {
            "$function.general.target_selector": {
              "$dynamic.cache.function.scoreboards": {},
              "$placeholder": "$general.number"
            }
          },
          "operation": {
            "$function.general.target_selector": {
              "$dynamic.cache.function.scoreboards": {},
              "$placeholder": {
                "$function.general.scoreboard_operation": {
                  "$function.general.target_selector": {
                    "$dynamic.cache.function.scoreboards": {}
                  }
                }
              }
            }
          }
        }
      },
      "setblock": {
        "$function.general.location": {
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.block_identifier": {
                "$general.number": ["destroy", "keep", "replace"]
              }
            }
          }
        }
      },
      "setmaxplayers": "$general.number",
      "structure": {
        "save": {
          "$placeholder": {
            "$function.general.location": {
              "$function.general.location": {
                "$function.general.location": {
                  "$function.general.location": {
                    "$function.general.location": {
                      "$function.general.location": {
                        "$general.boolean": ["disk", "memory"],
                        "disk": {},
                        "memory": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "load": {
          "$placeholder": {
            "$function.general.location": {
              "$function.general.location": {
                "$function.general.location": {
                  "$function.general.structure_rotations": {
                    "$function.general.mirror": {
                      "$general.boolean": {
                        "$general.boolean": "$general.number"
                      },
                      "$function.general.structure_animations": {
                        "$general.number": {
                          "$general.boolean": {
                            "$general.boolean": "$general.number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "setworldspawn": {
        "$function.general.location": {
          "$function.general.location": "$function.general.location"
        }
      },
      "spawnpoint": {
        "$function.general.target_selector": {
          "$function.general.location": {
            "$function.general.location": { "$function.general.location": {} }
          }
        }
      },
      "spreadplayers": {
        "$general.number": {
          "$general.number": {
            "$general.decimal": {
              "$general.decimal": "$function.general.target_selector"
            }
          }
        }
      },
      "stopsound": {
        "$function.general.target_selector": {
          "$function.general.sound_definitions": {}
        }
      },
      "summon": {
        "$function.general.entity_identifier": {
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.location": {
                "$dynamic.cache.entity.events": {}
              },
              "named": { "$placeholder": "$function.general.location" }
            }
          }
        }
      },
      "tag": {
        "$function.general.target_selector": {
          "add": { "$dynamic.cache.function.tags": {} },
          "remove": { "$dynamic.cache.function.tags": {} },
          "list": {}
        }
      },
      "teleport": {
        "$function.general.location": {
          "$function.general.location": {
            "$function.general.location": {
              "$general.boolean": {},
              "$general.degree": "$general.degree",
              "facing": {
                "$function.general.location": {
                  "$function.general.location": {
                    "$function.general.location": { "$general.boolean": {} }
                  }
                },
                "$function.general.target_selector": {}
              }
            }
          }
        },
        "$function.general.target_selector": {
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.location": {
                "$general.degree": "$general.degree",
                "facing": {
                  "$function.general.location": {
                    "$function.general.location": {
                      "$function.general.location": {}
                    }
                  },
                  "$function.general.target_selector": {}
                }
              }
            }
          }
        }
      },
      "tell": { "$function.general.target_selector": {} },
      "tellraw": { "$function.general.target_selector": {} },
      "testfor": { "$function.general.target_selector": {} },
      "testforblock": {
        "$function.general.location": {
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.block_identifier": { "$general.number": {} }
            }
          }
        }
      },
      "testforblocks": {
        "$function.general.location": {
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.location": {
                "$function.general.location": {
                  "$function.general.location": {
                    "$function.general.location": {
                      "$function.general.location": {
                        "$function.general.location": ["masked", "all"]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "tickingarea": {
        "add": {
          "circle": {
            "$function.general.location": {
              "$function.general.location": {
                "$function.general.location": { "$general.number": {} }
              }
            }
          },
          "$function.general.location": {
            "$function.general.location": {
              "$function.general.location": {
                "$function.general.location": {
                  "$function.general.location": {
                    "$function.general.location": {}
                  }
                }
              }
            }
          }
        },
        "list": { "all-dimensions": {} },
        "remove": {
          "$function.general.location": {
            "$function.general.location": { "$function.general.location": {} }
          }
        },
        "remove_all": {}
      },
      "time": {
        "add": "$general.hourly_clock_time",
        "set": {
          "$function.general.time": {},
          "$general.hourly_clock_time": {}
        },
        "query": { "daytime": {}, "gametime": {}, "day": {} }
      },
      "title": {
        "$function.general.target_selector": {
          "$function.general.title_type": {},
          "times": {
            "$general.number": { "$general.number": "$general.number" }
          },
          "reset": {},
          "clear": {}
        }
      },
      "titleraw": "$function.main.title",
      "toggledownfall": {},
      "tp": "$function.main.teleport",
      "w": { "$function.general.target_selector": {} },
      "weather": {
        "$function.general.weather_type": "$general.number",
        "query": {}
      },
      "xp": {
        "$general.number": {
          "L": "$function.general.target_selector",
          "$function.general.target_selector": {}
        }
      },
      "$load": "$dynamic.plugins.custom_commands"
    },
    "general": {
      "ability": ["worldbuilder", "mayfly", "mute"],
      "location": ["~", "^", "@wildcard"],
      "target_selector": ["@a", "@e", "@p", "@r", "@s", "@wildcard"],
      "fill_option": ["outline", "hollow", "destroy", "keep"],
      "structure_name": [
        "bastionremnant",
        "buriedtreasure",
        "endcity",
        "fortress",
        "mansion",
        "mineshaft",
        "monument",
        "pillageroutpost",
        "ruinedportal",
        "ruins",
        "shipwreck",
        "stronghold",
        "temple",
        "village"
      ],
      "scoreboard_operation": [
        "%=",
        "*=",
        "+=",
        "-=",
        "/=",
        "<",
        "=",
        ">",
        "<>"
      ],
      "title_type": ["title", "subtitle", "actionbar"],
      "weather_type": ["clear", "rain", "thunder"],
      "item_identifier": "$vanilla.unprefixed_item_identifier and $dynamic.cache.item.identifiers",
      "block_identifier": "$vanilla.unprefixed_block_identifier and $dynamic.cache.block.identifiers",
      "entity_identifier": "$vanilla.unprefixed_entity_identifier and $dynamic.cache.entity.identifiers",
      "particle_identifier": "$vanilla.particle_identifier and $dynamic.cache.particle.ids",
      "sound_definitions": "$vanilla.sound_definitions and $dynamic.cache.sound_definition.ids",
      "replace_mode": ["destroy", "keep"],
      "mask_mode": ["replace", "masked"],
      "clone_mode": ["force", "move", "normal"],
      "mob_event": [
        "minecraft:pillager_patrols_event",
        "minecraft:wandering_trader_event",
        "minecraft:ender_dragon_event",
        "events_enabled"
      ],
      "time": ["day", "night", "noon", "midnight", "sunrise", "sunset"],
      "structure_rotations": [
        "0_degrees",
        "90_degrees",
        "180_degrees",
        "270_degrees"
      ],
      "structure_animations": ["block_by_block", "layer_by_layer"],
      "mirror": ["x", "z", "xz"],
      "teleport_rules": ["teleport_rider", "teleport_ride"],
      "how_to_fill": ["if_group_fits", "until_full"],
      "ride_rules": ["no_ride_change", "reassign_rides", "skip_riders"],
      "music_repeat_mode": ["loop", "play_once"],
      "shake_types": ["positional", "rotational"]
    },
    "embedded": {
      "@meta": { "is_value": true },
      "@import.value.embedded_command": "('/function ' + $dynamic.function_files) and ('/' + $function.main)"
    }
  },
  "map_area": {
    "main": {
      "bridge:map_area": {
        "description": {
          "identifier": "$general.file_identifier",
          "subjects": {
            "$dynamic.list.next_index": "$general.entity_identifier"
          },
          "area": {
            "from": { "$dynamic.list.index_triple": "$general.number" },
            "to": { "$dynamic.list.index_triple": "$general.number" }
          }
        },
        "components": {
          "bridge:timer": {
            "time": "$general.number",
            "looping": "$general.boolean",
            "event": "$map_area.general.event"
          },
          "bridge:area_sensor": {
            "on_enter": "$map_area.general.event",
            "on_leave": "$map_area.general.event"
          }
        }
      }
    },
    "general": {
      "event": {
        "commands": {
          "$dynamic.list.next_index": { "@meta": { "is_value": true } }
        },
        "entity_events": {
          "$dynamic.list.next_index": "'@s ' + $dynamic.cache.entity.events"
        }
      }
    }
  },
  "client_entity": {
    "main": {
      "format_version": "$general.format_version",
      "minecraft:client_entity": {
        "description": {
          "identifier": "$general.file_identifier and $general.entity_identifier",
          "min_engine_version": "$general.format_version",
          "enable_attachables": "$general.boolean",
          "spawn_egg": {
            "texture": {
              "@meta": { "is_value": true },
              "@import.value.item_texture": "$dynamic.rp.item_textures"
            },
            "texture_index": "$general.number",
            "base_color": { "@meta": { "is_value": true, "is_color": true } },
            "overlay_color": { "@meta": { "is_value": true, "is_color": true } }
          },
          "materials": {
            "$placeholder": {
              "@meta": { "is_value": true },
              "@import.value.material": "$client_entity.general.material"
            }
          },
          "textures": {
            "$placeholder": {
              "@meta": { "is_value": true },
              "@import.value.entity_texture": "$dynamic.rp.entity_textures"
            }
          },
          "geometry": { "$placeholder": "$general.model_identifier" },
          "animations": {
            "$placeholder": {
              "@meta": {
                "is_value": true,
                "definitions": ["rp_animation", "rp_animation_controller"]
              },
              "@import.value.animations": "$dynamic.cache.rp_animation.ids and $dynamic.cache.rp_animation_controller.ids"
            },
            "@meta": {
              "validate": {
                "confirm": "Bridge.Node.children.length == 0",
                "then": {
                  "show": true,
                  "message": "Node has too few children (0 < 1)"
                }
              }
            }
          },
          "scripts": {
            "scale": "$general.decimal",
            "initialize": {
              "$dynamic.list.next_index": {
                "@meta": { "is_value": true, "is_molang": true }
              }
            },
            "pre_animation": {
              "$dynamic.list.next_index": {
                "@meta": { "is_value": true, "is_molang": true }
              }
            },
            "$versioned_template.animate": [
              {
                "$if": "$format_version > 1.8.0",
                "$data": {
                  "$dynamic.list.next_index": {
                    "$dynamic.client_entity.animation_references": {},
                    "$placeholder": "$molang.embedded",
                    "@import.value.animation": "$dynamic.client_entity.animation_references"
                  }
                }
              }
            ],
            "$versioned_template.variable": [
              {
                "$if": "$format_version >= 1.16.100",
                "$data": { "$placeholder": ["public"] }
              }
            ]
          },
          "sound_effects": {
            "$placeholder": "$function.general.sound_definitions"
          },
          "render_controllers": {
            "$dynamic.list.next_index": {
              "@meta": {
                "is_value": true,
                "definitions": ["render_controller"]
              },
              "@import.value.render_controller": "$dynamic.cache.render_controller.ids"
            }
          },
          "particle_effects": {
            "$placeholder": {
              "@meta": { "is_value": true, "definitions": ["particle"] },
              "@import.value.particle": "$dynamic.cache.particle.ids",
              "@import.value": "$vanilla.particle_identifier"
            }
          },
          "particle_emitters": {
            "$placeholder": { "@meta": { "is_value": true } }
          },
          "$versioned_template": [
            {
              "$if": "$format_version = 1.8.0",
              "$data": {
                "animation_controllers": {
                  "$dynamic.list.next_index": {
                    "$placeholder": {
                      "@meta": {
                        "is_value": true,
                        "definitions": ["rp_animation_controller"]
                      },
                      "@import.value.animations": "$dynamic.cache.rp_animation_controller.ids"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "general": {
      "material": [
        "entity_static",
        "entity_flat_color_line",
        "entity_loyalty_rope",
        "entity",
        "opaque_block",
        "opaque_block_color",
        "opaque_block_color_uv2",
        "alpha_block",
        "alpha_block_color",
        "entity_nocull",
        "entity_change_color",
        "entity_alphatest",
        "map",
        "item_in_hand_entity_alphatest",
        "item_in_hand_entity_alphatest_color",
        "entity_alphablend",
        "entity_alphablend_nocolor",
        "guardian_ghost",
        "entity_emissive",
        "entity_emissive_alpha",
        "entity_emissive_alpha_one_sided",
        "entity_custom",
        "item_in_hand",
        "item_in_hand_multicolor_tint",
        "map_decoration",
        "map_marker",
        "charged_creeper",
        "item_in_hand_glint",
        "entity_glint",
        "entity_alphatest_glint",
        "entity_alphatest_glint_item",
        "entity_change_color_glint",
        "entity_alphatest_change_color",
        "entity_alphatest_change_color_glint",
        "entity_alphatest_multicolor_tint",
        "beacon_beam",
        "beacon_beam_transparent",
        "conduit_wind",
        "entity_multitexture",
        "entity_multitexture_color_mask",
        "entity_multitexture_alpha_test",
        "entity_multitexture_multiplicative_blend",
        "entity_multitexture_alpha_test_color_mask",
        "entity_lead_base",
        "entity_multitexture_masked",
        "moving_block",
        "moving_block_seasons",
        "moving_block_alpha_seasons",
        "moving_block_alpha_single_side",
        "moving_block_alpha",
        "moving_block_double_side",
        "moving_block_blend",
        "entity_beam",
        "entity_beam_additive",
        "entity_dissolve_layer0",
        "entity_dissolve_layer1",
        "banner",
        "banner_pole",
        "agent",
        "armor",
        "armor_leather",
        "armor_enchanted",
        "armor_leather_enchanted",
        "armor_stand",
        "arrow",
        "bat",
        "bed",
        "bell",
        "blaze_head",
        "blaze_body",
        "boat",
        "chalkboard",
        "chest",
        "chicken",
        "chicken_legs",
        "cow",
        "creeper",
        "dragon_head",
        "drowned",
        "elytra",
        "enchanting_table_book",
        "ender_crystal",
        "ender_dragon",
        "enderman",
        "enderman_invisible",
        "endermite",
        "evoker",
        "fang",
        "fishing_hook",
        "fox",
        "cat",
        "clownfish",
        "cod",
        "conduit",
        "pufferfish",
        "salmon",
        "tropicalfish",
        "ghast",
        "guardian",
        "horse",
        "horse_leather_armor",
        "horse_saddle",
        "horse_hair",
        "husk",
        "husk_clothes",
        "ravager",
        "iron_golem",
        "magma_cube",
        "leash_knot",
        "llama",
        "llama_spit",
        "minecart",
        "mob_head",
        "mooshroom",
        "mooshroom_mushrooms",
        "npc",
        "ocelot",
        "parrot",
        "pig",
        "shield",
        "shield_glint",
        "trident",
        "trident_riptide",
        "trident_glint",
        "piston_arm",
        "player",
        "player_alphatest",
        "polar_bear",
        "panda",
        "rabbit",
        "sheep",
        "shulker",
        "shulker_box",
        "shulker_bullet",
        "sign",
        "silverfish",
        "silverfish_layers",
        "skeleton",
        "pillager",
        "slime",
        "slime_outer",
        "snow_golem",
        "snow_golem_pumpkin",
        "spider",
        "spider_invisible",
        "squid",
        "dolphin",
        "phantom",
        "phantom_invisible",
        "stray",
        "stray_clothes",
        "turtle",
        "camera",
        "vex",
        "villager",
        "villager_v2",
        "villager_v2_masked",
        "vindicator",
        "wandering_trader",
        "witch",
        "wither_boss",
        "wither_boss_armor",
        "wolf",
        "zombie",
        "zombie_villager",
        "zombie_villager_v2",
        "zombie_villager_v2_masked",
        "player_animated"
      ]
    }
  },
  "animation": {
    "main": {
      "format_version": "$general.format_version",
      "animations": {
        "@meta": { "validate": "validateIDs.js" },
        "$placeholder": {
          "animation_length": "$general.number",
          "loop": "$general.boolean",
          "timeline": {
            "$placeholder": {
              "$dynamic.list.next_index": "('@s ' + $dynamic.entity.all_events) and $function.embedded"
            }
          }
        }
      }
    },
    "general": {
      "events": "$dynamic.entity.@events",
      "loop_type": {
        "@meta": {
          "validate": {
            "confirm": "Bridge.Node.data !== 'true' && Bridge.Node.data !== 'false' && Bridge.Node.data !== 'hold_on_last_frame'",
            "then": {
              "show": true,
              "message": "Invalid data type: Expected boolean or hold_on_last_frame string"
            }
          }
        },
        "@import.value": ["true", "false", "hold_on_last_frame"]
      }
    },
    "rp_main": {
      "format_version": "$general.format_version",
      "animations": {
        "@meta": { "validate": "validateIDs.js" },
        "$placeholder": {
          "anim_time_update": "$molang.embedded",
          "animation_length": "$general.number",
          "blend_weight": "$general.decimal",
          "override_previous_animation": "$general.boolean",
          "loop": "$animation.general.loop_type",
          "bones": {
            "$placeholder": {
              "rotation": {
                "$dynamic.list.index_triple": {
                  "@meta": { "is_molang": true, "is_value": true },
                  "@import.value.query": "$general.degree and $molang.general.boolean and ('query.' + $molang.general.query)"
                }
              },
              "scale": {
                "$dynamic.list.index_triple": {
                  "@meta": { "is_molang": true, "is_value": true },
                  "@import.value.query": "$general.degree and $molang.general.boolean and ('query.' + $molang.general.query)"
                }
              },
              "position": {
                "$dynamic.list.index_triple": {
                  "@meta": { "is_molang": true, "is_value": true },
                  "@import.value.query": "$general.number and $molang.general.boolean and ('query.' + $molang.general.query)"
                }
              }
            }
          },
          "particle_effects": {
            "$general.decimal": {},
            "@meta": { "validate": null },
            "$placeholder": {
              "$dynamic.list.next_index": {
                "effect": "$dynamic.cache.client_entity.particle_references",
                "locator": { "@meta": { "is_value": true } }
              }
            }
          },
          "sound_effects": {
            "$general.decimal": {},
            "@meta": { "validate": null },
            "$placeholder": {
              "$dynamic.list.next_index": {
                "effect": "$dynamic.cache.client_entity.sound_references"
              }
            }
          }
        }
      }
    }
  },
  "recipe": {
    "main": {
      "format_version": "$general.format_version",
      "minecraft:recipe_furnace": {
        "description": "$recipe.general.description",
        "tags": { "$dynamic.list.next_index": "$recipe.general.tags" },
        "group": { "@meta": { "is_value": true } },
        "input": "$recipe.general.item_block_identifier",
        "output": "$recipe.general.item_block_identifier"
      },
      "minecraft:recipe_shaped": {
        "description": "$recipe.general.description",
        "tags": { "$dynamic.list.next_index": "$recipe.general.tags" },
        "group": { "@meta": { "is_value": true } },
        "pattern": {
          "$dynamic.list.index_triple": { "@meta": { "is_value": true } }
        },
        "key": {
          "$dynamic.recipe.pattern_keys": {
            "item": "$recipe.general.item_block_identifier",
            "data": "$general.number and $molang.embedded"
          }
        },
        "result": {
          "$dynamic.list.next_index": {
            "item": "$recipe.general.item_block_identifier",
            "data": "$general.number and $molang.embedded",
            "count": "$general.number"
          }
        }
      },
      "minecraft:recipe_shapeless": {
        "description": "$recipe.general.description",
        "tags": { "$dynamic.list.next_index": "$recipe.general.tags" },
        "group": { "@meta": { "is_value": true } },
        "ingredients": {
          "$dynamic.list.next_index": {
            "item": "$recipe.general.item_block_identifier",
            "data": "$general.number and $molang.embedded",
            "count": "$general.number"
          }
        },
        "result": {
          "$dynamic.list.next_index": {
            "item": "$recipe.general.item_block_identifier",
            "data": "$general.number and $molang.embedded",
            "count": "$general.number"
          }
        }
      },
      "minecraft:recipe_brewing_mix": {
        "description": "$recipe.general.description",
        "tags": { "$dynamic.list.next_index": "$recipe.general.tags" },
        "input": "$recipe.general.item_block_identifier",
        "reagent": "$recipe.general.item_block_identifier",
        "output": "$recipe.general.item_block_identifier"
      },
      "minecraft:recipe_brewing_container": {
        "description": "$recipe.general.description",
        "tags": { "$dynamic.list.next_index": "$recipe.general.tags" },
        "input": "$recipe.general.item_block_identifier",
        "reagent": "$recipe.general.item_block_identifier",
        "output": "$recipe.general.item_block_identifier"
      }
    },
    "general": {
      "description": {
        "identifier": {
          "@meta": { "is_value": true },
          "@import.value.recipe": "$general.file_identifier"
        }
      },
      "vanilla_tags": [
        "blast_furnace",
        "brewing_stand",
        "campfire",
        "cartography_table",
        "crafting_table",
        "furnace",
        "smoker",
        "stonecutter",
        "soul_campfire"
      ],
      "tags": "$dynamic.cache.block.recipe_tags and $dynamic.cache.recipe.tags and $recipe.general.vanilla_tags",
      "item_block_identifier": "$general.item_identifier and $general.block_identifier"
    }
  },
  "vanilla": {
    "entity_identifier": "('minecraft:' + $vanilla.unprefixed_entity_identifier)",
    "unprefixed_entity_identifier": [
      "agent",
      "area_effect_cloud",
      "armor_stand",
      "axolotl",
      "arrow",
      "balloon",
      "bat",
      "bee",
      "blaze",
      "boat",
      "cat",
      "cave_spider",
      "chest_minecart",
      "chicken",
      "cod",
      "command_block_minecart",
      "cow",
      "creeper",
      "dolphin",
      "donkey",
      "dragon_fireball",
      "drowned",
      "egg",
      "elder_guardian",
      "elder_guardian_ghost",
      "ender_crystal",
      "ender_dragon",
      "ender_pearl",
      "enderman",
      "endermite",
      "evocation_fang",
      "evocation_illager",
      "eye_of_ender_signal",
      "falling_block",
      "fireball",
      "fireworks_rocket",
      "fishing_hook",
      "fox",
      "ghast",
      "glow_squid",
      "goat",
      "guardian",
      "hoglin",
      "hopper_minecart",
      "horse",
      "husk",
      "ice_bomb",
      "iron_golem",
      "item",
      "leash_knot",
      "lightning_bolt",
      "lingering_potion",
      "llama",
      "llama_spit",
      "magma_cube",
      "minecart",
      "mooshroom",
      "mule",
      "npc",
      "ocelot",
      "painting",
      "panda",
      "parrot",
      "phantom",
      "pig",
      "piglin",
      "pillager",
      "player",
      "polar_bear",
      "pufferfish",
      "rabbit",
      "ravager",
      "salmon",
      "sheep",
      "shulker",
      "shulker_bullet",
      "silverfish",
      "skeleton",
      "skeleton_horse",
      "slime",
      "small_fireball",
      "snow_golem",
      "snowball",
      "spider",
      "splash_potion",
      "squid",
      "stray",
      "strider",
      "thrown_trident",
      "tnt",
      "tnt_minecart",
      "tripod_camera",
      "tropicalfish",
      "turtle",
      "vex",
      "villager",
      "villager_v2",
      "vindicator",
      "wandering_trader",
      "witch",
      "wither",
      "wither_skeleton",
      "wither_skull",
      "wither_skull_dangerous",
      "wolf",
      "xp_bottle",
      "xp_orb",
      "zoglin",
      "zombie",
      "zombie_horse",
      "zombie_pigman",
      "zombie_villager",
      "zombie_villager_v2"
    ],
    "item_identifier": "('minecraft:' + $vanilla.unprefixed_item_identifier)",
    "unprefixed_item_identifier": [
      "quartz_bricks",
      "powder_snow_bucket",
      "spyglass",
      "glow_lichen",
      "glow_frame",
      "glow_berries",
      "glow_ink_sac",
      "amethyst_shard",
      "axolotl_bucket",
      "copper_ingot",
      "raw_iron",
      "raw_gold",
      "raw_copper",
      "cracked_nether_bricks",
      "chiseled_nether_bricks",
      "stripped_warped_hyphae",
      "stripped_crimson_hyphae",
      "crimson_hyphae",
      "warped_hyphae",
      "polished_blackstone_wall",
      "polished_blackstone_button",
      "polished_blackstone_pressure_plate",
      "polished_blackstone_double_slab",
      "polished_blackstone_slab",
      "polished_blackstone_stairs",
      "polished_blackstone",
      "item.soul_campfire",
      "crying_obsidian",
      "nether_gold_ore",
      "twisting_vines",
      "item.chain",
      "polished_blackstone_brick_double_slab",
      "polished_blackstone_brick_slab",
      "blackstone_double_slab",
      "blackstone_slab",
      "gilded_blackstone",
      "cracked_polished_blackstone_bricks",
      "chiseled_polished_blackstone",
      "polished_blackstone_brick_wall",
      "blackstone_wall",
      "blackstone_stairs",
      "polished_blackstone_brick_stairs",
      "polished_blackstone_bricks",
      "blackstone",
      "respawn_anchor",
      "ancient_debris",
      "netherite_block",
      "soul_lantern",
      "soul_torch",
      "warped_double_slab",
      "crimson_double_slab",
      "warped_slab",
      "crimson_slab",
      "warped_pressure_plate",
      "crimson_pressure_plate",
      "warped_button",
      "crimson_button",
      "warped_fence_gate",
      "crimson_fence_gate",
      "warped_fence",
      "crimson_fence",
      "warped_stairs",
      "crimson_stairs",
      "warped_wall_sign",
      "crimson_wall_sign",
      "warped_standing_sign",
      "crimson_standing_sign",
      "warped_trapdoor",
      "crimson_trapdoor",
      "item.warped_door",
      "item.crimson_door",
      "warped_planks",
      "crimson_planks",
      "stripped_warped_stem",
      "stripped_crimson_stem",
      "target",
      "item.nether_sprouts",
      "soul_fire",
      "soul_soil",
      "polished_basalt",
      "basalt",
      "warped_nylium",
      "crimson_nylium",
      "weeping_vines",
      "shroomlight",
      "warped_fungus",
      "crimson_fungus",
      "warped_wart_block",
      "warped_stem",
      "crimson_stem",
      "warped_roots",
      "crimson_roots",
      "lodestone",
      "honeycomb_block",
      "honey_block",
      "beehive",
      "bee_nest",
      "stickypistonarmcollision",
      "wither_rose",
      "light_block",
      "lit_blast_furnace",
      "composter",
      "wood",
      "jigsaw",
      "lava_cauldron",
      "item.campfire",
      "lantern",
      "sweet_berry_bush",
      "bell",
      "loom",
      "barrel",
      "smithing_table",
      "fletching_table",
      "cartography_table",
      "lit_smoker",
      "smoker",
      "stonecutter_block",
      "blast_furnace",
      "grindstone",
      "lectern",
      "darkoak_wall_sign",
      "darkoak_standing_sign",
      "acacia_wall_sign",
      "acacia_standing_sign",
      "jungle_wall_sign",
      "jungle_standing_sign",
      "birch_wall_sign",
      "birch_standing_sign",
      "smooth_quartz_stairs",
      "red_nether_brick_stairs",
      "smooth_stone",
      "spruce_wall_sign",
      "spruce_standing_sign",
      "normal_stone_stairs",
      "mossy_cobblestone_stairs",
      "end_brick_stairs",
      "smooth_sandstone_stairs",
      "smooth_red_sandstone_stairs",
      "mossy_stone_brick_stairs",
      "polished_andesite_stairs",
      "polished_diorite_stairs",
      "polished_granite_stairs",
      "andesite_stairs",
      "diorite_stairs",
      "granite_stairs",
      "real_double_stone_slab4",
      "real_double_stone_slab3",
      "double_stone_slab4",
      "scaffolding",
      "bamboo_sapling",
      "bamboo",
      "double_stone_slab3",
      "barrier",
      "bubble_column",
      "turtle_egg",
      "air",
      "conduit",
      "sea_pickle",
      "carved_pumpkin",
      "spruce_pressure_plate",
      "jungle_pressure_plate",
      "dark_oak_pressure_plate",
      "birch_pressure_plate",
      "acacia_pressure_plate",
      "spruce_trapdoor",
      "jungle_trapdoor",
      "dark_oak_trapdoor",
      "birch_trapdoor",
      "acacia_trapdoor",
      "spruce_button",
      "jungle_button",
      "dark_oak_button",
      "birch_button",
      "acacia_button",
      "dried_kelp_block",
      "item.kelp",
      "coral_fan_hang3",
      "coral_fan_hang2",
      "coral_fan_hang",
      "coral_fan_dead",
      "coral_fan",
      "coral_block",
      "coral",
      "seagrass",
      "element_118",
      "element_117",
      "element_116",
      "element_115",
      "element_114",
      "element_113",
      "element_112",
      "element_111",
      "element_110",
      "element_109",
      "element_108",
      "element_107",
      "element_106",
      "element_105",
      "element_104",
      "element_103",
      "element_102",
      "element_101",
      "element_100",
      "element_99",
      "element_98",
      "element_97",
      "element_96",
      "element_95",
      "element_94",
      "element_93",
      "element_92",
      "element_91",
      "element_90",
      "element_89",
      "element_88",
      "element_87",
      "element_86",
      "element_85",
      "element_84",
      "element_83",
      "element_82",
      "element_81",
      "element_80",
      "element_79",
      "element_78",
      "element_77",
      "element_76",
      "element_75",
      "element_74",
      "element_73",
      "element_72",
      "element_71",
      "element_70",
      "element_69",
      "element_68",
      "element_67",
      "element_66",
      "element_65",
      "element_64",
      "element_63",
      "element_62",
      "element_61",
      "element_60",
      "element_59",
      "element_58",
      "element_57",
      "element_56",
      "element_55",
      "element_54",
      "element_53",
      "element_52",
      "element_51",
      "element_50",
      "element_49",
      "element_48",
      "element_47",
      "element_46",
      "element_45",
      "element_44",
      "element_43",
      "element_42",
      "element_41",
      "element_40",
      "element_39",
      "element_38",
      "element_37",
      "element_36",
      "element_35",
      "element_34",
      "element_33",
      "element_32",
      "element_31",
      "element_30",
      "element_29",
      "element_28",
      "element_27",
      "element_26",
      "element_25",
      "element_24",
      "element_23",
      "element_22",
      "element_21",
      "element_20",
      "element_19",
      "element_18",
      "element_17",
      "element_16",
      "element_15",
      "element_14",
      "element_13",
      "element_12",
      "element_11",
      "element_10",
      "element_9",
      "element_8",
      "element_7",
      "element_6",
      "element_5",
      "element_4",
      "element_3",
      "element_2",
      "element_1",
      "blue_ice",
      "stripped_oak_log",
      "stripped_dark_oak_log",
      "stripped_acacia_log",
      "stripped_jungle_log",
      "stripped_birch_log",
      "stripped_spruce_log",
      "prismarine_bricks_stairs",
      "dark_prismarine_stairs",
      "prismarine_stairs",
      "stone",
      "grass",
      "dirt",
      "cobblestone",
      "planks",
      "sapling",
      "bedrock",
      "flowing_water",
      "water",
      "flowing_lava",
      "lava",
      "sand",
      "gravel",
      "gold_ore",
      "iron_ore",
      "coal_ore",
      "log",
      "leaves",
      "sponge",
      "glass",
      "lapis_ore",
      "lapis_block",
      "dispenser",
      "sandstone",
      "noteblock",
      "item.bed",
      "golden_rail",
      "detector_rail",
      "sticky_piston",
      "web",
      "tallgrass",
      "deadbush",
      "piston",
      "pistonarmcollision",
      "wool",
      "element_0",
      "yellow_flower",
      "red_flower",
      "brown_mushroom",
      "red_mushroom",
      "gold_block",
      "iron_block",
      "real_double_stone_slab",
      "double_stone_slab",
      "brick_block",
      "tnt",
      "bookshelf",
      "mossy_cobblestone",
      "obsidian",
      "torch",
      "fire",
      "mob_spawner",
      "oak_stairs",
      "chest",
      "redstone_wire",
      "diamond_ore",
      "diamond_block",
      "crafting_table",
      "item.wheat",
      "farmland",
      "furnace",
      "lit_furnace",
      "standing_sign",
      "item.wooden_door",
      "ladder",
      "rail",
      "stone_stairs",
      "wall_sign",
      "lever",
      "stone_pressure_plate",
      "item.iron_door",
      "wooden_pressure_plate",
      "redstone_ore",
      "lit_redstone_ore",
      "unlit_redstone_torch",
      "redstone_torch",
      "stone_button",
      "snow_layer",
      "ice",
      "snow",
      "cactus",
      "clay",
      "item.reeds",
      "jukebox",
      "fence",
      "pumpkin",
      "netherrack",
      "soul_sand",
      "glowstone",
      "portal",
      "lit_pumpkin",
      "item.cake",
      "unpowered_repeater",
      "powered_repeater",
      "invisiblebedrock",
      "trapdoor",
      "monster_egg",
      "stonebrick",
      "brown_mushroom_block",
      "red_mushroom_block",
      "iron_bars",
      "glass_pane",
      "melon_block",
      "pumpkin_stem",
      "melon_stem",
      "vine",
      "fence_gate",
      "brick_stairs",
      "stone_brick_stairs",
      "mycelium",
      "waterlily",
      "nether_brick",
      "nether_brick_fence",
      "nether_brick_stairs",
      "item.nether_wart",
      "enchanting_table",
      "brewingstandblock",
      "item.cauldron",
      "end_portal",
      "end_portal_frame",
      "end_stone",
      "dragon_egg",
      "redstone_lamp",
      "lit_redstone_lamp",
      "dropper",
      "activator_rail",
      "cocoa",
      "sandstone_stairs",
      "emerald_ore",
      "ender_chest",
      "tripwire_hook",
      "tripwire",
      "emerald_block",
      "spruce_stairs",
      "birch_stairs",
      "jungle_stairs",
      "command_block",
      "beacon",
      "cobblestone_wall",
      "item.flower_pot",
      "carrots",
      "potatoes",
      "wooden_button",
      "item.skull",
      "anvil",
      "trapped_chest",
      "light_weighted_pressure_plate",
      "heavy_weighted_pressure_plate",
      "unpowered_comparator",
      "powered_comparator",
      "daylight_detector",
      "redstone_block",
      "quartz_ore",
      "item.hopper",
      "quartz_block",
      "quartz_stairs",
      "double_wooden_slab",
      "wooden_slab",
      "stained_hardened_clay",
      "stained_glass_pane",
      "leaves2",
      "log2",
      "acacia_stairs",
      "dark_oak_stairs",
      "slime",
      "glow_stick",
      "iron_trapdoor",
      "prismarine",
      "sealantern",
      "hay_block",
      "carpet",
      "hardened_clay",
      "coal_block",
      "packed_ice",
      "double_plant",
      "standing_banner",
      "wall_banner",
      "daylight_detector_inverted",
      "red_sandstone",
      "red_sandstone_stairs",
      "real_double_stone_slab2",
      "double_stone_slab2",
      "spruce_fence_gate",
      "birch_fence_gate",
      "jungle_fence_gate",
      "dark_oak_fence_gate",
      "acacia_fence_gate",
      "repeating_command_block",
      "chain_command_block",
      "hard_glass_pane",
      "hard_stained_glass_pane",
      "chemical_heat",
      "item.spruce_door",
      "item.birch_door",
      "item.jungle_door",
      "item.acacia_door",
      "item.dark_oak_door",
      "grass_path",
      "item.frame",
      "chorus_flower",
      "purpur_block",
      "colored_torch_rg",
      "purpur_stairs",
      "colored_torch_bp",
      "undyed_shulker_box",
      "end_bricks",
      "frosted_ice",
      "end_rod",
      "end_gateway",
      "allow",
      "deny",
      "border_block",
      "magma",
      "nether_wart_block",
      "red_nether_brick",
      "bone_block",
      "structure_void",
      "shulker_box",
      "purple_glazed_terracotta",
      "white_glazed_terracotta",
      "orange_glazed_terracotta",
      "magenta_glazed_terracotta",
      "light_blue_glazed_terracotta",
      "yellow_glazed_terracotta",
      "lime_glazed_terracotta",
      "pink_glazed_terracotta",
      "gray_glazed_terracotta",
      "silver_glazed_terracotta",
      "cyan_glazed_terracotta",
      "blue_glazed_terracotta",
      "brown_glazed_terracotta",
      "green_glazed_terracotta",
      "red_glazed_terracotta",
      "black_glazed_terracotta",
      "concrete",
      "concrete_powder",
      "chemistry_table",
      "underwater_torch",
      "chorus_plant",
      "stained_glass",
      "item.camera",
      "podzol",
      "item.beetroot",
      "stonecutter",
      "glowingobsidian",
      "netherreactor",
      "info_update",
      "info_update2",
      "movingblock",
      "observer",
      "structure_block",
      "hard_glass",
      "hard_stained_glass",
      "reserved6",
      "iron_shovel",
      "iron_pickaxe",
      "iron_axe",
      "flint_and_steel",
      "apple",
      "bow",
      "arrow",
      "coal",
      "diamond",
      "iron_ingot",
      "gold_ingot",
      "iron_sword",
      "wooden_sword",
      "wooden_shovel",
      "wooden_pickaxe",
      "wooden_axe",
      "stone_sword",
      "stone_shovel",
      "stone_pickaxe",
      "stone_axe",
      "diamond_sword",
      "diamond_shovel",
      "diamond_pickaxe",
      "diamond_axe",
      "stick",
      "bowl",
      "mushroom_stew",
      "golden_sword",
      "golden_shovel",
      "golden_pickaxe",
      "golden_axe",
      "string",
      "feather",
      "gunpowder",
      "wooden_hoe",
      "stone_hoe",
      "iron_hoe",
      "diamond_hoe",
      "golden_hoe",
      "wheat_seeds",
      "wheat",
      "bread",
      "leather_helmet",
      "leather_chestplate",
      "leather_leggings",
      "leather_boots",
      "chainmail_helmet",
      "chainmail_chestplate",
      "chainmail_leggings",
      "chainmail_boots",
      "iron_helmet",
      "iron_chestplate",
      "iron_leggings",
      "iron_boots",
      "diamond_helmet",
      "diamond_chestplate",
      "diamond_leggings",
      "diamond_boots",
      "golden_helmet",
      "golden_chestplate",
      "golden_leggings",
      "golden_boots",
      "flint",
      "porkchop",
      "cooked_porkchop",
      "painting",
      "golden_apple",
      "sign",
      "wooden_door",
      "bucket",
      "minecart",
      "saddle",
      "iron_door",
      "redstone",
      "snowball",
      "boat",
      "leather",
      "kelp",
      "brick",
      "clay_ball",
      "reeds",
      "paper",
      "book",
      "slime_ball",
      "chest_minecart",
      "egg",
      "compass",
      "fishing_rod",
      "clock",
      "glowstone_dust",
      "fish",
      "cooked_fish",
      "dye",
      "bone",
      "sugar",
      "cake",
      "bed",
      "repeater",
      "cookie",
      "map",
      "shears",
      "melon",
      "pumpkin_seeds",
      "melon_seeds",
      "beef",
      "cooked_beef",
      "chicken",
      "cooked_chicken",
      "rotten_flesh",
      "ender_pearl",
      "blaze_rod",
      "ghast_tear",
      "gold_nugget",
      "nether_wart",
      "potion",
      "glass_bottle",
      "spider_eye",
      "fermented_spider_eye",
      "blaze_powder",
      "magma_cream",
      "brewing_stand",
      "cauldron",
      "ender_eye",
      "speckled_melon",
      "spawn_egg",
      "experience_bottle",
      "fireball",
      "writable_book",
      "written_book",
      "emerald",
      "frame",
      "flower_pot",
      "carrot",
      "potato",
      "baked_potato",
      "poisonous_potato",
      "emptymap",
      "golden_carrot",
      "skull",
      "carrotonastick",
      "netherstar",
      "pumpkin_pie",
      "fireworks",
      "fireworkscharge",
      "enchanted_book",
      "comparator",
      "netherbrick",
      "quartz",
      "tnt_minecart",
      "hopper_minecart",
      "prismarine_shard",
      "hopper",
      "rabbit",
      "cooked_rabbit",
      "rabbit_stew",
      "rabbit_foot",
      "rabbit_hide",
      "horsearmorleather",
      "horsearmoriron",
      "horsearmorgold",
      "horsearmordiamond",
      "lead",
      "name_tag",
      "prismarine_crystals",
      "muttonraw",
      "muttoncooked",
      "armor_stand",
      "end_crystal",
      "spruce_door",
      "birch_door",
      "jungle_door",
      "acacia_door",
      "dark_oak_door",
      "chorus_fruit",
      "chorus_fruit_popped",
      "banner_pattern",
      "dragon_breath",
      "splash_potion",
      "lingering_potion",
      "sparkler",
      "command_block_minecart",
      "elytra",
      "shulker_shell",
      "banner",
      "medicine",
      "balloon",
      "rapid_fertilizer",
      "totem",
      "bleach",
      "iron_nugget",
      "ice_bomb",
      "trident",
      "beetroot",
      "beetroot_seeds",
      "beetroot_soup",
      "salmon",
      "clownfish",
      "pufferfish",
      "cooked_salmon",
      "dried_kelp",
      "nautilus_shell",
      "appleenchanted",
      "heart_of_the_sea",
      "turtle_shell_piece",
      "turtle_helmet",
      "phantom_membrane",
      "crossbow",
      "spruce_sign",
      "birch_sign",
      "jungle_sign",
      "acacia_sign",
      "darkoak_sign",
      "sweet_berries",
      "camera",
      "compound",
      "record_13",
      "record_cat",
      "record_blocks",
      "record_chirp",
      "record_far",
      "record_mall",
      "record_mellohi",
      "record_stal",
      "record_strad",
      "record_ward",
      "record_11",
      "record_wait",
      "shield",
      "campfire",
      "suspicious_stew",
      "honeycomb",
      "honey_bottle",
      "lodestonecompass",
      "netherite_ingot",
      "netherite_sword",
      "netherite_shovel",
      "netherite_pickaxe",
      "netherite_axe",
      "netherite_hoe",
      "netherite_helmet",
      "netherite_chestplate",
      "netherite_leggings",
      "netherite_boots",
      "netherite_scrap",
      "crimson_sign",
      "warped_sign",
      "crimson_door",
      "warped_door",
      "warped_fungus_on_a_stick",
      "chain",
      "record_pigstep",
      "nether_sprouts",
      "soul_campfire"
    ],
    "block_identifier": "('minecraft:' + $vanilla.unprefixed_block_identifier)",
    "unprefixed_block_identifier": [
      "air",
      "amethyst_block",
      "budding_amethyst",
      "medium_amethyst_bud",
      "amethyst_cluster",
      "large_amethyst_bud",
      "small_amethyst_bud",
      "raw_copper_block",
      "raw_gold_block",
      "raw_iron_block",
      "azalea",
      "flowering_azalea",
      "azalea_leaves",
      "flowering_azalea_leaves",
      "calcite",
      "tuff",
      "big_dripleaf",
      "small_dripleaf_block",
      "lightning_rod",
      "white_candle",
      "orange_candle",
      "candle",
      "magenta_candle",
      "light_blue_candle",
      "yellow_candle",
      "lime_candle",
      "pink_candle",
      "gray_candle",
      "light_gray_candle",
      "cyan_candle",
      "purple_candle",
      "black_candle",
      "brown_candle",
      "green_candle",
      "blue_candle",
      "red_candle",
      "deepslate",
      "deepslate_coal_ore",
      "deepslate_copper_ore",
      "deepslate_diamond_ore",
      "deepslate_emerald_ore",
      "deepslate_gold_ore",
      "deepslate_iron_ore",
      "deepslate_redstone_ore",
      "copper_ore",
      "deepslate_bricks",
      "deepslate_brick_slab",
      "deepslate_brick_stairs",
      "deepslate_brick_wall",
      "deepslate_tiles",
      "cracked_deepslate_tiles",
      "deepslate_tile_slab",
      "deepslate_tile_stairs",
      "deepslate_tile_wall",
      "chiseled_deepslate",
      "polished_deepslate",
      "polished_deepslate_slab",
      "polished_deepslate_stairs",
      "cobbled_deepslate",
      "cobbled_deepslate_slab",
      "polished_deepslate_wall",
      "cobbled_deepslate_wall",
      "infested_deepslate",
      "cracked_deepslate_bricks",
      "minecraft:copper_block",
      "minecraft:cut_copper",
      "cut_copper_slab",
      "cut_copper_stairs",
      "exposed_copper",
      "exposed_cut_copper",
      "exposed_cut_copper_slab",
      "exposed_cut_copper_stairs",
      "oxidized_copper",
      "oxidized_cut_copper_stairs",
      "oxidized_cut_copper_slab",
      "oxidized_cut_copper",
      "weathered_copper",
      "weathered_cut_copper_slab",
      "weathered_cut_copper_stairs",
      "waxed_copper_block",
      "waxed_cut_copper",
      "weathered_cut_copper",
      "waxed_cut_copper_slab",
      "waxed_cut_copper_stairs",
      "waxed_exposed_copper",
      "waxed_exposed_cut_copper",
      "waxed_exposed_cut_copper_slab",
      "waxed_exposed_cut_copper_stairs",
      "waxed_oxidized_copper",
      "waxed_oxidized_cut_copper",
      "waxed_oxidized_cut_copper_slab",
      "waxed_oxidized_cut_copper_stairs",
      "waxed_weathered_copper",
      "waxed_weathered_cut_copper",
      "waxed_weathered_cut_copper_slab",
      "waxed_weathered_cut_copper_stairs",
      "hanging_roots",
      "light",
      "moss_block",
      "moss_carpet",
      "tinted_glass",
      "smooth_basalt",
      "spore_blossom",
      "sculk_sensor",
      "rooted_dirt",
      "pointed_dripstone",
      "dripstone_block",
      "stone",
      "grass",
      "dirt",
      "cobblestone",
      "planks",
      "sapling",
      "bedrock",
      "flowing_water",
      "water",
      "flowing_lava",
      "lava",
      "sand",
      "gravel",
      "gold_ore",
      "iron_ore",
      "coal_ore",
      "log",
      "leaves",
      "sponge",
      "glass",
      "lapis_ore",
      "lapis_block",
      "dispenser",
      "sandstone",
      "noteblock",
      "bed",
      "golden_rail",
      "detector_rail",
      "sticky_piston",
      "web",
      "tallgrass",
      "deadbush",
      "piston",
      "pistonArmCollision",
      "wool",
      "element_0",
      "yellow_flower",
      "red_flower",
      "brown_mushroom",
      "red_mushroom",
      "gold_block",
      "iron_block",
      "double_stone_slab",
      "stone_slab",
      "brick_block",
      "tnt",
      "bookshelf",
      "mossy_cobblestone",
      "obsidian",
      "torch",
      "fire",
      "mob_spawner",
      "oak_stairs",
      "chest",
      "redstone_wire",
      "diamond_ore",
      "diamond_block",
      "crafting_table",
      "wheat",
      "farmland",
      "furnace",
      "lit_furnace",
      "standing_sign",
      "wooden_door",
      "ladder",
      "rail",
      "stone_stairs",
      "wall_sign",
      "lever",
      "stone_pressure_plate",
      "iron_door",
      "wooden_pressure_plate",
      "redstone_ore",
      "lit_redstone_ore",
      "unlit_redstone_torch",
      "redstone_torch",
      "stone_button",
      "snow_layer",
      "ice",
      "snow",
      "cactus",
      "clay",
      "reeds",
      "jukebox",
      "fence",
      "pumpkin",
      "netherrack",
      "soul_sand",
      "glowstone",
      "portal",
      "lit_pumpkin",
      "cake",
      "unpowered_repeater",
      "powered_repeater",
      "invisibleBedrock",
      "trapdoor",
      "monster_egg",
      "stonebrick",
      "brown_mushroom_block",
      "red_mushroom_block",
      "iron_bars",
      "glass_pane",
      "melon_block",
      "pumpkin_stem",
      "melon_stem",
      "vine",
      "fence_gate",
      "brick_stairs",
      "stone_brick_stairs",
      "mycelium",
      "waterlily",
      "nether_brick",
      "nether_brick_fence",
      "nether_brick_stairs",
      "nether_wart",
      "enchanting_table",
      "brewing_stand",
      "cauldron",
      "end_portal",
      "end_portal_frame",
      "end_stone",
      "dragon_egg",
      "redstone_lamp",
      "lit_redstone_lamp",
      "dropper",
      "activator_rail",
      "cocoa",
      "sandstone_stairs",
      "emerald_ore",
      "ender_chest",
      "tripwire_hook",
      "tripWire",
      "emerald_block",
      "spruce_stairs",
      "birch_stairs",
      "jungle_stairs",
      "command_block",
      "beacon",
      "cobblestone_wall",
      "flower_pot",
      "carrots",
      "potatoes",
      "wooden_button",
      "skull",
      "anvil",
      "trapped_chest",
      "light_weighted_pressure_plate",
      "heavy_weighted_pressure_plate",
      "unpowered_comparator",
      "powered_comparator",
      "daylight_detector",
      "redstone_block",
      "quartz_ore",
      "hopper",
      "quartz_block",
      "quartz_stairs",
      "double_wooden_slab",
      "wooden_slab",
      "stained_hardened_clay",
      "stained_glass_pane",
      "leaves2",
      "log2",
      "acacia_stairs",
      "dark_oak_stairs",
      "slime",
      "iron_trapdoor",
      "prismarine",
      "seaLantern",
      "hay_block",
      "carpet",
      "hardened_clay",
      "coal_block",
      "packed_ice",
      "double_plant",
      "standing_banner",
      "wall_banner",
      "daylight_detector_inverted",
      "red_sandstone",
      "red_sandstone_stairs",
      "double_stone_slab2",
      "stone_slab2",
      "spruce_fence_gate",
      "birch_fence_gate",
      "jungle_fence_gate",
      "dark_oak_fence_gate",
      "acacia_fence_gate",
      "repeating_command_block",
      "chain_command_block",
      "hard_glass_pane",
      "hard_stained_glass_pane",
      "chemical_heat",
      "spruce_door",
      "birch_door",
      "jungle_door",
      "acacia_door",
      "dark_oak_door",
      "grass_path",
      "frame",
      "chorus_flower",
      "purpur_block",
      "colored_torch_rg",
      "purpur_stairs",
      "colored_torch_bp",
      "undyed_shulker_box",
      "end_bricks",
      "frosted_ice",
      "end_rod",
      "end_gateway",
      "allow",
      "deny",
      "border_block",
      "magma",
      "nether_wart_block",
      "red_nether_brick",
      "bone_block",
      "structure_void",
      "shulker_box",
      "purple_glazed_terracotta",
      "white_glazed_terracotta",
      "orange_glazed_terracotta",
      "magenta_glazed_terracotta",
      "light_blue_glazed_terracotta",
      "yellow_glazed_terracotta",
      "lime_glazed_terracotta",
      "pink_glazed_terracotta",
      "gray_glazed_terracotta",
      "silver_glazed_terracotta",
      "cyan_glazed_terracotta",
      "blue_glazed_terracotta",
      "brown_glazed_terracotta",
      "green_glazed_terracotta",
      "red_glazed_terracotta",
      "black_glazed_terracotta",
      "concrete",
      "concretePowder",
      "chemistry_table",
      "underwater_torch",
      "chorus_plant",
      "stained_glass",
      "camera",
      "podzol",
      "beetroot",
      "stonecutter",
      "glowingobsidian",
      "netherreactor",
      "info_update",
      "info_update2",
      "movingBlock",
      "observer",
      "structure_block",
      "hard_glass",
      "hard_stained_glass",
      "reserved6",
      "prismarine_stairs",
      "dark_prismarine_stairs",
      "prismarine_bricks_stairs",
      "stripped_spruce_log",
      "stripped_birch_log",
      "stripped_jungle_log",
      "stripped_acacia_log",
      "stripped_dark_oak_log",
      "stripped_oak_log",
      "blue_ice",
      "element_1",
      "element_2",
      "element_3",
      "element_4",
      "element_5",
      "element_6",
      "element_7",
      "element_8",
      "element_9",
      "element_10",
      "element_11",
      "element_12",
      "element_13",
      "element_14",
      "element_15",
      "element_16",
      "element_17",
      "element_18",
      "element_19",
      "element_20",
      "element_21",
      "element_22",
      "element_23",
      "element_24",
      "element_25",
      "element_26",
      "element_27",
      "element_28",
      "element_29",
      "element_30",
      "element_31",
      "element_32",
      "element_33",
      "element_34",
      "element_35",
      "element_36",
      "element_37",
      "element_38",
      "element_39",
      "element_40",
      "element_41",
      "element_42",
      "element_43",
      "element_44",
      "element_45",
      "element_46",
      "element_47",
      "element_48",
      "element_49",
      "element_50",
      "element_51",
      "element_52",
      "element_53",
      "element_54",
      "element_55",
      "element_56",
      "element_57",
      "element_58",
      "element_59",
      "element_60",
      "element_61",
      "element_62",
      "element_63",
      "element_64",
      "element_65",
      "element_66",
      "element_67",
      "element_68",
      "element_69",
      "element_70",
      "element_71",
      "element_72",
      "element_73",
      "element_74",
      "element_75",
      "element_76",
      "element_77",
      "element_78",
      "element_79",
      "element_80",
      "element_81",
      "element_82",
      "element_83",
      "element_84",
      "element_85",
      "element_86",
      "element_87",
      "element_88",
      "element_89",
      "element_90",
      "element_91",
      "element_92",
      "element_93",
      "element_94",
      "element_95",
      "element_96",
      "element_97",
      "element_98",
      "element_99",
      "element_100",
      "element_101",
      "element_102",
      "element_103",
      "element_104",
      "element_105",
      "element_106",
      "element_107",
      "element_108",
      "element_109",
      "element_110",
      "element_111",
      "element_112",
      "element_113",
      "element_114",
      "element_115",
      "element_116",
      "element_117",
      "element_118",
      "seagrass",
      "coral",
      "coral_block",
      "coral_fan",
      "coral_fan_dead",
      "coral_fan_hang",
      "coral_fan_hang2",
      "coral_fan_hang3",
      "kelp",
      "dried_kelp_block",
      "acacia_button",
      "birch_button",
      "dark_oak_button",
      "jungle_button",
      "spruce_button",
      "acacia_trapdoor",
      "birch_trapdoor",
      "dark_oak_trapdoor",
      "jungle_trapdoor",
      "spruce_trapdoor",
      "acacia_pressure_plate",
      "birch_pressure_plate",
      "dark_oak_pressure_plate",
      "jungle_pressure_plate",
      "spruce_pressure_plate",
      "carved_pumpkin",
      "sea_pickle",
      "conduit",
      "turtle_egg",
      "bubble_column",
      "barrier",
      "stone_slab3",
      "bamboo",
      "bamboo_sapling",
      "scaffolding",
      "stone_slab4",
      "double_stone_slab3",
      "double_stone_slab4",
      "granite_stairs",
      "diorite_stairs",
      "andesite_stairs",
      "polished_granite_stairs",
      "polished_diorite_stairs",
      "polished_andesite_stairs",
      "mossy_stone_brick_stairs",
      "smooth_red_sandstone_stairs",
      "smooth_sandstone_stairs",
      "end_brick_stairs",
      "mossy_cobblestone_stairs",
      "normal_stone_stairs",
      "spruce_standing_sign",
      "spruce_wall_sign",
      "smooth_stone",
      "red_nether_brick_stairs",
      "smooth_quartz_stairs",
      "birch_standing_sign",
      "birch_wall_sign",
      "jungle_standing_sign",
      "jungle_wall_sign",
      "acacia_standing_sign",
      "acacia_wall_sign",
      "darkoak_standing_sign",
      "darkoak_wall_sign",
      "lectern",
      "grindstone",
      "blast_furnace",
      "stonecutter_block",
      "smoker",
      "lit_smoker",
      "cartography_table",
      "fletching_table",
      "smithing_table",
      "barrel",
      "loom",
      "bell",
      "sweet_berry_bush",
      "lantern",
      "campfire",
      "lava_cauldron",
      "jigsaw",
      "wood",
      "composter",
      "lit_blast_furnace",
      "light_block",
      "wither_rose",
      "stickyPistonArmCollision",
      "bee_nest",
      "beehive",
      "honey_block",
      "honeycomb_block",
      "lodestone",
      "crimson_roots",
      "warped_roots",
      "crimson_stem",
      "warped_stem",
      "warped_wart_block",
      "crimson_fungus",
      "warped_fungus",
      "shroomlight",
      "weeping_vines",
      "crimson_nylium",
      "warped_nylium",
      "basalt",
      "polished_basalt",
      "soul_soil",
      "soul_fire",
      "nether_sprouts",
      "target",
      "stripped_crimson_stem",
      "stripped_warped_stem",
      "crimson_planks",
      "warped_planks",
      "crimson_door",
      "warped_door",
      "crimson_trapdoor",
      "warped_trapdoor",
      "crimson_standing_sign",
      "warped_standing_sign",
      "crimson_wall_sign",
      "warped_wall_sign",
      "crimson_stairs",
      "warped_stairs",
      "crimson_fence",
      "warped_fence",
      "crimson_fence_gate",
      "warped_fence_gate",
      "crimson_button",
      "warped_button",
      "crimson_pressure_plate",
      "warped_pressure_plate",
      "crimson_slab",
      "warped_slab",
      "crimson_double_slab",
      "warped_double_slab",
      "soul_torch",
      "soul_lantern",
      "netherite_block",
      "ancient_debris",
      "respawn_anchor",
      "blackstone",
      "polished_blackstone_bricks",
      "polished_blackstone_brick_stairs",
      "blackstone_stairs",
      "blackstone_wall",
      "polished_blackstone_brick_wall",
      "chiseled_polished_blackstone",
      "cracked_polished_blackstone_bricks",
      "gilded_blackstone",
      "blackstone_slab",
      "blackstone_double_slab",
      "polished_blackstone_brick_slab",
      "polished_blackstone_brick_double_slab",
      "chain",
      "twisting_vines",
      "nether_gold_ore",
      "crying_obsidian",
      "soul_campfire",
      "polished_blackstone",
      "polished_blackstone_stairs",
      "polished_blackstone_slab",
      "polished_blackstone_double_slab",
      "polished_blackstone_pressure_plate",
      "polished_blackstone_button",
      "polished_blackstone_wall",
      "warped_hyphae",
      "crimson_hyphae",
      "stripped_crimson_hyphae",
      "stripped_warped_hyphae",
      "chiseled_nether_bricks",
      "cracked_nether_bricks",
      "quartz_bricks"
    ],
    "particle_identifier": "('minecraft:' + $vanilla.unprefixed_particle_identifier)",
    "unprefixed_particle_identifier": ["arrow_spell_emitter",
        "balloon_gas_particle",
        "basic_bubble_particle",
        "basic_bubble_particle_manual",
        "basic_crit_particle",
        "basic_flame_particle",
        "basic_portal_particle",
        "basic_smoke_particle",
        "bleach",
        "block_destruct",
        "block_slide",
        "breaking_item_icon",
        "breaking_item_terrain",
        "bubble_column_bubble",
        "bubble_column_down_particle",
        "bubble_column_up_particle",
        "camera_shoot_explosion",
        "campfire_smoke_particle",
        "campfire_tall_smoke_particle",
        "cauldron_bubble_particle",
        "cauldron_explosion_emitter",
        "cauldron_spell_emitter",
        "cauldron_splash_particle",
        "colored_flame_particle",
        "conduit_absorb_particle",
        "conduit_attack_emitter",
        "conduit_particle",
        "critical_hit_emitter",
        "death_explosion_emitter",
        "dolphin_move_particle",
        "dragon_breath_fire",
        "dragon_breath_lingering",
        "dragon_breath_trail",
        "dragon_death_explosion_emitter",
        "dragon_destroy_block",
        "dragon_dying_explosion",
        "egg_destroy_emitter",
        "electric_spark_particle",
        "elephant_tooth_paste_vapor_particle",
        "enchanting_table_particle",
        "end_chest",
        "endrod",
        "evocation_fang_particle",
        "evoker_spell",
        "explosion_manual",
        "explosion_particle",
        "eye_of_ender_bubble_particle",
        "eyeofender_death_explode_particle",
        "falling_border_dust_particle",
        "falling_dust",
        "falling_dust_concrete_powder_particle",
        "falling_dust_dragon_egg_particle",
        "falling_dust_gravel_particle",
        "falling_dust_red_sand_particle",
        "falling_dust_sand_particle",
        "falling_dust_scaffolding_particle",
        "falling_dust_top_snow_particle",
        "fish_hook_particle",
        "fish_pos_particle",
        "guardian_attack_particle",
        "guardian_water_move_particle",
        "heart_particle",
        "honey_drip_particle",
        "huge_explosion_emitter",
        "huge_explosion_lab_misc_emitter",
        "ice_evaporation_emitter",
        "ink_emitter",
        "knockback_roar_particle",
        "lab_table_heatblock_dust_particle",
        "lab_table_misc_mystical_particle",
        "large_explosion",
        "lava_drip_particle",
        "lava_particle",
        "llama_spit_smoke",
        "magnesium_salts_emitter",
        "misc_fire_vapor_particle",
        "mob_block_spawn_emitter",
        "mob_portal",
        "mobflame_emitter",
        "mobflame_single",
        "mobspell_emitter",
        "mycelium_dust_particle",
        "nectar_drip_particle",
        "note_particle",
        "obsidian_glow_dust_particle",
        "phantom_trail_particle",
        "portal_directional",
        "portal_east_west",
        "portal_north_south",
        "rain_splash_particle",
        "redstone_ore_dust_particle",
        "redstone_repeater_dust_particle",
        "redstone_torch_dust_particle",
        "redstone_wire_dust_particle",
        "rising_border_dust_particle",
        "sculk_sensor_redstone_particle",
        "shulker_bullet",
        "silverfish_grief_emitter",
        "snowflake_particle",
        "sparkler_emitter",
        "splash_spell_emitter",
        "sponge_absorb_water_particle",
        "spore_blossom_ambient_particle",
        "spore_blossom_shower_particle",
        "squid_flee_particle",
        "squid_ink_bubble",
        "squid_move_particle",
        "stunned_emitter",
        "terrain",
        "totem_manual",
        "totem_particle",
        "trackingemitter",
        "underwater_torch_particle",
        "vibration_signal",
        "villager_angry",
        "villager_happy",
        "water_drip_particle",
        "water_evaporation_actor_emitter",
        "water_evaporation_bucket_emitter",
        "water_evaporation_manual",
        "water_splash_particle",
        "water_splash_particle_manual",
        "water_wake_particle",
        "wax_particle",
        "witchspell",
        "wither_boss_invulnerable"
        ],
    "sound_definitions": [
      "ambient.weather.lightning.impact",
      "ambient.weather.rain",
      "ambient.weather.thunder",
      "armor.equip_chain",
      "armor.equip_diamond",
      "armor.equip_generic",
      "armor.equip_gold",
      "armor.equip_iron",
      "armor.equip_leather",
      "beacon.activate",
      "beacon.ambient",
      "beacon.deactivate",
      "beacon.power",
      "block.bamboo.break",
      "block.bamboo.fall",
      "block.bamboo.hit",
      "block.bamboo.place",
      "block.bamboo.step",
      "block.bamboo_sapling.break",
      "block.bamboo_sapling.place",
      "block.barrel.close",
      "block.barrel.open",
      "block.beehive.drip",
      "block.beehive.enter",
      "block.beehive.exit",
      "block.beehive.shear",
      "block.beehive.work",
      "block.bell.hit",
      "block.blastfurnace.fire_crackle",
      "block.campfire.crackle",
      "block.cartography_table.use",
      "block.chorusflower.death",
      "block.chorusflower.grow",
      "block.composter.empty",
      "block.composter.fill",
      "block.composter.fill_success",
      "block.composter.ready",
      "block.end_portal.spawn",
      "block.end_portal_frame.fill",
      "block.false_permissions",
      "block.furnace.lit",
      "block.grindstone.use",
      "block.itemframe.add_item",
      "block.itemframe.break",
      "block.itemframe.place",
      "block.itemframe.remove_item",
      "block.itemframe.rotate_item",
      "block.lantern.break",
      "block.lantern.fall",
      "block.lantern.hit",
      "block.lantern.place",
      "block.lantern.step",
      "block.loom.use",
      "block.scaffolding.break",
      "block.scaffolding.climb",
      "block.scaffolding.fall",
      "block.scaffolding.hit",
      "block.scaffolding.place",
      "block.scaffolding.step",
      "block.smoker.smoke",
      "block.stonecutter.use",
      "block.sweet_berry_bush.break",
      "block.sweet_berry_bush.hurt",
      "block.sweet_berry_bush.pick",
      "block.sweet_berry_bush.place",
      "block.turtle_egg.break",
      "block.turtle_egg.crack",
      "block.turtle_egg.drop",
      "bottle.dragonbreath",
      "bubble.down",
      "bubble.downinside",
      "bubble.pop",
      "bubble.up",
      "bubble.upinside",
      "bucket.empty_fish",
      "bucket.empty_lava",
      "bucket.empty_water",
      "bucket.fill_fish",
      "bucket.fill_lava",
      "bucket.fill_water",
      "camera.take_picture",
      "cauldron.adddye",
      "cauldron.cleanarmor",
      "cauldron.cleanbanner",
      "cauldron.dyearmor",
      "cauldron.explode",
      "cauldron.fillpotion",
      "cauldron.fillwater",
      "cauldron.takepotion",
      "cauldron.takewater",
      "conduit.activate",
      "conduit.ambient",
      "conduit.attack",
      "conduit.deactivate",
      "conduit.short",
      "crossbow.loading.end",
      "crossbow.loading.middle",
      "crossbow.loading.start",
      "crossbow.quick_charge.end",
      "crossbow.quick_charge.middle",
      "crossbow.quick_charge.start",
      "crossbow.shoot",
      "damage.fallbig",
      "damage.fallsmall",
      "dig.cloth",
      "dig.grass",
      "dig.gravel",
      "dig.sand",
      "dig.snow",
      "dig.stone",
      "dig.wood",
      "elytra.loop",
      "entity.zombie.converted_to_drowned",
      "fall.cloth",
      "fall.egg",
      "fall.grass",
      "fall.gravel",
      "fall.ladder",
      "fall.sand",
      "fall.slime",
      "fall.snow",
      "fall.stone",
      "fall.wood",
      "fire.fire",
      "fire.ignite",
      "firework.blast",
      "firework.large_blast",
      "firework.launch",
      "firework.shoot",
      "firework.twinkle",
      "game.player.attack.nodamage",
      "game.player.attack.strong",
      "game.player.die",
      "game.player.hurt",
      "hit.cloth",
      "hit.grass",
      "hit.gravel",
      "hit.ladder",
      "hit.sand",
      "hit.slime",
      "hit.snow",
      "hit.stone",
      "hit.wood",
      "item.book.page_turn",
      "item.book.put",
      "item.shield.block",
      "item.trident.hit",
      "item.trident.hit_ground",
      "item.trident.return",
      "item.trident.riptide_1",
      "item.trident.riptide_2",
      "item.trident.riptide_3",
      "item.trident.throw",
      "item.trident.thunder",
      "jump.cloth",
      "jump.grass",
      "jump.gravel",
      "jump.sand",
      "jump.slime",
      "jump.snow",
      "jump.stone",
      "jump.wood",
      "land.cloth",
      "land.grass",
      "land.gravel",
      "land.sand",
      "land.slime",
      "land.snow",
      "land.stone",
      "land.wood",
      "leashknot.break",
      "leashknot.place",
      "liquid.lava",
      "liquid.lavapop",
      "liquid.water",
      "minecart.base",
      "minecart.inside",
      "mob.agent.spawn",
      "mob.armor_stand.break",
      "mob.armor_stand.hit",
      "mob.armor_stand.land",
      "mob.armor_stand.place",
      "mob.bat.death",
      "mob.bat.hurt",
      "mob.bat.idle",
      "mob.bat.takeoff",
      "mob.bee.aggressive",
      "mob.bee.death",
      "mob.bee.hurt",
      "mob.bee.loop",
      "mob.bee.pollinate",
      "mob.bee.sting",
      "mob.blaze.breathe",
      "mob.blaze.death",
      "mob.blaze.hit",
      "mob.blaze.shoot",
      "mob.cat.beg",
      "mob.cat.eat",
      "mob.cat.hiss",
      "mob.cat.hit",
      "mob.cat.meow",
      "mob.cat.purr",
      "mob.cat.purreow",
      "mob.cat.straymeow",
      "mob.chicken.hurt",
      "mob.chicken.plop",
      "mob.chicken.say",
      "mob.chicken.step",
      "mob.cow.hurt",
      "mob.cow.milk",
      "mob.cow.say",
      "mob.cow.step",
      "mob.creeper.death",
      "mob.creeper.say",
      "mob.dolphin.attack",
      "mob.dolphin.blowhole",
      "mob.dolphin.death",
      "mob.dolphin.eat",
      "mob.dolphin.hurt",
      "mob.dolphin.idle",
      "mob.dolphin.idle_water",
      "mob.dolphin.jump",
      "mob.dolphin.play",
      "mob.dolphin.splash",
      "mob.dolphin.swim",
      "mob.drowned.death",
      "mob.drowned.death_water",
      "mob.drowned.hurt",
      "mob.drowned.hurt_water",
      "mob.drowned.say",
      "mob.drowned.say_water",
      "mob.drowned.shoot",
      "mob.drowned.step",
      "mob.drowned.swim",
      "mob.elderguardian.curse",
      "mob.elderguardian.death",
      "mob.elderguardian.hit",
      "mob.elderguardian.idle",
      "mob.enderdragon.death",
      "mob.enderdragon.flap",
      "mob.enderdragon.growl",
      "mob.enderdragon.hit",
      "mob.endermen.death",
      "mob.endermen.hit",
      "mob.endermen.idle",
      "mob.endermen.portal",
      "mob.endermen.scream",
      "mob.endermen.stare",
      "mob.endermite.hit",
      "mob.endermite.kill",
      "mob.endermite.say",
      "mob.endermite.step",
      "mob.evocation_fangs.attack",
      "mob.evocation_illager.ambient",
      "mob.evocation_illager.cast_spell",
      "mob.evocation_illager.celebrate",
      "mob.evocation_illager.death",
      "mob.evocation_illager.hurt",
      "mob.evocation_illager.prepare_attack",
      "mob.evocation_illager.prepare_summon",
      "mob.evocation_illager.prepare_wololo",
      "mob.fish.flop",
      "mob.fish.hurt",
      "mob.fish.step",
      "mob.fox.aggro",
      "mob.fox.ambient",
      "mob.fox.bite",
      "mob.fox.death",
      "mob.fox.eat",
      "mob.fox.hurt",
      "mob.fox.screech",
      "mob.fox.sleep",
      "mob.fox.sniff",
      "mob.fox.spit",
      "mob.ghast.affectionate_scream",
      "mob.ghast.charge",
      "mob.ghast.death",
      "mob.ghast.fireball",
      "mob.ghast.moan",
      "mob.ghast.scream",
      "mob.guardian.ambient",
      "mob.guardian.attack_loop",
      "mob.guardian.death",
      "mob.guardian.flop",
      "mob.guardian.hit",
      "mob.guardian.land_death",
      "mob.guardian.land_hit",
      "mob.guardian.land_idle",
      "mob.horse.angry",
      "mob.horse.armor",
      "mob.horse.breathe",
      "mob.horse.death",
      "mob.horse.donkey.angry",
      "mob.horse.donkey.death",
      "mob.horse.donkey.hit",
      "mob.horse.donkey.idle",
      "mob.horse.eat",
      "mob.horse.gallop",
      "mob.horse.hit",
      "mob.horse.idle",
      "mob.horse.jump",
      "mob.horse.land",
      "mob.horse.leather",
      "mob.horse.skeleton.death",
      "mob.horse.skeleton.hit",
      "mob.horse.skeleton.idle",
      "mob.horse.soft",
      "mob.horse.wood",
      "mob.horse.zombie.death",
      "mob.horse.zombie.hit",
      "mob.horse.zombie.idle",
      "mob.husk.ambient",
      "mob.husk.death",
      "mob.husk.hurt",
      "mob.husk.step",
      "mob.irongolem.death",
      "mob.irongolem.hit",
      "mob.irongolem.throw",
      "mob.irongolem.walk",
      "mob.llama.angry",
      "mob.llama.death",
      "mob.llama.eat",
      "mob.llama.hurt",
      "mob.llama.idle",
      "mob.llama.spit",
      "mob.llama.step",
      "mob.llama.swag",
      "mob.magmacube.big",
      "mob.magmacube.jump",
      "mob.magmacube.small",
      "mob.mooshroom.convert",
      "mob.mooshroom.eat",
      "mob.mooshroom.suspicious_milk",
      "mob.ocelot.death",
      "mob.ocelot.idle",
      "mob.panda.bite",
      "mob.panda.cant_breed",
      "mob.panda.death",
      "mob.panda.eat",
      "mob.panda.hurt",
      "mob.panda.idle",
      "mob.panda.idle.aggressive",
      "mob.panda.idle.worried",
      "mob.panda.presneeze",
      "mob.panda.sneeze",
      "mob.panda.step",
      "mob.panda_baby.idle",
      "mob.parrot.death",
      "mob.parrot.eat",
      "mob.parrot.fly",
      "mob.parrot.hurt",
      "mob.parrot.idle",
      "mob.parrot.step",
      "mob.phantom.bite",
      "mob.phantom.death",
      "mob.phantom.hurt",
      "mob.phantom.idle",
      "mob.phantom.swoop",
      "mob.pig.boost",
      "mob.pig.death",
      "mob.pig.say",
      "mob.pig.step",
      "mob.pillager.celebrate",
      "mob.pillager.death",
      "mob.pillager.hurt",
      "mob.pillager.idle",
      "mob.polarbear.death",
      "mob.polarbear.hurt",
      "mob.polarbear.idle",
      "mob.polarbear.step",
      "mob.polarbear.warning",
      "mob.polarbear_baby.idle",
      "mob.rabbit.death",
      "mob.rabbit.hop",
      "mob.rabbit.hurt",
      "mob.rabbit.idle",
      "mob.ravager.ambient",
      "mob.ravager.bite",
      "mob.ravager.celebrate",
      "mob.ravager.death",
      "mob.ravager.hurt",
      "mob.ravager.roar",
      "mob.ravager.step",
      "mob.ravager.stun",
      "mob.sheep.say",
      "mob.sheep.shear",
      "mob.sheep.step",
      "mob.shulker.ambient",
      "mob.shulker.bullet.hit",
      "mob.shulker.close",
      "mob.shulker.close.hurt",
      "mob.shulker.death",
      "mob.shulker.hurt",
      "mob.shulker.open",
      "mob.shulker.shoot",
      "mob.shulker.teleport",
      "mob.silverfish.hit",
      "mob.silverfish.kill",
      "mob.silverfish.say",
      "mob.silverfish.step",
      "mob.skeleton.death",
      "mob.skeleton.hurt",
      "mob.skeleton.say",
      "mob.skeleton.step",
      "mob.slime.attack",
      "mob.slime.big",
      "mob.slime.death",
      "mob.slime.hurt",
      "mob.slime.jump",
      "mob.slime.small",
      "mob.slime.squish",
      "mob.snowgolem.death",
      "mob.snowgolem.hurt",
      "mob.snowgolem.shoot",
      "mob.spider.death",
      "mob.spider.say",
      "mob.spider.step",
      "mob.squid.ambient",
      "mob.squid.death",
      "mob.squid.hurt",
      "mob.stray.ambient",
      "mob.stray.death",
      "mob.stray.hurt",
      "mob.stray.step",
      "mob.turtle.ambient",
      "mob.turtle.death",
      "mob.turtle.hurt",
      "mob.turtle.step",
      "mob.turtle.swim",
      "mob.turtle_baby.born",
      "mob.turtle_baby.death",
      "mob.turtle_baby.hurt",
      "mob.turtle_baby.step",
      "mob.vex.ambient",
      "mob.vex.charge",
      "mob.vex.death",
      "mob.vex.hurt",
      "mob.villager.death",
      "mob.villager.haggle",
      "mob.villager.hit",
      "mob.villager.idle",
      "mob.villager.no",
      "mob.villager.yes",
      "mob.vindicator.celebrate",
      "mob.vindicator.death",
      "mob.vindicator.hurt",
      "mob.vindicator.idle",
      "mob.wanderingtrader.death",
      "mob.wanderingtrader.disappeared",
      "mob.wanderingtrader.drink_milk",
      "mob.wanderingtrader.drink_potion",
      "mob.wanderingtrader.haggle",
      "mob.wanderingtrader.hurt",
      "mob.wanderingtrader.idle",
      "mob.wanderingtrader.no",
      "mob.wanderingtrader.reappeared",
      "mob.wanderingtrader.yes",
      "mob.witch.ambient",
      "mob.witch.celebrate",
      "mob.witch.death",
      "mob.witch.drink",
      "mob.witch.hurt",
      "mob.witch.throw",
      "mob.wither.ambient",
      "mob.wither.break_block",
      "mob.wither.death",
      "mob.wither.hurt",
      "mob.wither.shoot",
      "mob.wither.spawn",
      "mob.wolf.bark",
      "mob.wolf.death",
      "mob.wolf.growl",
      "mob.wolf.hurt",
      "mob.wolf.panting",
      "mob.wolf.shake",
      "mob.wolf.step",
      "mob.wolf.whine",
      "mob.zombie.death",
      "mob.zombie.hurt",
      "mob.zombie.remedy",
      "mob.zombie.say",
      "mob.zombie.step",
      "mob.zombie.unfect",
      "mob.zombie.wood",
      "mob.zombie.woodbreak",
      "mob.zombie_villager.death",
      "mob.zombie_villager.hurt",
      "mob.zombie_villager.say",
      "mob.zombiepig.zpig",
      "mob.zombiepig.zpigangry",
      "mob.zombiepig.zpigdeath",
      "mob.zombiepig.zpighurt",
      "music.game",
      "music.game.creative",
      "music.game.credits",
      "music.game.end",
      "music.game.endboss",
      "music.game.nether",
      "music.menu",
      "note.banjo",
      "note.bass",
      "note.bassattack",
      "note.bd",
      "note.bell",
      "note.bit",
      "note.chime",
      "note.cow_bell",
      "note.didgeridoo",
      "note.flute",
      "note.guitar",
      "note.harp",
      "note.hat",
      "note.iron_xylophone",
      "note.pling",
      "note.snare",
      "note.xylophone",
      "portal.portal",
      "portal.travel",
      "portal.trigger",
      "raid.horn",
      "random.anvil_break",
      "random.anvil_land",
      "random.anvil_use",
      "random.bow",
      "random.bowhit",
      "random.break",
      "random.burp",
      "random.chestclosed",
      "random.chestopen",
      "random.click",
      "random.door_close",
      "random.door_open",
      "random.drink",
      "random.drink_honey",
      "random.eat",
      "random.enderchestclosed",
      "random.enderchestopen",
      "random.explode",
      "random.fizz",
      "random.fuse",
      "random.glass",
      "random.hurt",
      "random.levelup",
      "random.orb",
      "random.pop",
      "random.pop2",
      "random.potion.brewed",
      "random.screenshot",
      "random.shulkerboxclosed",
      "random.shulkerboxopen",
      "random.splash",
      "random.swim",
      "random.toast",
      "random.totem",
      "record.11",
      "record.13",
      "record.blocks",
      "record.cat",
      "record.chirp",
      "record.far",
      "record.mall",
      "record.mellohi",
      "record.stal",
      "record.strad",
      "record.wait",
      "record.ward",
      "step.cloth",
      "step.grass",
      "step.gravel",
      "step.ladder",
      "step.sand",
      "step.slime",
      "step.snow",
      "step.stone",
      "step.wood",
      "tile.piston.in",
      "tile.piston.out",
      "ui.cartography_table.take_result",
      "ui.loom.select_pattern",
      "ui.loom.take_result",
      "ui.stonecutter.take_result",
      "use.cloth",
      "use.grass",
      "use.gravel",
      "use.ladder",
      "use.sand",
      "use.slime",
      "use.snow",
      "use.stone",
      "use.wood",
      "vr.stutterturn"
    ],
    "fog_identifier": "('minecraft:' + $vanilla.unprefixed_fog_identifiers)",
    "unprefixed_fog_identifiers": [
      "fog_bamboo_jungle",
      "fog_bamboo_jungle_hills",
      "fog_basalt_deltas",
      "fog_beach",
      "fog_birch_forest",
      "fog_birch_forest_hills",
      "fog_cold_beach",
      "fog_cold_ocean",
      "fog_cold_taiga",
      "fog_cold_taiga_hills",
      "fog_cold_taiga_mutated",
      "fog_crimson_forest",
      "fog_deep_cold_ocean",
      "fog_deep_frozen_ocean",
      "fog_deep_lukewarm_ocean",
      "fog_deep_ocean",
      "fog_deep_warm_ocean",
      "fog_default",
      "fog_desert",
      "fog_desert_hills",
      "fog_extreme_hills_edge",
      "fog_extreme_hills",
      "fog_extreme_hills_mutated",
      "fog_extreme_hills_plus_trees",
      "fog_extreme_hills_plus_trees_mutated",
      "fog_flower_forest",
      "fog_forest",
      "fog_forest_hills",
      "fog_frozen_ocean",
      "fog_frozen_river",
      "fog_hell",
      "fog_ice_mountains",
      "fog_ice_plains",
      "fog_ice_plains_spikes",
      "fog_jungle_edge",
      "fog_jungle",
      "fog_jungle_hills",
      "fog_jungle_mutated",
      "fog_lukewarm_ocean",
      "fog_mega_spruce_taiga",
      "fog_mega_spruce_taiga_mutated",
      "fog_mega_taiga",
      "fog_mega_taiga_hills",
      "fog_mega_taiga_mutated",
      "fog_mesa_bryce",
      "fog_mesa",
      "fog_mesa_mutated",
      "fog_mesa_plateau",
      "fog_mesa_plateau_stone",
      "fog_mushroom_island",
      "fog_mushroom_island_shore",
      "fog_ocean",
      "fog_plains",
      "fog_river",
      "fog_roofed_forest",
      "fog_savanna",
      "fog_savanna_mutated",
      "fog_savanna_plateau",
      "fog_soulsand_valley",
      "fog_stone_beach",
      "fog_sunflower_plains",
      "fog_swampland",
      "fog_swampland_mutated",
      "fog_taiga",
      "fog_taiga_hills",
      "fog_taiga_mutated",
      "fog_the_end",
      "fog_warm_ocean",
      "fog_warped_forest"
    ]
  },
  "simple": {
    "biomes_client": {
      "biomes": {
        "default": {
          "water_surface_color": {
            "@meta": { "is_color": true, "is_value": true }
          },
          "water_surface_transparency": "$general.decimal",
          "$versioned_template": [
            {
              "$if": "$project_target_version >= 1.16.100",
              "$data": { "fog_identifier": "$general.fog_identifier" }
            },
            {
              "$if": "$project_target_version < 1.16.100",
              "$data": {
                "water_fog_color": {
                  "@meta": { "is_color": true, "is_value": true }
                },
                "water_fog_distance": "$general.number",
                "fog_color": { "@meta": { "is_color": true, "is_value": true } }
              }
            }
          ]
        },
        "$placeholder": "$simple.biomes_client.biomes.default"
      }
    },
    "terrain_texture": {
      "resource_pack_name": { "@meta": { "is_value": true } },
      "texture_name": ["atlas.terrain"],
      "padding": "$general.number",
      "num_mip_levels": "$general.number",
      "texture_data": {
        "$placeholder": {
          "textures": {
            "$dynamic.list.next_index": {
              "@import.value.block_png": "$dynamic.rp.block_png",
              "path": {
                "@meta": { "is_value": true },
                "@import.value.block_png": "$dynamic.rp.block_png"
              },
              "overlay_color": { "@meta": { "is_color": true } },
              "variations": {
                "$dynamic.list.next_index": {
                  "weight": "$general.number",
                  "path": {
                    "@meta": { "is_value": true },
                    "@import.value.block_png": "$dynamic.rp.block_png"
                  },
                  "overlay_color": { "@meta": { "is_color": true } }
                }
              },
              "pbr_emissive": "$general.decimal"
            }
          }
        }
      }
    },
    "item_texture": {
      "resource_pack_name": { "@meta": { "is_value": true } },
      "texture_name": ["atlas.items"],
      "texture_data": {
        "$placeholder": {
          "textures": {
            "$dynamic.list.next_index": {
              "@meta": { "is_value": true },
              "@import.value.item_png": "$dynamic.rp.item_png"
            }
          }
        }
      }
    },
    "lang_def": {
      "$dynamic.list.next_index": { "@meta": { "is_value": true } }
    },
    "blocks": {
      "format_version": { "$dynamic.list.index_triple": "$general.number" },
      "$placeholder": {
        "sound": "$simple.general.block_sounds",
        "brightness_gamma": "$general.decimal",
        "liquid": "$general.boolean",
        "isotropic": {
          "@meta": {
            "validate": {
              "confirm": "Bridge.Node.data === '' ? Bridge.Node.children.length > 2 : Bridge.Node.data !== 'true' && Bridge.Node.data !== 'false'",
              "then": {
                "show": true,
                "message": "Invalid \"isotropic\" structure"
              }
            }
          },
          "@import.value.boolean_simple": "$general.boolean",
          "up": "$general.boolean",
          "down": "$general.boolean",
          "side": "$general.boolean",
          "north": "$general.boolean",
          "south": "$general.boolean",
          "west": "$general.boolean",
          "east": "$general.boolean"
        },
        "textures": {
          "@import.value.terrain_texture_simple": "$dynamic.rp.terrain_texture",
          "up": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "down": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "side": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "north": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "south": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "west": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "east": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          }
        },
        "carried_textures": {
          "@import.value.terrain_texture_simple": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "up": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "down": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "side": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "north": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "south": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "west": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          },
          "east": {
            "@meta": { "is_value": true },
            "@import.value.terrain_texture_arg": "$dynamic.rp.terrain_texture"
          }
        }
      },
      "$vanilla.unprefixed_block_identifier and $dynamic.cache.block.identifiers": "$simple.blocks.$placeholder"
    },
    "flipbook_textures": {
      "$dynamic.list.next_index": {
        "flipbook_texture": {
          "@meta": { "is_value": true },
          "@import.value.block_png": "$dynamic.rp.block_png"
        },
        "atlas_tile": { "@meta": { "is_value": true } },
        "atlas_tile_variant": "$general.number",
        "atlas_index": "$general.number",
        "frames": { "$dynamic.list.next_index": "$general.number" },
        "replicate": "$general.number",
        "ticks_per_frame": "$general.number",
        "blend_frames": "$general.boolean"
      }
    },
    "general": {
      "sound_object": {
        "@import.value.sound_def": "$dynamic.cache.sound_definition.ids",
        "sound": {
          "@meta": { "is_value": true },
          "@import.value.sound_ids": "$dynamic.cache.sound_definition.ids"
        },
        "volume": "$simple.general.number_range",
        "pitch": "$simple.general.number_range"
      },
      "number_range": {
        "@import.value.decimal": "$general.decimal",
        "@meta": {
          "validate": {
            "confirm": "(Bridge.Node.children.length !== 2 || !Bridge.Node.is_array) && (Bridge.Node.data === '' || Number.isNaN(Number(Bridge.Node.data)))",
            "then": {
              "show": true,
              "message": "Invalid data type: Expected number or number range"
            }
          }
        },
        "$dynamic.list.index_pair": "$general.decimal"
      },
      "block_sounds": [
        "wood",
        "metal",
        "stone",
        "ancient_debris",
        "anvil",
        "bamboo",
        "bamboo_sapling",
        "barrier",
        "basalt",
        "glass",
        "nether_wart",
        "bone_block",
        "brick",
        "grass",
        "cloth",
        "chain",
        "stem",
        "nylium",
        "roots",
        "gravel",
        "honey_block",
        "coral",
        "nether_brick",
        "nether_gold_ore",
        "netherite",
        "netherrack",
        "scaffolding",
        "slime",
        "shroomlight",
        "lantern",
        "sweet_berry_bush",
        "vines"
      ]
    },
    "sounds": {
      "individual_event_sounds": {
        "events": { "$placeholder": "$simple.general.sound_object" }
      },
      "block_sounds": {
        "normal": {
          "volume": "$simple.general.number_range",
          "pitch": "$simple.general.number_range",
          "events": {
            "default": "$simple.general.sound_object",
            "item.use.on": "$simple.general.sound_object",
            "break": "$simple.general.sound_object",
            "hit": "$simple.general.sound_object",
            "place": "$simple.general.sound_object",
            "power.on": "$simple.general.sound_object",
            "power.off": "$simple.general.sound_object"
          }
        },
        "$placeholder": "$simple.sounds.block_sounds.normal"
      },
      "entity_sounds": {
        "defaults": {
          "volume": "$simple.general.number_range",
          "pitch": "$simple.general.number_range",
          "events": {
            "$placeholder": "$simple.general.sound_object",
            "fall.big": "$simple.general.sound_object",
            "fall.small": "$simple.general.sound_object",
            "splash": "$simple.general.sound_object",
            "swim": "$simple.general.sound_object",
            "fizz": "$simple.general.sound_object",
            "drink": "$simple.general.sound_object",
            "eat": "$simple.general.sound_object",
            "ambient": "$simple.general.sound_object",
            "ambient.tame": "$simple.general.sound_object",
            "flop": "$simple.general.sound_object",
            "hurt": "$simple.general.sound_object",
            "death": "$simple.general.sound_object",
            "ambient.in.water": "$simple.general.sound_object",
            "hurt.in.water": "$simple.general.sound_object",
            "death.in.water": "$simple.general.sound_object",
            "ambient.in.raid": "$simple.general.sound_object",
            "takeoff": "$simple.general.sound_object",
            "shoot": "$simple.general.sound_object",
            "step": "$simple.general.sound_object",
            "attack": "$simple.general.sound_object",
            "breathe": "$simple.general.sound_object",
            "jump": "$simple.general.sound_object",
            "mad": "$simple.general.sound_object",
            "stare": "$simple.general.sound_object",
            "sniff": "$simple.general.sound_object",
            "sleep": "$simple.general.sound_object",
            "spit": "$simple.general.sound_object",
            "warn": "$simple.general.sound_object",
            "scream": "$simple.general.sound_object",
            "charge": "$simple.general.sound_object"
          }
        },
        "entities": {
          "$vanilla.unprefixed_entity_identifier and $dynamic.cache.entity.identifiers": "$simple.sounds.entity_sounds.defaults"
        }
      },
      "interactive_sounds": {
        "block_sounds": {
          "normal": {
            "volume": "$simple.general.number_range",
            "pitch": "$simple.general.number_range",
            "events": {
              "default": "$simple.general.sound_object",
              "fall": "$simple.general.sound_object",
              "step": "$simple.general.sound_object",
              "jump": "$simple.general.sound_object",
              "land": "$simple.general.sound_object"
            }
          },
          "$placeholder": "$simple.sounds.interactive_sounds.block_sounds.normal"
        },
        "entity_sounds": {
          "defaults": {
            "volume": "$simple.general.number_range",
            "pitch": "$simple.general.number_range",
            "events": {
              "$placeholder": "$simple.general.sound_object",
              "fall": "$simple.general.sound_object",
              "jump": "$simple.general.sound_object"
            }
          },
          "entities": {
            "$vanilla.unprefixed_entity_identifier and $dynamic.cache.entity.identifiers": "$simple.sound.interactive_sounds.entity_sounds.defaults"
          }
        }
      }
    },
    "textures_list": { "$dynamic.list.next_index": "$dynamic.rp.textures" },
    "tick": {
      "values": { "$dynamic.list.next_index": "$dynamic.function_files" }
    },
    "sound_definitions": {
      "format_version": "$general.format_version",
      "sound_definitions": {
        "$placeholder": {
          "category": [
            "weather",
            "block",
            "hostile",
            "player",
            "neutral",
            "bucket",
            "record",
            "ui"
          ],
          "min_distance": "$general.decimal",
          "sounds": {
            "$dynamic.list.next_index": {
              "name": {
                "@meta": { "is_value": true },
                "@import.value": "$dynamic.rp.sound_file"
              },
              "stream": "$general.boolean",
              "load_on_low_memory": "$general.boolean",
              "volume": "$general.decimal",
              "@import.value": "$dynamic.rp.sound_file"
            }
          }
        }
      }
    }
  },
  "render_controller": {
    "main": {
      "format_version": "$general.format_version",
      "render_controllers": {
        "@meta": { "validate": "validateIDs.js" },
        "$placeholder": {
          "rebuild_animation_matrices": "$general.boolean",
          "light_color_multiplier": "$general.decimal",
          "ignore_lighting": "$general.boolean",
          "color": {
            "r": "$molang.embedded and $general.number",
            "g": "$molang.embedded and $general.number",
            "b": "$molang.embedded and $general.number",
            "a": "$molang.embedded and $general.number"
          },
          "overlay_color": {
            "r": "$molang.embedded and $general.number",
            "g": "$molang.embedded and $general.number",
            "b": "$molang.embedded and $general.number",
            "a": "$molang.embedded and $general.number"
          },
          "is_hurt_color": {
            "r": "$molang.embedded and $general.number",
            "g": "$molang.embedded and $general.number",
            "b": "$molang.embedded and $general.number",
            "a": "$molang.embedded and $general.number"
          },
          "on_fire_color": {
            "r": "$molang.embedded and $general.number",
            "g": "$molang.embedded and $general.number",
            "b": "$molang.embedded and $general.number",
            "a": "$molang.embedded and $general.number"
          },
          "uv_anim": {
            "offset": {
              "$dynamic.list.index_pair": {
                "@import.value.numbers": "$general.number",
                "$load": "$molang.embedded",
                "@meta": { "validate": null }
              }
            },
            "scale": {
              "$dynamic.list.index_pair": {
                "@import.value.numbers": "$general.number",
                "$load": "$molang.embedded",
                "@meta": { "validate": null }
              }
            }
          },
          "arrays": {
            "textures": {
              "$placeholder": {
                "$dynamic.list.next_index": {
                  "@meta": { "is_value": true },
                  "@import.value.texture_ref": "$render_controller.general.texture_ref"
                }
              }
            },
            "geometries": {
              "$placeholder": {
                "$dynamic.list.next_index": {
                  "@meta": { "is_value": true },
                  "@import.value.geometry_ref": "$render_controller.general.geometry_ref"
                }
              }
            },
            "materials": {
              "$placeholder": {
                "$dynamic.list.next_index": {
                  "@meta": { "is_value": true },
                  "@import.value.material_ref": "$render_controller.general.material_ref"
                }
              }
            }
          },
          "geometry": {
            "@import.value.geometry_ref": "$render_controller.general.geometry_ref",
            "$load": "$molang.embedded"
          },
          "part_visibility": {
            "$dynamic.list.next_index": {
              "*": "$molang.embedded",
              "$placeholder": "$molang.embedded"
            }
          },
          "materials": {
            "$dynamic.list.next_index": {
              "*": {
                "@import.value.material_ref": "$render_controller.general.material_ref",
                "$load": "$molang.embedded"
              },
              "$placeholder": {
                "@import.value.material_ref": "$render_controller.general.material_ref",
                "$load": "$molang.embedded"
              }
            }
          },
          "textures": {
            "$dynamic.list.next_index": {
              "@import.value.texture_ref": "$render_controller.general.texture_ref",
              "$load": "$molang.embedded"
            }
          }
        }
      }
    },
    "general": {
      "texture_ref": "'Texture.' + ($dynamic.cache.client_entity.texture_references and $dynamic.cache.attachable.texture_references)",
      "material_ref": "'Material.' + ($dynamic.cache.client_entity.material_references and $dynamic.cache.attachable.material_references)",
      "geometry_ref": "'Geometry.' + ($dynamic.cache.client_entity.geometry_references and $dynamic.cache.attachable.geometry_references)"
    }
  },
  "biome": {
    "components": {
      "@meta": {
        "expand_path_exceptions": [
          "minecraft:nether_surface",
          "minecraft:the_end_surface"
        ]
      },
      "minecraft:ignore_automatic_features": "$general.boolean",
      "minecraft:climate": {
        "downfall": "$general.decimal",
        "snow_accumulation": { "$dynamic.list.index_pair": "$general.decimal" },
        "temperature": "$general.decimal",
        "red_spores": "$general.decimal",
        "blue_spores": "$general.decimal",
        "ash": "$general.decimal",
        "white_ash": "$general.decimal"
      },
      "minecraft:nether_generation_rules": {
        "target_temperature": "$general.decimal",
        "target_humidity": "$general.decimal",
        "target_altitude": "$general.decimal",
        "target_weirdness": "$general.decimal",
        "weight": "$general.decimal"
      },
      "minecraft:overworld_height": {
        "noise_type": "$biome.general.noise_type",
        "noise_params": { "$dynamic.list.index_pair": "$general.decimal" }
      },
      "minecraft:surface_parameters": {
        "sea_floor_depth": "$general.number",
        "sea_floor_material": "$general.block_identifier",
        "sea_material": "$general.block_identifier",
        "floor_depth": "$general.number",
        "floor_material": "$general.block_identifier",
        "foundation_material": "$general.block_identifier",
        "mid_material": "$general.block_identifier",
        "top_material": "$general.block_identifier"
      },
      "minecraft:swamp_surface": "$biome.components.minecraft:surface_parameters",
      "minecraft:frozen_ocean_surface": "$biome.components.minecraft:surface_parameters",
      "minecraft:capped_surface": {
        "floor_materials": {
          "$dynamic.list.next_index": "$general.block_identifier"
        },
        "ceiling_materials": {
          "$dynamic.list.next_index": "$general.block_identifier"
        },
        "sea_material": "$general.block_identifier",
        "foundation_material": "$general.block_identifier",
        "beach_material": "$general.block_identifier"
      },
      "minecraft:mesa_surface": {
        "$load": "$biome.components.minecraft:surface_parameters",
        "clay_material": "$general.block_identifier",
        "hard_clay_material": "$general.block_identifier",
        "bryce_pillars": "$general.boolean",
        "has_forest": "$general.boolean"
      },
      "minecraft:the_end_surface": {},
      "minecraft:overworld_generation_rules": {
        "hills_transformation": {
          "$dynamic.list.next_index": "$dynamic.biome.name_references and $biome.general.vanilla_biomes"
        },
        "mutate_transformation": {
          "$dynamic.list.next_index": "$dynamic.biome.name_references and $biome.general.vanilla_biomes"
        },
        "shore_transformation": {
          "$dynamic.list.next_index": "$dynamic.biome.name_references and $biome.general.vanilla_biomes"
        },
        "river_transformation": {
          "$dynamic.list.next_index": "$dynamic.biome.name_references and $biome.general.vanilla_biomes"
        },
        "generate_for_climates": {
          "$dynamic.list.next_index": {
            "0": "$biome.general.temperature",
            "1": "$general.number"
          }
        }
      },
      "minecraft:surface_material_adjustments": {
        "adjustments": {
          "$dynamic.list.next_index": {
            "materials": {
              "foundation_material": "$general.block_identifier",
              "sea_floor_material": "$general.block_identifier",
              "floor_material": "$general.block_identifier",
              "mid_material": "$general.block_identifier",
              "top_material": "$general.block_identifier"
            },
            "noise_range": { "$dynamic.list.index_pair": "$general.decimal" },
            "noise_frequency_scale": "$general.decimal"
          }
        }
      },
      "minecraft:forced_features": {
        "$feature_rule.general.passes": {
          "$dynamic.list.next_index": {
            "iterations": "$molang.embedded",
            "scatter_chance": "$feature.general.chance_information",
            "coordinate_eval_order": "$feature.general.coordinate_eval_order",
            "x": {
              "@meta": { "is_molang": true },
              "@import.value.molang": "$molang.general.boolean and ('query.' + $molang.general.query)",
              "extent": {
                "$dynamic.list.index_pair": {
                  "@import.value": "$general.number and ('query.' + $molang.general.query)",
                  "@meta": {
                    "validate": {
                      "confirm": "Bridge.Node.data === '' || Bridge.Node.data === 'true' || Bridge.Node.data === 'false'",
                      "then": {
                        "show": true,
                        "message": "Invalid data type: Expected number or MoLang"
                      }
                    }
                  }
                }
              },
              "distribution": "$feature.general.distributions",
              "step_size": "$general.number",
              "grid_offset": "$general.number"
            },
            "z": {
              "@meta": { "is_molang": true },
              "@import.value.molang": "$molang.general.boolean and ('query.' + $molang.general.query)",
              "extent": {
                "$dynamic.list.index_pair": {
                  "@import.value": "$general.number and ('query.' + $molang.general.query)",
                  "@meta": {
                    "validate": {
                      "confirm": "Bridge.Node.data === '' || Bridge.Node.data === 'true' || Bridge.Node.data === 'false'",
                      "then": {
                        "show": true,
                        "message": "Invalid data type: Expected number or MoLang"
                      }
                    }
                  }
                }
              },
              "distribution": "$feature.general.distributions",
              "step_size": "$general.number",
              "grid_offset": "$general.number"
            },
            "y": {
              "@meta": { "is_molang": true },
              "@import.value.molang": "$molang.general.boolean and ('query.' + $molang.general.query)",
              "extent": {
                "$dynamic.list.index_pair": {
                  "@import.value": "$general.number and ('query.' + $molang.general.query)",
                  "@meta": {
                    "validate": {
                      "confirm": "Bridge.Node.data === '' || Bridge.Node.data === 'true' || Bridge.Node.data === 'false'",
                      "then": {
                        "show": true,
                        "message": "Invalid data type: Expected number or MoLang"
                      }
                    }
                  }
                }
              },
              "distribution": "$feature.general.distributions",
              "step_size": "$general.number",
              "grid_offset": "$general.number"
            },
            "places_feature": {
              "$dynamic.list.next_index": {
                "@meta": { "is_value": true },
                "@import.value.feature_ref": "$dynamic.biome.feature_references"
              }
            }
          }
        }
      },
      "$versioned_template.minecraft:mountain_parameters": [
        {
          "$if": "$format_version >= 1.16.210",
          "$data": {
            "top_slide": { "enabled": "$general.boolean" },
            "steep_material_adjustment": {
              "material": "$general.block_identifier",
              "north_slopes": "$general.boolean",
              "east_slopes": "$general.boolean",
              "south_slopes": "$general.boolean",
              "west_slopes": "$general.boolean"
            }
          }
        }
      ]
    },
    "tags": {
      "animal": {},
      "bamboo": {},
      "beach": {},
      "birch": {},
      "cold": {},
      "deep": {},
      "desert": {},
      "edge": {},
      "extreme_hills": {},
      "flower_forest": {},
      "frozen": {},
      "hills": {},
      "ice": {},
      "ice_plains": {},
      "jungle": {},
      "forest": {},
      "lukewarm": {},
      "mega": {},
      "mesa": {},
      "monster": {},
      "mooshroom_island": {},
      "mountain": {},
      "mutated": {},
      "nether": {},
      "no_legacy_worldgen": {},
      "ocean": {},
      "overworld": {},
      "plains": {},
      "plateau": {},
      "savanna": {},
      "swamp": {},
      "rare": {},
      "river": {},
      "roofed": {},
      "shore": {},
      "stone": {},
      "taiga": {},
      "warm": {},
      "overworld_generation": {}
    },
    "main": {
      "format_version": "$general.format_version",
      "minecraft:biome": {
        "description": {
          "identifier": {
            "@meta": { "is_value": true },
            "@import.value.biome_id": "$dynamic.current_file_name"
          }
        },
        "components": "$biome.components and $biome.tags"
      }
    },
    "general": {
      "noise_type": [
        "beach",
        "default",
        "extreme",
        "taiga",
        "ocean",
        "mountains",
        "default_mutated",
        "deep_ocean",
        "lowlands",
        "less_extreme",
        "stone_beach",
        "swamp",
        "river",
        "mushroom",
        "highlands"
      ],
      "temparature": ["warm", "lukewarm", "medium", "cold", "frozen"],
      "vanilla_biomes": [
        "bamboo_jungle",
        "bamboo_jungle_hills",
        "beach",
        "birch_forest",
        "birch_forest_hills",
        "birch_forest_hills_mutated",
        "birch_forest_mutated",
        "cold_beach",
        "cold_ocean",
        "cold_taiga",
        "cold_taiga_hills",
        "cold_taiga_mutated",
        "deep_cold_ocean",
        "deep_frozen_ocean",
        "deep_lukewarm_ocean",
        "deep_ocean",
        "deep_warm_ocean",
        "desert",
        "desert_hills",
        "desert_mutated",
        "extreme_hills",
        "extreme_hills_edge",
        "extreme_hills_mutated",
        "extreme_hills_plus_trees",
        "extreme_hills_plus_trees_mutated",
        "flower_forest",
        "forest",
        "forest_hills",
        "frozen_ocean",
        "frozen_river",
        "hell",
        "ice_mountains",
        "ice_plains",
        "ice_plains_spikes",
        "jungle",
        "jungle_edge",
        "jungle_edge_mutated",
        "jungle_hills",
        "jungle_mutated",
        "legacy_frozen_ocean",
        "lukewarm_ocean",
        "mega_taiga",
        "mega_taiga_hills",
        "mesa",
        "mesa_bryce",
        "mesa_plateau",
        "mesa_plateau_mutated",
        "mesa_plateau_stone",
        "mesa_plateau_stone_mutated",
        "mushroom_island",
        "mushroom_island_shore",
        "ocean",
        "plains",
        "redwood_taiga_hills_mutated",
        "redwood_taiga_mutated",
        "river",
        "roofed_forest",
        "roofed_forest_mutated",
        "savanna",
        "savanna_mutated",
        "savanna_plateau",
        "savanna_plateau_mutated",
        "stone_beach",
        "sunflower_plains",
        "swampland",
        "swampland_mutated",
        "taiga",
        "taiga_hills",
        "taiga_mutated",
        "the_end",
        "warm_ocean"
      ],
      "distributions": [
        "uniform",
        "gaussian",
        "inverse_gaussian",
        "fixed_grid",
        "jittered_grid"
      ]
    }
  },
  "spawn_rule": {
    "components": {
      "@meta": {
        "expand_path_exceptions": [
          "minecraft:spawns_on_surface",
          "minecraft:spawns_underwater"
        ]
      },
      "minecraft:spawns_on_surface": {},
      "minecraft:spawns_underground": {},
      "minecraft:spawns_underwater": {},
      "minecraft:spawns_on_block_filter": {
        "$dynamic.list.next_index": "$general.block_identifier"
      },
      "minecraft:spawns_on_block_prevented_filter": {
        "$dynamic.list.next_index": "$general.block_identifier"
      },
      "minecraft:brightness_filter": {
        "min": "$general.number",
        "max": "$general.number",
        "adjust_for_weather": "$general.boolean"
      },
      "minecraft:difficulty_filter": {
        "min": "$general.game_difficulty",
        "max": "$general.game_difficulty"
      },
      "minecraft:weight": { "default": "$general.number" },
      "minecraft:herd": {
        "min_size": "$general.number",
        "max_size": "$general.number",
        "event_skip_count": "$general.number",
        "event": {
          "@meta": { "is_value": true },
          "@import.value.entity_event": "$dynamic.cache.entity.events"
        },
        "initial_event_count": "$general.number",
        "initial_event": {
          "@meta": { "is_value": true },
          "@import.value.entity_event": "$dynamic.cache.entity.events"
        }
      },
      "minecraft:density_limit": {
        "surface": "$general.number",
        "underground": "$general.number"
      },
      "minecraft:biome_filter": {
        "all_of": {
          "$dynamic.list.next_index": "$spawn_rule.components.minecraft:biome_filter"
        },
        "any_of": {
          "$dynamic.list.next_index": "$spawn_rule.components.minecraft:biome_filter"
        },
        "test": ["has_biome_tag"],
        "operator": "$entity.general.filter_operators",
        "value": "$general.biome_tag and $dynamic.cache.biome.tags"
      },
      "minecraft:player_in_village_filter": {
        "distance": "$general.number",
        "village_border_tolerance": "$general.number"
      },
      "minecraft:delay_filter": {
        "min": "$general.number",
        "max": "$general.number",
        "identifier": "$general.entity_identifier",
        "spawn_chance": "$general.number"
      },
      "minecraft:distance_filter": {
        "min": "$general.number",
        "max": "$general.number"
      },
      "minecraft:height_filter": {
        "min": "$general.number",
        "max": "$general.number"
      },
      "minecraft:permute_type": {
        "$dynamic.list.next_index": {
          "weight": "$general.number",
          "entity_type": "$general.entity_type"
        }
      },
      "minecraft:world_age_filter": {
        "min": "$general.number",
        "max": "$general.number"
      }
    },
    "main": {
      "format_version": "$general.format_version",
      "minecraft:spawn_rules": {
        "description": {
          "identifier": "$general.entity_identifier",
          "population_control": "$spawn_rule.general.population_control"
        },
        "conditions": { "$dynamic.list.next_index": "$spawn_rule.components" }
      }
    },
    "general": {
      "population_control": ["animal", "monster", "pillager", "water_animal"]
    }
  },
  "animation_controller": {
    "main": {
      "format_version": "$general.format_version",
      "animation_controllers": {
        "@meta": { "validate": "validateIDs.js" },
        "$placeholder": {
          "initial_state": "$dynamic.animation_controller.current_states",
          "states": {
            "default": {
              "animations": {
                "$dynamic.list.next_index": {
                  "$dynamic.cache.animation_references": {},
                  "$placeholder": "$molang.embedded",
                  "@import.value.query": "$dynamic.cache.animation_references"
                }
              },
              "transitions": {
                "$dynamic.list.next_index": {
                  "$dynamic.animation_controller.current_states": "$molang.embedded"
                }
              },
              "on_entry": {
                "$dynamic.list.next_index": "('@s ' + $dynamic.entity.all_events) and $function.embedded"
              },
              "on_exit": {
                "$dynamic.list.next_index": "('@s ' + $dynamic.entity.all_events) and $function.embedded"
              }
            },
            "$placeholder": "$animation_controller.main.animation_controllers.$placeholder.states.default"
          }
        }
      }
    },
    "rp_main": {
      "format_version": "$general.format_version",
      "animation_controllers": {
        "@meta": { "validate": "validateIDs.js" },
        "$placeholder": {
          "initial_state": "$dynamic.animation_controller.current_states",
          "states": {
            "default": {
              "blend_transition": "$general.decimal",
              "blend_via_shortest_path": "$general.boolean",
              "parameters": { "$dynamic.list.next_index": "$molang.embedded" },
              "variables": {
                "$placeholder": {
                  "input": "$molang.embedded",
                  "remap_curve": { "$general.decimal": "$general.decimal" }
                }
              },
              "animations": {
                "$dynamic.list.next_index": {
                  "$dynamic.cache.client_entity.animation_references": {},
                  "$placeholder": "$molang.embedded",
                  "@import.value.anim_refs": "$dynamic.cache.client_entity.animation_references"
                }
              },
              "transitions": {
                "$dynamic.list.next_index": {
                  "$dynamic.animation_controller.current_states": "$molang.embedded"
                }
              },
              "particle_effects": {
                "$dynamic.list.next_index": {
                  "effect": "$dynamic.cache.client_entity.particle_references",
                  "locator": { "@meta": { "is_value": true } }
                }
              },
              "sound_effects": {
                "$dynamic.list.next_index": {
                  "effect": "$dynamic.cache.client_entity.sound_references"
                }
              }
            },
            "$placeholder": "$animation_controller.rp_main.animation_controllers.$placeholder.states.default"
          }
        }
      }
    }
  },
  "client_item": {
    "main": {
      "format_version": "$general.format_version",
      "minecraft:item": {
        "description": {
          "identifier": "$general.file_identifier and $general.item_identifier",
          "category": "$general.item_category"
        },
        "components": {
          "minecraft:icon": {
            "@meta": { "is_value": true },
            "@import.value": "$dynamic.rp.item_textures"
          },
          "minecraft:use_animation": [
            "bow",
            "eat",
            "drink",
            "crossbow",
            "camera"
          ],
          "minecraft:hover_text_color": "$general.minecraft_color",
          "minecraft:render_offsets": "$client_item.general.render_offsets"
        }
      }
    },
    "general": {
      "render_offsets": [
        "doors",
        "sign",
        "anvils",
        "apple",
        "miscellaneous",
        "arrows",
        "bamboo",
        "beacon",
        "bed",
        "meats",
        "beetroot",
        "seeds",
        "blaze_rod",
        "bone",
        "books",
        "bow",
        "stew",
        "brewing_stand",
        "bricks",
        "buckets",
        "carrots",
        "fishing_rods",
        "cauldron",
        "boots",
        "chestplates",
        "helmets",
        "leggings",
        "powders",
        "fishes",
        "walls",
        "comparator",
        "rabbit",
        "cookie",
        "crossbow",
        "tools",
        "plants",
        "bottles",
        "dried_kelp",
        "wings",
        "emerald",
        "empty_map",
        "fences",
        "feather",
        "fireworks",
        "flint",
        "flint_and_steel",
        "flower_pot",
        "frame",
        "ghast_tear",
        "ingots",
        "gold_nugget",
        "hopper",
        "armor",
        "kelp",
        "lead",
        "melon",
        "name_tag",
        "nether_wart",
        "bricks",
        "painting",
        "paper",
        "quartz",
        "rabbit_foot",
        "rabbit_hide",
        "flowers",
        "sugar_cane",
        "repeater",
        "flesh",
        "saplings",
        "grass",
        "shears",
        "shield",
        "skull",
        "slime_ball",
        "snow",
        "glistering_melon",
        "spider_eye",
        "splash_potions",
        "stick",
        "string",
        "trident",
        "lilly_pad",
        "wheat"
      ],
      "armor_types": ["leather", "chain", "diamond", "iron", "gold"]
    }
  },
  "texture_set": {
    "main": {
      "format_version": "$general.format_version",
      "minecraft:texture_set": {
        "color": {
          "@meta": { "is_color": true },
          "@import.value.texture": "$dynamic.rp.terrain_texture"
        },
        "color_unlit": {
          "@meta": { "is_color": true },
          "@import.value.texture": "$dynamic.rp.terrain_texture"
        },
        "normal": {
          "@meta": { "is_color": true },
          "@import.value.texture": "$dynamic.rp.terrain_texture"
        },
        "heightmap": {
          "@meta": { "is_color": true },
          "@import.value.texture": "$dynamic.rp.terrain_texture"
        },
        "metalness_emissive_roughness": {
          "@meta": { "is_color": true },
          "@import.value.texture": "$dynamic.rp.terrain_texture"
        },
        "metalness": {
          "@meta": { "is_color": true },
          "@import.value.texture": "$dynamic.rp.terrain_texture"
        },
        "emissive": {
          "@meta": { "is_color": true },
          "@import.value.texture": "$dynamic.rp.terrain_texture"
        },
        "roughness": {
          "@meta": { "is_color": true },
          "@import.value.texture": "$dynamic.rp.terrain_texture"
        }
      }
    }
  },
  "feature_rule": {
    "main": {
      "format_version": "$general.format_version",
      "minecraft:feature_rules": {
        "description": {
          "identifier": "$general.file_identifier",
          "places_feature": {
            "@meta": { "is_value": true },
            "@import.value.feature_ref": "$dynamic.biome.feature_references"
          }
        },
        "conditions": {
          "placement_pass": "$feature_rule.general.passes",
          "minecraft:biome_filter": "$spawn_rule.components.minecraft:biome_filter"
        },
        "distribution": {
          "iterations": "$general.number",
          "coordinate_eval_order": "$feature.general.coordinate_eval_orders",
          "scatter_chance": "$feature.main.minecraft:scatter_feature.scatter_chance",
          "x": "$feature.main.minecraft:scatter_feature.x",
          "y": "$feature.main.minecraft:scatter_feature.x",
          "z": "$feature.main.minecraft:scatter_feature.x"
        }
      }
    },
    "general": {
      "passes": [
        "first_pass",
        "before_underground_pass",
        "underground_pass",
        "after_underground_pass",
        "before_surface_pass",
        "surface_pass",
        "after_surface_pass",
        "before_liquids_pass",
        "liquids_pass",
        "after_liquids_pass",
        "before_sky_pass",
        "sky_pass",
        "after_sky_pass",
        "final_pass"
      ]
    }
  }
}
